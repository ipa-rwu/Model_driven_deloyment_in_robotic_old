/**
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.deployModel.util;

import de.fraunhofer.ipa.deployment.deployModel.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see de.fraunhofer.ipa.deployment.deployModel.DeployModelPackage
 * @generated
 */
public class DeployModelAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DeployModelPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeployModelAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = DeployModelPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeployModelSwitch<Adapter> modelSwitch =
    new DeployModelSwitch<Adapter>()
    {
      @Override
      public Adapter caseYaml(Yaml object)
      {
        return createYamlAdapter();
      }
      @Override
      public Adapter caseYamlContent(YamlContent object)
      {
        return createYamlContentAdapter();
      }
      @Override
      public Adapter caseMonolithicImplementationDescription(MonolithicImplementationDescription object)
      {
        return createMonolithicImplementationDescriptionAdapter();
      }
      @Override
      public Adapter caseNewImplementationArtifact(NewImplementationArtifact object)
      {
        return createNewImplementationArtifactAdapter();
      }
      @Override
      public Adapter caseImplementationArtifactDescription(ImplementationArtifactDescription object)
      {
        return createImplementationArtifactDescriptionAdapter();
      }
      @Override
      public Adapter caseReuseImplementationArtifact(ReuseImplementationArtifact object)
      {
        return createReuseImplementationArtifactAdapter();
      }
      @Override
      public Adapter caseImplementationArtifactAbstract(ImplementationArtifactAbstract object)
      {
        return createImplementationArtifactAbstractAdapter();
      }
      @Override
      public Adapter caseDeploymentRequirements(DeploymentRequirements object)
      {
        return createDeploymentRequirementsAdapter();
      }
      @Override
      public Adapter caseResourceRequirements(ResourceRequirements object)
      {
        return createResourceRequirementsAdapter();
      }
      @Override
      public Adapter casePropertyExpressType(PropertyExpressType object)
      {
        return createPropertyExpressTypeAdapter();
      }
      @Override
      public Adapter caseCommonPropertySingleValue(CommonPropertySingleValue object)
      {
        return createCommonPropertySingleValueAdapter();
      }
      @Override
      public Adapter caseCommonPropertyMultiValue(CommonPropertyMultiValue object)
      {
        return createCommonPropertyMultiValueAdapter();
      }
      @Override
      public Adapter caseMultiValueList(MultiValueList object)
      {
        return createMultiValueListAdapter();
      }
      @Override
      public Adapter caseMultiValueListPreList(MultiValueListPreList object)
      {
        return createMultiValueListPreListAdapter();
      }
      @Override
      public Adapter caseMultiValueListBracket(MultiValueListBracket object)
      {
        return createMultiValueListBracketAdapter();
      }
      @Override
      public Adapter caseBuildRequirements(BuildRequirements object)
      {
        return createBuildRequirementsAdapter();
      }
      @Override
      public Adapter caseReqBuildDependencies(ReqBuildDependencies object)
      {
        return createReqBuildDependenciesAdapter();
      }
      @Override
      public Adapter caseDependencyTypes(DependencyTypes object)
      {
        return createDependencyTypesAdapter();
      }
      @Override
      public Adapter caseLocalPackage(LocalPackage object)
      {
        return createLocalPackageAdapter();
      }
      @Override
      public Adapter caseGitPackage(GitPackage object)
      {
        return createGitPackageAdapter();
      }
      @Override
      public Adapter caseReqDependencyRepositories(ReqDependencyRepositories object)
      {
        return createReqDependencyRepositoriesAdapter();
      }
      @Override
      public Adapter caseAptRepositoryInstance(AptRepositoryInstance object)
      {
        return createAptRepositoryInstanceAdapter();
      }
      @Override
      public Adapter caseStackImplementationDescription(StackImplementationDescription object)
      {
        return createStackImplementationDescriptionAdapter();
      }
      @Override
      public Adapter casePackageDescription(PackageDescription object)
      {
        return createPackageDescriptionAdapter();
      }
      @Override
      public Adapter caseImageDescription(ImageDescription object)
      {
        return createImageDescriptionAdapter();
      }
      @Override
      public Adapter caseRepositoryDescription(RepositoryDescription object)
      {
        return createRepositoryDescriptionAdapter();
      }
      @Override
      public Adapter caseRepositorySpec(RepositorySpec object)
      {
        return createRepositorySpecAdapter();
      }
      @Override
      public Adapter caseRepository(Repository object)
      {
        return createRepositoryAdapter();
      }
      @Override
      public Adapter caseCISetting(CISetting object)
      {
        return createCISettingAdapter();
      }
      @Override
      public Adapter caseMultiMonolithicImplementationNameList(MultiMonolithicImplementationNameList object)
      {
        return createMultiMonolithicImplementationNameListAdapter();
      }
      @Override
      public Adapter caseMultiMonolithicImplementationNamePreList(MultiMonolithicImplementationNamePreList object)
      {
        return createMultiMonolithicImplementationNamePreListAdapter();
      }
      @Override
      public Adapter caseMultiMonolithicImplementationNameListBracket(MultiMonolithicImplementationNameListBracket object)
      {
        return createMultiMonolithicImplementationNameListBracketAdapter();
      }
      @Override
      public Adapter caseCIParameters(CIParameters object)
      {
        return createCIParametersAdapter();
      }
      @Override
      public Adapter caseGroupedProperties(GroupedProperties object)
      {
        return createGroupedPropertiesAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.Yaml <em>Yaml</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.Yaml
   * @generated
   */
  public Adapter createYamlAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.YamlContent <em>Yaml Content</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.YamlContent
   * @generated
   */
  public Adapter createYamlContentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.MonolithicImplementationDescription <em>Monolithic Implementation Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.MonolithicImplementationDescription
   * @generated
   */
  public Adapter createMonolithicImplementationDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.NewImplementationArtifact <em>New Implementation Artifact</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.NewImplementationArtifact
   * @generated
   */
  public Adapter createNewImplementationArtifactAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.ImplementationArtifactDescription <em>Implementation Artifact Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.ImplementationArtifactDescription
   * @generated
   */
  public Adapter createImplementationArtifactDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.ReuseImplementationArtifact <em>Reuse Implementation Artifact</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.ReuseImplementationArtifact
   * @generated
   */
  public Adapter createReuseImplementationArtifactAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.ImplementationArtifactAbstract <em>Implementation Artifact Abstract</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.ImplementationArtifactAbstract
   * @generated
   */
  public Adapter createImplementationArtifactAbstractAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.DeploymentRequirements <em>Deployment Requirements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.DeploymentRequirements
   * @generated
   */
  public Adapter createDeploymentRequirementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.ResourceRequirements <em>Resource Requirements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.ResourceRequirements
   * @generated
   */
  public Adapter createResourceRequirementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.PropertyExpressType <em>Property Express Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.PropertyExpressType
   * @generated
   */
  public Adapter createPropertyExpressTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.CommonPropertySingleValue <em>Common Property Single Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.CommonPropertySingleValue
   * @generated
   */
  public Adapter createCommonPropertySingleValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.CommonPropertyMultiValue <em>Common Property Multi Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.CommonPropertyMultiValue
   * @generated
   */
  public Adapter createCommonPropertyMultiValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.MultiValueList <em>Multi Value List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.MultiValueList
   * @generated
   */
  public Adapter createMultiValueListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.MultiValueListPreList <em>Multi Value List Pre List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.MultiValueListPreList
   * @generated
   */
  public Adapter createMultiValueListPreListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.MultiValueListBracket <em>Multi Value List Bracket</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.MultiValueListBracket
   * @generated
   */
  public Adapter createMultiValueListBracketAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.BuildRequirements <em>Build Requirements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.BuildRequirements
   * @generated
   */
  public Adapter createBuildRequirementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.ReqBuildDependencies <em>Req Build Dependencies</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.ReqBuildDependencies
   * @generated
   */
  public Adapter createReqBuildDependenciesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.DependencyTypes <em>Dependency Types</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.DependencyTypes
   * @generated
   */
  public Adapter createDependencyTypesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.LocalPackage <em>Local Package</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.LocalPackage
   * @generated
   */
  public Adapter createLocalPackageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.GitPackage <em>Git Package</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.GitPackage
   * @generated
   */
  public Adapter createGitPackageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.ReqDependencyRepositories <em>Req Dependency Repositories</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.ReqDependencyRepositories
   * @generated
   */
  public Adapter createReqDependencyRepositoriesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.AptRepositoryInstance <em>Apt Repository Instance</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.AptRepositoryInstance
   * @generated
   */
  public Adapter createAptRepositoryInstanceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.StackImplementationDescription <em>Stack Implementation Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.StackImplementationDescription
   * @generated
   */
  public Adapter createStackImplementationDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.PackageDescription <em>Package Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.PackageDescription
   * @generated
   */
  public Adapter createPackageDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.ImageDescription <em>Image Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.ImageDescription
   * @generated
   */
  public Adapter createImageDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.RepositoryDescription <em>Repository Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.RepositoryDescription
   * @generated
   */
  public Adapter createRepositoryDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.RepositorySpec <em>Repository Spec</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.RepositorySpec
   * @generated
   */
  public Adapter createRepositorySpecAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.Repository <em>Repository</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.Repository
   * @generated
   */
  public Adapter createRepositoryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.CISetting <em>CI Setting</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.CISetting
   * @generated
   */
  public Adapter createCISettingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.MultiMonolithicImplementationNameList <em>Multi Monolithic Implementation Name List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.MultiMonolithicImplementationNameList
   * @generated
   */
  public Adapter createMultiMonolithicImplementationNameListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.MultiMonolithicImplementationNamePreList <em>Multi Monolithic Implementation Name Pre List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.MultiMonolithicImplementationNamePreList
   * @generated
   */
  public Adapter createMultiMonolithicImplementationNamePreListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.MultiMonolithicImplementationNameListBracket <em>Multi Monolithic Implementation Name List Bracket</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.MultiMonolithicImplementationNameListBracket
   * @generated
   */
  public Adapter createMultiMonolithicImplementationNameListBracketAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.CIParameters <em>CI Parameters</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.CIParameters
   * @generated
   */
  public Adapter createCIParametersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.fraunhofer.ipa.deployment.deployModel.GroupedProperties <em>Grouped Properties</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.fraunhofer.ipa.deployment.deployModel.GroupedProperties
   * @generated
   */
  public Adapter createGroupedPropertiesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //DeployModelAdapterFactory
