/**
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.deployModel.impl;

import de.fraunhofer.ipa.deployment.deployModel.BuildRequirements;
import de.fraunhofer.ipa.deployment.deployModel.DeployModelPackage;
import de.fraunhofer.ipa.deployment.deployModel.ReqBuildDependencies;
import de.fraunhofer.ipa.deployment.deployModel.ReqDependencyRepositories;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Build Requirements</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fraunhofer.ipa.deployment.deployModel.impl.BuildRequirementsImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.fraunhofer.ipa.deployment.deployModel.impl.BuildRequirementsImpl#getBuildDependencies <em>Build Dependencies</em>}</li>
 *   <li>{@link de.fraunhofer.ipa.deployment.deployModel.impl.BuildRequirementsImpl#getDependencyRepositories <em>Dependency Repositories</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BuildRequirementsImpl extends MinimalEObjectImpl.Container implements BuildRequirements
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getBuildDependencies() <em>Build Dependencies</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBuildDependencies()
   * @generated
   * @ordered
   */
  protected ReqBuildDependencies buildDependencies;

  /**
   * The cached value of the '{@link #getDependencyRepositories() <em>Dependency Repositories</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependencyRepositories()
   * @generated
   * @ordered
   */
  protected ReqDependencyRepositories dependencyRepositories;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BuildRequirementsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DeployModelPackage.Literals.BUILD_REQUIREMENTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeployModelPackage.BUILD_REQUIREMENTS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReqBuildDependencies getBuildDependencies()
  {
    return buildDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBuildDependencies(ReqBuildDependencies newBuildDependencies, NotificationChain msgs)
  {
    ReqBuildDependencies oldBuildDependencies = buildDependencies;
    buildDependencies = newBuildDependencies;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES, oldBuildDependencies, newBuildDependencies);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBuildDependencies(ReqBuildDependencies newBuildDependencies)
  {
    if (newBuildDependencies != buildDependencies)
    {
      NotificationChain msgs = null;
      if (buildDependencies != null)
        msgs = ((InternalEObject)buildDependencies).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES, null, msgs);
      if (newBuildDependencies != null)
        msgs = ((InternalEObject)newBuildDependencies).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES, null, msgs);
      msgs = basicSetBuildDependencies(newBuildDependencies, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES, newBuildDependencies, newBuildDependencies));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReqDependencyRepositories getDependencyRepositories()
  {
    return dependencyRepositories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDependencyRepositories(ReqDependencyRepositories newDependencyRepositories, NotificationChain msgs)
  {
    ReqDependencyRepositories oldDependencyRepositories = dependencyRepositories;
    dependencyRepositories = newDependencyRepositories;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES, oldDependencyRepositories, newDependencyRepositories);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDependencyRepositories(ReqDependencyRepositories newDependencyRepositories)
  {
    if (newDependencyRepositories != dependencyRepositories)
    {
      NotificationChain msgs = null;
      if (dependencyRepositories != null)
        msgs = ((InternalEObject)dependencyRepositories).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES, null, msgs);
      if (newDependencyRepositories != null)
        msgs = ((InternalEObject)newDependencyRepositories).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES, null, msgs);
      msgs = basicSetDependencyRepositories(newDependencyRepositories, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES, newDependencyRepositories, newDependencyRepositories));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES:
        return basicSetBuildDependencies(null, msgs);
      case DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES:
        return basicSetDependencyRepositories(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DeployModelPackage.BUILD_REQUIREMENTS__NAME:
        return getName();
      case DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES:
        return getBuildDependencies();
      case DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES:
        return getDependencyRepositories();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DeployModelPackage.BUILD_REQUIREMENTS__NAME:
        setName((String)newValue);
        return;
      case DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES:
        setBuildDependencies((ReqBuildDependencies)newValue);
        return;
      case DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES:
        setDependencyRepositories((ReqDependencyRepositories)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DeployModelPackage.BUILD_REQUIREMENTS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES:
        setBuildDependencies((ReqBuildDependencies)null);
        return;
      case DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES:
        setDependencyRepositories((ReqDependencyRepositories)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DeployModelPackage.BUILD_REQUIREMENTS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DeployModelPackage.BUILD_REQUIREMENTS__BUILD_DEPENDENCIES:
        return buildDependencies != null;
      case DeployModelPackage.BUILD_REQUIREMENTS__DEPENDENCY_REPOSITORIES:
        return dependencyRepositories != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //BuildRequirementsImpl
