/**
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.deployModel.impl;

import de.fraunhofer.ipa.deployment.deployModel.DeployModelPackage;
import de.fraunhofer.ipa.deployment.deployModel.YamlContent;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Yaml Content</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fraunhofer.ipa.deployment.deployModel.impl.YamlContentImpl#getRootContent <em>Root Content</em>}</li>
 * </ul>
 *
 * @generated
 */
public class YamlContentImpl extends MinimalEObjectImpl.Container implements YamlContent
{
  /**
   * The cached value of the '{@link #getRootContent() <em>Root Content</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRootContent()
   * @generated
   * @ordered
   */
  protected EObject rootContent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected YamlContentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DeployModelPackage.Literals.YAML_CONTENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject getRootContent()
  {
    return rootContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRootContent(EObject newRootContent, NotificationChain msgs)
  {
    EObject oldRootContent = rootContent;
    rootContent = newRootContent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DeployModelPackage.YAML_CONTENT__ROOT_CONTENT, oldRootContent, newRootContent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRootContent(EObject newRootContent)
  {
    if (newRootContent != rootContent)
    {
      NotificationChain msgs = null;
      if (rootContent != null)
        msgs = ((InternalEObject)rootContent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.YAML_CONTENT__ROOT_CONTENT, null, msgs);
      if (newRootContent != null)
        msgs = ((InternalEObject)newRootContent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.YAML_CONTENT__ROOT_CONTENT, null, msgs);
      msgs = basicSetRootContent(newRootContent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeployModelPackage.YAML_CONTENT__ROOT_CONTENT, newRootContent, newRootContent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DeployModelPackage.YAML_CONTENT__ROOT_CONTENT:
        return basicSetRootContent(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DeployModelPackage.YAML_CONTENT__ROOT_CONTENT:
        return getRootContent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DeployModelPackage.YAML_CONTENT__ROOT_CONTENT:
        setRootContent((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DeployModelPackage.YAML_CONTENT__ROOT_CONTENT:
        setRootContent((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DeployModelPackage.YAML_CONTENT__ROOT_CONTENT:
        return rootContent != null;
    }
    return super.eIsSet(featureID);
  }

} //YamlContentImpl
