/**
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.deployModel.impl;

import de.fraunhofer.ipa.deployment.deployModel.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DeployModelFactoryImpl extends EFactoryImpl implements DeployModelFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DeployModelFactory init()
  {
    try
    {
      DeployModelFactory theDeployModelFactory = (DeployModelFactory)EPackage.Registry.INSTANCE.getEFactory(DeployModelPackage.eNS_URI);
      if (theDeployModelFactory != null)
      {
        return theDeployModelFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DeployModelFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeployModelFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DeployModelPackage.YAML: return createYaml();
      case DeployModelPackage.YAML_CONTENT: return createYamlContent();
      case DeployModelPackage.MONOLITHIC_IMPLEMENTATION_DESCRIPTION: return createMonolithicImplementationDescription();
      case DeployModelPackage.NEW_IMPLEMENTATION_ARTIFACT: return createNewImplementationArtifact();
      case DeployModelPackage.IMPLEMENTATION_ARTIFACT_DESCRIPTION: return createImplementationArtifactDescription();
      case DeployModelPackage.REUSE_IMPLEMENTATION_ARTIFACT: return createReuseImplementationArtifact();
      case DeployModelPackage.IMPLEMENTATION_ARTIFACT_ABSTRACT: return createImplementationArtifactAbstract();
      case DeployModelPackage.DEPLOYMENT_REQUIREMENTS: return createDeploymentRequirements();
      case DeployModelPackage.RESOURCE_REQUIREMENTS: return createResourceRequirements();
      case DeployModelPackage.PROPERTY_EXPRESS_TYPE: return createPropertyExpressType();
      case DeployModelPackage.COMMON_PROPERTY_SINGLE_VALUE: return createCommonPropertySingleValue();
      case DeployModelPackage.COMMON_PROPERTY_MULTI_VALUE: return createCommonPropertyMultiValue();
      case DeployModelPackage.MULTI_VALUE_LIST: return createMultiValueList();
      case DeployModelPackage.MULTI_VALUE_LIST_PRE_LIST: return createMultiValueListPreList();
      case DeployModelPackage.MULTI_VALUE_LIST_BRACKET: return createMultiValueListBracket();
      case DeployModelPackage.BUILD_REQUIREMENTS: return createBuildRequirements();
      case DeployModelPackage.REQ_BUILD_DEPENDENCIES: return createReqBuildDependencies();
      case DeployModelPackage.DEPENDENCY_TYPES: return createDependencyTypes();
      case DeployModelPackage.LOCAL_PACKAGE: return createLocalPackage();
      case DeployModelPackage.GIT_PACKAGE: return createGitPackage();
      case DeployModelPackage.REQ_DEPENDENCY_REPOSITORIES: return createReqDependencyRepositories();
      case DeployModelPackage.APT_REPOSITORY_INSTANCE: return createAptRepositoryInstance();
      case DeployModelPackage.STACK_IMPLEMENTATION_DESCRIPTION: return createStackImplementationDescription();
      case DeployModelPackage.PACKAGE_DESCRIPTION: return createPackageDescription();
      case DeployModelPackage.IMAGE_DESCRIPTION: return createImageDescription();
      case DeployModelPackage.REPOSITORY_DESCRIPTION: return createRepositoryDescription();
      case DeployModelPackage.REPOSITORY_SPEC: return createRepositorySpec();
      case DeployModelPackage.REPOSITORY: return createRepository();
      case DeployModelPackage.CI_SETTING: return createCISetting();
      case DeployModelPackage.MULTI_MONOLITHIC_IMPLEMENTATION_NAME_LIST: return createMultiMonolithicImplementationNameList();
      case DeployModelPackage.MULTI_MONOLITHIC_IMPLEMENTATION_NAME_PRE_LIST: return createMultiMonolithicImplementationNamePreList();
      case DeployModelPackage.MULTI_MONOLITHIC_IMPLEMENTATION_NAME_LIST_BRACKET: return createMultiMonolithicImplementationNameListBracket();
      case DeployModelPackage.CI_PARAMETERS: return createCIParameters();
      case DeployModelPackage.GROUPED_PROPERTIES: return createGroupedProperties();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object createFromString(EDataType eDataType, String initialValue)
  {
    switch (eDataType.getClassifierID())
    {
      case DeployModelPackage.IMPLEMENTATION_MODE_TYPE:
        return createImplementationModeTypeFromString(eDataType, initialValue);
      case DeployModelPackage.BOOLEAN:
        return createBOOLEANFromString(eDataType, initialValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String convertToString(EDataType eDataType, Object instanceValue)
  {
    switch (eDataType.getClassifierID())
    {
      case DeployModelPackage.IMPLEMENTATION_MODE_TYPE:
        return convertImplementationModeTypeToString(eDataType, instanceValue);
      case DeployModelPackage.BOOLEAN:
        return convertBOOLEANToString(eDataType, instanceValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Yaml createYaml()
  {
    YamlImpl yaml = new YamlImpl();
    return yaml;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YamlContent createYamlContent()
  {
    YamlContentImpl yamlContent = new YamlContentImpl();
    return yamlContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MonolithicImplementationDescription createMonolithicImplementationDescription()
  {
    MonolithicImplementationDescriptionImpl monolithicImplementationDescription = new MonolithicImplementationDescriptionImpl();
    return monolithicImplementationDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NewImplementationArtifact createNewImplementationArtifact()
  {
    NewImplementationArtifactImpl newImplementationArtifact = new NewImplementationArtifactImpl();
    return newImplementationArtifact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImplementationArtifactDescription createImplementationArtifactDescription()
  {
    ImplementationArtifactDescriptionImpl implementationArtifactDescription = new ImplementationArtifactDescriptionImpl();
    return implementationArtifactDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReuseImplementationArtifact createReuseImplementationArtifact()
  {
    ReuseImplementationArtifactImpl reuseImplementationArtifact = new ReuseImplementationArtifactImpl();
    return reuseImplementationArtifact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImplementationArtifactAbstract createImplementationArtifactAbstract()
  {
    ImplementationArtifactAbstractImpl implementationArtifactAbstract = new ImplementationArtifactAbstractImpl();
    return implementationArtifactAbstract;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeploymentRequirements createDeploymentRequirements()
  {
    DeploymentRequirementsImpl deploymentRequirements = new DeploymentRequirementsImpl();
    return deploymentRequirements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ResourceRequirements createResourceRequirements()
  {
    ResourceRequirementsImpl resourceRequirements = new ResourceRequirementsImpl();
    return resourceRequirements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PropertyExpressType createPropertyExpressType()
  {
    PropertyExpressTypeImpl propertyExpressType = new PropertyExpressTypeImpl();
    return propertyExpressType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommonPropertySingleValue createCommonPropertySingleValue()
  {
    CommonPropertySingleValueImpl commonPropertySingleValue = new CommonPropertySingleValueImpl();
    return commonPropertySingleValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommonPropertyMultiValue createCommonPropertyMultiValue()
  {
    CommonPropertyMultiValueImpl commonPropertyMultiValue = new CommonPropertyMultiValueImpl();
    return commonPropertyMultiValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiValueList createMultiValueList()
  {
    MultiValueListImpl multiValueList = new MultiValueListImpl();
    return multiValueList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiValueListPreList createMultiValueListPreList()
  {
    MultiValueListPreListImpl multiValueListPreList = new MultiValueListPreListImpl();
    return multiValueListPreList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiValueListBracket createMultiValueListBracket()
  {
    MultiValueListBracketImpl multiValueListBracket = new MultiValueListBracketImpl();
    return multiValueListBracket;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BuildRequirements createBuildRequirements()
  {
    BuildRequirementsImpl buildRequirements = new BuildRequirementsImpl();
    return buildRequirements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReqBuildDependencies createReqBuildDependencies()
  {
    ReqBuildDependenciesImpl reqBuildDependencies = new ReqBuildDependenciesImpl();
    return reqBuildDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DependencyTypes createDependencyTypes()
  {
    DependencyTypesImpl dependencyTypes = new DependencyTypesImpl();
    return dependencyTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LocalPackage createLocalPackage()
  {
    LocalPackageImpl localPackage = new LocalPackageImpl();
    return localPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GitPackage createGitPackage()
  {
    GitPackageImpl gitPackage = new GitPackageImpl();
    return gitPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReqDependencyRepositories createReqDependencyRepositories()
  {
    ReqDependencyRepositoriesImpl reqDependencyRepositories = new ReqDependencyRepositoriesImpl();
    return reqDependencyRepositories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AptRepositoryInstance createAptRepositoryInstance()
  {
    AptRepositoryInstanceImpl aptRepositoryInstance = new AptRepositoryInstanceImpl();
    return aptRepositoryInstance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StackImplementationDescription createStackImplementationDescription()
  {
    StackImplementationDescriptionImpl stackImplementationDescription = new StackImplementationDescriptionImpl();
    return stackImplementationDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageDescription createPackageDescription()
  {
    PackageDescriptionImpl packageDescription = new PackageDescriptionImpl();
    return packageDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImageDescription createImageDescription()
  {
    ImageDescriptionImpl imageDescription = new ImageDescriptionImpl();
    return imageDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RepositoryDescription createRepositoryDescription()
  {
    RepositoryDescriptionImpl repositoryDescription = new RepositoryDescriptionImpl();
    return repositoryDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RepositorySpec createRepositorySpec()
  {
    RepositorySpecImpl repositorySpec = new RepositorySpecImpl();
    return repositorySpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Repository createRepository()
  {
    RepositoryImpl repository = new RepositoryImpl();
    return repository;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CISetting createCISetting()
  {
    CISettingImpl ciSetting = new CISettingImpl();
    return ciSetting;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiMonolithicImplementationNameList createMultiMonolithicImplementationNameList()
  {
    MultiMonolithicImplementationNameListImpl multiMonolithicImplementationNameList = new MultiMonolithicImplementationNameListImpl();
    return multiMonolithicImplementationNameList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiMonolithicImplementationNamePreList createMultiMonolithicImplementationNamePreList()
  {
    MultiMonolithicImplementationNamePreListImpl multiMonolithicImplementationNamePreList = new MultiMonolithicImplementationNamePreListImpl();
    return multiMonolithicImplementationNamePreList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiMonolithicImplementationNameListBracket createMultiMonolithicImplementationNameListBracket()
  {
    MultiMonolithicImplementationNameListBracketImpl multiMonolithicImplementationNameListBracket = new MultiMonolithicImplementationNameListBracketImpl();
    return multiMonolithicImplementationNameListBracket;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CIParameters createCIParameters()
  {
    CIParametersImpl ciParameters = new CIParametersImpl();
    return ciParameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GroupedProperties createGroupedProperties()
  {
    GroupedPropertiesImpl groupedProperties = new GroupedPropertiesImpl();
    return groupedProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ImplementationModeType createImplementationModeTypeFromString(EDataType eDataType, String initialValue)
  {
    ImplementationModeType result = ImplementationModeType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertImplementationModeTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BOOLEAN createBOOLEANFromString(EDataType eDataType, String initialValue)
  {
    BOOLEAN result = BOOLEAN.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertBOOLEANToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeployModelPackage getDeployModelPackage()
  {
    return (DeployModelPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DeployModelPackage getPackage()
  {
    return DeployModelPackage.eINSTANCE;
  }

} //DeployModelFactoryImpl
