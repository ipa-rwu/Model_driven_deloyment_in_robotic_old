/**
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.deployModel.impl;

import de.fraunhofer.ipa.deployment.deployModel.DeployModelPackage;
import de.fraunhofer.ipa.deployment.deployModel.ImageDescription;
import de.fraunhofer.ipa.deployment.deployModel.MultiMonolithicImplementationNameList;
import de.fraunhofer.ipa.deployment.deployModel.MultiValueList;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Image Description</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fraunhofer.ipa.deployment.deployModel.impl.ImageDescriptionImpl#getTypes <em>Types</em>}</li>
 *   <li>{@link de.fraunhofer.ipa.deployment.deployModel.impl.ImageDescriptionImpl#getAppiledImplementations <em>Appiled Implementations</em>}</li>
 *   <li>{@link de.fraunhofer.ipa.deployment.deployModel.impl.ImageDescriptionImpl#getImageTags <em>Image Tags</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ImageDescriptionImpl extends MinimalEObjectImpl.Container implements ImageDescription
{
  /**
   * The cached value of the '{@link #getTypes() <em>Types</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypes()
   * @generated
   * @ordered
   */
  protected MultiValueList types;

  /**
   * The cached value of the '{@link #getAppiledImplementations() <em>Appiled Implementations</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppiledImplementations()
   * @generated
   * @ordered
   */
  protected MultiMonolithicImplementationNameList appiledImplementations;

  /**
   * The cached value of the '{@link #getImageTags() <em>Image Tags</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImageTags()
   * @generated
   * @ordered
   */
  protected MultiValueList imageTags;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ImageDescriptionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DeployModelPackage.Literals.IMAGE_DESCRIPTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiValueList getTypes()
  {
    return types;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypes(MultiValueList newTypes, NotificationChain msgs)
  {
    MultiValueList oldTypes = types;
    types = newTypes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DeployModelPackage.IMAGE_DESCRIPTION__TYPES, oldTypes, newTypes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTypes(MultiValueList newTypes)
  {
    if (newTypes != types)
    {
      NotificationChain msgs = null;
      if (types != null)
        msgs = ((InternalEObject)types).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.IMAGE_DESCRIPTION__TYPES, null, msgs);
      if (newTypes != null)
        msgs = ((InternalEObject)newTypes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.IMAGE_DESCRIPTION__TYPES, null, msgs);
      msgs = basicSetTypes(newTypes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeployModelPackage.IMAGE_DESCRIPTION__TYPES, newTypes, newTypes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiMonolithicImplementationNameList getAppiledImplementations()
  {
    return appiledImplementations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAppiledImplementations(MultiMonolithicImplementationNameList newAppiledImplementations, NotificationChain msgs)
  {
    MultiMonolithicImplementationNameList oldAppiledImplementations = appiledImplementations;
    appiledImplementations = newAppiledImplementations;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS, oldAppiledImplementations, newAppiledImplementations);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppiledImplementations(MultiMonolithicImplementationNameList newAppiledImplementations)
  {
    if (newAppiledImplementations != appiledImplementations)
    {
      NotificationChain msgs = null;
      if (appiledImplementations != null)
        msgs = ((InternalEObject)appiledImplementations).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS, null, msgs);
      if (newAppiledImplementations != null)
        msgs = ((InternalEObject)newAppiledImplementations).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS, null, msgs);
      msgs = basicSetAppiledImplementations(newAppiledImplementations, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS, newAppiledImplementations, newAppiledImplementations));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiValueList getImageTags()
  {
    return imageTags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImageTags(MultiValueList newImageTags, NotificationChain msgs)
  {
    MultiValueList oldImageTags = imageTags;
    imageTags = newImageTags;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS, oldImageTags, newImageTags);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImageTags(MultiValueList newImageTags)
  {
    if (newImageTags != imageTags)
    {
      NotificationChain msgs = null;
      if (imageTags != null)
        msgs = ((InternalEObject)imageTags).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS, null, msgs);
      if (newImageTags != null)
        msgs = ((InternalEObject)newImageTags).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS, null, msgs);
      msgs = basicSetImageTags(newImageTags, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS, newImageTags, newImageTags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DeployModelPackage.IMAGE_DESCRIPTION__TYPES:
        return basicSetTypes(null, msgs);
      case DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS:
        return basicSetAppiledImplementations(null, msgs);
      case DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS:
        return basicSetImageTags(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DeployModelPackage.IMAGE_DESCRIPTION__TYPES:
        return getTypes();
      case DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS:
        return getAppiledImplementations();
      case DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS:
        return getImageTags();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DeployModelPackage.IMAGE_DESCRIPTION__TYPES:
        setTypes((MultiValueList)newValue);
        return;
      case DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS:
        setAppiledImplementations((MultiMonolithicImplementationNameList)newValue);
        return;
      case DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS:
        setImageTags((MultiValueList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DeployModelPackage.IMAGE_DESCRIPTION__TYPES:
        setTypes((MultiValueList)null);
        return;
      case DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS:
        setAppiledImplementations((MultiMonolithicImplementationNameList)null);
        return;
      case DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS:
        setImageTags((MultiValueList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DeployModelPackage.IMAGE_DESCRIPTION__TYPES:
        return types != null;
      case DeployModelPackage.IMAGE_DESCRIPTION__APPILED_IMPLEMENTATIONS:
        return appiledImplementations != null;
      case DeployModelPackage.IMAGE_DESCRIPTION__IMAGE_TAGS:
        return imageTags != null;
    }
    return super.eIsSet(featureID);
  }

} //ImageDescriptionImpl
