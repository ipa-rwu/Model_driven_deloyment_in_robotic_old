/*
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DeployModelGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class YamlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Yaml");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cYamlAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cContentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cContentYamlContentParserRuleCall_1_0 = (RuleCall)cContentAssignment_1.eContents().get(0);
		
		//Yaml: {Yaml}
		//  (content+=YamlContent)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Yaml}
		// (content+=YamlContent)*
		public Group getGroup() { return cGroup; }
		
		//{Yaml}
		public Action getYamlAction_0() { return cYamlAction_0; }
		
		//(content+=YamlContent)*
		public Assignment getContentAssignment_1() { return cContentAssignment_1; }
		
		//YamlContent
		public RuleCall getContentYamlContentParserRuleCall_1_0() { return cContentYamlContentParserRuleCall_1_0; }
	}
	public class YamlContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.YamlContent");
		private final Assignment cRootContentAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRootContentAlternatives_0 = (Alternatives)cRootContentAssignment.eContents().get(0);
		private final RuleCall cRootContentMonolithicImplementationDescriptionParserRuleCall_0_0 = (RuleCall)cRootContentAlternatives_0.eContents().get(0);
		private final RuleCall cRootContentStackImplementationDescriptionParserRuleCall_0_1 = (RuleCall)cRootContentAlternatives_0.eContents().get(1);
		private final RuleCall cRootContentPackageDescriptionParserRuleCall_0_2 = (RuleCall)cRootContentAlternatives_0.eContents().get(2);
		
		//YamlContent:
		//  rootContent=(MonolithicImplementationDescription|
		//    StackImplementationDescription|
		//    PackageDescription
		//  )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//rootContent=(MonolithicImplementationDescription|
		//  StackImplementationDescription|
		//  PackageDescription
		//)
		public Assignment getRootContentAssignment() { return cRootContentAssignment; }
		
		//(MonolithicImplementationDescription|
		//    StackImplementationDescription|
		//    PackageDescription
		//  )
		public Alternatives getRootContentAlternatives_0() { return cRootContentAlternatives_0; }
		
		//MonolithicImplementationDescription
		public RuleCall getRootContentMonolithicImplementationDescriptionParserRuleCall_0_0() { return cRootContentMonolithicImplementationDescriptionParserRuleCall_0_0; }
		
		//StackImplementationDescription
		public RuleCall getRootContentStackImplementationDescriptionParserRuleCall_0_1() { return cRootContentStackImplementationDescriptionParserRuleCall_0_1; }
		
		//PackageDescription
		public RuleCall getRootContentPackageDescriptionParserRuleCall_0_2() { return cRootContentPackageDescriptionParserRuleCall_0_2; }
	}
	public class MonolithicImplementationDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MonolithicImplementationDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeMonolithicImplementationDescriptionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameQualifiedNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImplementsRosModelKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cImpRosmodelAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cImpRosmodelSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cImpRosmodelAssignment_4_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescriptionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescriptionAssignment_6.eContents().get(0);
		private final Keyword cModeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cModeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cModeImplementationModeTypeEnumRuleCall_8_0 = (RuleCall)cModeAssignment_8.eContents().get(0);
		private final Keyword cBranchKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cBranchAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cBranchBranchTypeParserRuleCall_10_0 = (RuleCall)cBranchAssignment_10.eContents().get(0);
		private final Assignment cImplAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cImplImplementationArtifactDescriptionParserRuleCall_11_0 = (RuleCall)cImplAssignment_11.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//MonolithicImplementationDescription:
		//  type='MonolithicImplementationDescription:'
		//  INDENT
		//    'name:' name=QualifiedName
		//  //  TODO: link to rosmodel
		//    ('implementsRosModel:'impRosmodel=STRING)?
		//    'description:' description=STRING
		//    'mode:' mode=ImplementationModeType
		//    'branch:' branch=BranchType
		//    (impl=ImplementationArtifactDescription)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='MonolithicImplementationDescription:'
		//INDENT
		//  'name:' name=QualifiedName
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=STRING)?
		//  'description:' description=STRING
		//  'mode:' mode=ImplementationModeType
		//  'branch:' branch=BranchType
		//  (impl=ImplementationArtifactDescription)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='MonolithicImplementationDescription:'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'MonolithicImplementationDescription:'
		public Keyword getTypeMonolithicImplementationDescriptionKeyword_0_0() { return cTypeMonolithicImplementationDescriptionKeyword_0_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//'name:'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_3_0() { return cNameQualifiedNameParserRuleCall_3_0; }
		
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'implementsRosModel:'
		public Keyword getImplementsRosModelKeyword_4_0() { return cImplementsRosModelKeyword_4_0; }
		
		//impRosmodel=STRING
		public Assignment getImpRosmodelAssignment_4_1() { return cImpRosmodelAssignment_4_1; }
		
		//STRING
		public RuleCall getImpRosmodelSTRINGTerminalRuleCall_4_1_0() { return cImpRosmodelSTRINGTerminalRuleCall_4_1_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_6() { return cDescriptionAssignment_6; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_0() { return cDescriptionSTRINGTerminalRuleCall_6_0; }
		
		//'mode:'
		public Keyword getModeKeyword_7() { return cModeKeyword_7; }
		
		//mode=ImplementationModeType
		public Assignment getModeAssignment_8() { return cModeAssignment_8; }
		
		//ImplementationModeType
		public RuleCall getModeImplementationModeTypeEnumRuleCall_8_0() { return cModeImplementationModeTypeEnumRuleCall_8_0; }
		
		//'branch:'
		public Keyword getBranchKeyword_9() { return cBranchKeyword_9; }
		
		//branch=BranchType
		public Assignment getBranchAssignment_10() { return cBranchAssignment_10; }
		
		//BranchType
		public RuleCall getBranchBranchTypeParserRuleCall_10_0() { return cBranchBranchTypeParserRuleCall_10_0; }
		
		//(impl=ImplementationArtifactDescription)?
		public Assignment getImplAssignment_11() { return cImplAssignment_11; }
		
		//ImplementationArtifactDescription
		public RuleCall getImplImplementationArtifactDescriptionParserRuleCall_11_0() { return cImplImplementationArtifactDescriptionParserRuleCall_11_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_12() { return cDEDENTTerminalRuleCall_12; }
	}
	public class BranchTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.BranchType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAnyKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BranchType:
		//  STRING|'any'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING|'any'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//'any'
		public Keyword getAnyKeyword_1() { return cAnyKeyword_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//    ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class NewImplementationArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.NewImplementationArtifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLocationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNameAlternatives_2_0 = (Alternatives)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameLOCALPATHTerminalRuleCall_2_0_0 = (RuleCall)cNameAlternatives_2_0.eContents().get(0);
		private final RuleCall cNameURLTerminalRuleCall_2_0_1 = (RuleCall)cNameAlternatives_2_0.eContents().get(1);
		private final Assignment cDeployRequirementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDeployRequirementsDeploymentRequirementsParserRuleCall_3_0 = (RuleCall)cDeployRequirementsAssignment_3.eContents().get(0);
		private final Assignment cResourceRequirementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cResourceRequirementsResourceRequirementsParserRuleCall_4_0 = (RuleCall)cResourceRequirementsAssignment_4.eContents().get(0);
		private final Assignment cBuildRequirementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBuildRequirementsBuildRequirementsParserRuleCall_5_0 = (RuleCall)cBuildRequirementsAssignment_5.eContents().get(0);
		private final Assignment cStartCommandsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cStartCommandsStartCommandsParserRuleCall_6_0 = (RuleCall)cStartCommandsAssignment_6.eContents().get(0);
		
		//NewImplementationArtifact:
		//  'location'':'name=(LOCALPATH|URL)
		//  deployRequirements = DeploymentRequirements
		//  (resourceRequirements = ResourceRequirements)?
		//  (buildRequirements = BuildRequirements)?
		//  startCommands = StartCommands
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'location'':'name=(LOCALPATH|URL)
		//deployRequirements = DeploymentRequirements
		//(resourceRequirements = ResourceRequirements)?
		//(buildRequirements = BuildRequirements)?
		//startCommands = StartCommands
		public Group getGroup() { return cGroup; }
		
		//'location'
		public Keyword getLocationKeyword_0() { return cLocationKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//name=(LOCALPATH|URL)
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//(LOCALPATH|URL)
		public Alternatives getNameAlternatives_2_0() { return cNameAlternatives_2_0; }
		
		//LOCALPATH
		public RuleCall getNameLOCALPATHTerminalRuleCall_2_0_0() { return cNameLOCALPATHTerminalRuleCall_2_0_0; }
		
		//URL
		public RuleCall getNameURLTerminalRuleCall_2_0_1() { return cNameURLTerminalRuleCall_2_0_1; }
		
		//deployRequirements = DeploymentRequirements
		public Assignment getDeployRequirementsAssignment_3() { return cDeployRequirementsAssignment_3; }
		
		//DeploymentRequirements
		public RuleCall getDeployRequirementsDeploymentRequirementsParserRuleCall_3_0() { return cDeployRequirementsDeploymentRequirementsParserRuleCall_3_0; }
		
		//(resourceRequirements = ResourceRequirements)?
		public Assignment getResourceRequirementsAssignment_4() { return cResourceRequirementsAssignment_4; }
		
		//ResourceRequirements
		public RuleCall getResourceRequirementsResourceRequirementsParserRuleCall_4_0() { return cResourceRequirementsResourceRequirementsParserRuleCall_4_0; }
		
		//(buildRequirements = BuildRequirements)?
		public Assignment getBuildRequirementsAssignment_5() { return cBuildRequirementsAssignment_5; }
		
		//BuildRequirements
		public RuleCall getBuildRequirementsBuildRequirementsParserRuleCall_5_0() { return cBuildRequirementsBuildRequirementsParserRuleCall_5_0; }
		
		//startCommands = StartCommands
		public Assignment getStartCommandsAssignment_6() { return cStartCommandsAssignment_6; }
		
		//StartCommands
		public RuleCall getStartCommandsStartCommandsParserRuleCall_6_0() { return cStartCommandsStartCommandsParserRuleCall_6_0; }
	}
	public class ImplementationArtifactDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImplementationArtifactDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeImplementationArtifactDescriptionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cImplAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cImplAlternatives_3_0 = (Alternatives)cImplAssignment_3.eContents().get(0);
		private final RuleCall cImplNewImplementationArtifactParserRuleCall_3_0_0 = (RuleCall)cImplAlternatives_3_0.eContents().get(0);
		private final RuleCall cImplReuseImplementationArtifactParserRuleCall_3_0_1 = (RuleCall)cImplAlternatives_3_0.eContents().get(1);
		private final RuleCall cDEDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ImplementationArtifactDescription:
		//  type='ImplementationArtifactDescription'':'
		//  INDENT
		//    impl=(NewImplementationArtifact | ReuseImplementationArtifact)
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='ImplementationArtifactDescription'':'
		//INDENT
		//  impl=(NewImplementationArtifact | ReuseImplementationArtifact)
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='ImplementationArtifactDescription'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'ImplementationArtifactDescription'
		public Keyword getTypeImplementationArtifactDescriptionKeyword_0_0() { return cTypeImplementationArtifactDescriptionKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }
		
		//impl=(NewImplementationArtifact | ReuseImplementationArtifact)
		public Assignment getImplAssignment_3() { return cImplAssignment_3; }
		
		//(NewImplementationArtifact | ReuseImplementationArtifact)
		public Alternatives getImplAlternatives_3_0() { return cImplAlternatives_3_0; }
		
		//NewImplementationArtifact
		public RuleCall getImplNewImplementationArtifactParserRuleCall_3_0_0() { return cImplNewImplementationArtifactParserRuleCall_3_0_0; }
		
		//ReuseImplementationArtifact
		public RuleCall getImplReuseImplementationArtifactParserRuleCall_3_0_1() { return cImplReuseImplementationArtifactParserRuleCall_3_0_1; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_4() { return cDEDENTTerminalRuleCall_4; }
	}
	public class ReuseImplementationArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReuseImplementationArtifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cListsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListsImplementationArtifactAbstractParserRuleCall_1_0 = (RuleCall)cListsAssignment_1.eContents().get(0);
		
		//ReuseImplementationArtifact:
		//  'use:' lists+= (ImplementationArtifactAbstract)+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'use:' lists+= (ImplementationArtifactAbstract)+
		public Group getGroup() { return cGroup; }
		
		//'use:'
		public Keyword getUseKeyword_0() { return cUseKeyword_0; }
		
		//lists+= (ImplementationArtifactAbstract)+
		public Assignment getListsAssignment_1() { return cListsAssignment_1; }
		
		//(ImplementationArtifactAbstract)
		public RuleCall getListsImplementationArtifactAbstractParserRuleCall_1_0() { return cListsImplementationArtifactAbstractParserRuleCall_1_0; }
	}
	public class ImplementationArtifactAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImplementationArtifactAbstract");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_2_0 = (RuleCall)cImportedNamespaceAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cNameMonolithicImplementationDescriptionCrossReference_5_0 = (CrossReference)cNameAssignment_5.eContents().get(0);
		private final RuleCall cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cNameMonolithicImplementationDescriptionCrossReference_5_0.eContents().get(1);
		private final Assignment cStartCommandsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cStartCommandsStartCommandsParserRuleCall_6_0 = (RuleCall)cStartCommandsAssignment_6.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//ImplementationArtifactAbstract:
		//  PreListElement 'import:' importedNamespace=QualifiedName
		//  INDENT
		//    'name:' name=[MonolithicImplementationDescription|QualifiedName]
		//    (startCommands = StartCommands)
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'import:' importedNamespace=QualifiedName
		//INDENT
		//  'name:' name=[MonolithicImplementationDescription|QualifiedName]
		//  (startCommands = StartCommands)
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'import:'
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }
		
		//importedNamespace=QualifiedName
		public Assignment getImportedNamespaceAssignment_2() { return cImportedNamespaceAssignment_2; }
		
		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_2_0() { return cImportedNamespaceQualifiedNameParserRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'name:'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//name=[MonolithicImplementationDescription|QualifiedName]
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getNameMonolithicImplementationDescriptionCrossReference_5_0() { return cNameMonolithicImplementationDescriptionCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1() { return cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1; }
		
		//(startCommands = StartCommands)
		public Assignment getStartCommandsAssignment_6() { return cStartCommandsAssignment_6; }
		
		//StartCommands
		public RuleCall getStartCommandsStartCommandsParserRuleCall_6_0() { return cStartCommandsStartCommandsParserRuleCall_6_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
	}
	public class DeploymentRequirementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.DeploymentRequirements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameDeployRequirementsKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperatingSystemAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperatingSystemReqOperatingSystemParserRuleCall_2_0 = (RuleCall)cOperatingSystemAssignment_2.eContents().get(0);
		private final Assignment cProcessorArchitectureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProcessorArchitectureReqProcessorArchitectureParserRuleCall_3_0 = (RuleCall)cProcessorArchitectureAssignment_3.eContents().get(0);
		private final Assignment cRosDistroAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRosDistroReqRosDistroParserRuleCall_4_0 = (RuleCall)cRosDistroAssignment_4.eContents().get(0);
		
		//DeploymentRequirements:
		//  name='deployRequirements'':'
		//  operatingSystem = ReqOperatingSystem
		//  processorArchitecture = ReqProcessorArchitecture
		//  (rosDistro= ReqRosDistro)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name='deployRequirements'':'
		//operatingSystem = ReqOperatingSystem
		//processorArchitecture = ReqProcessorArchitecture
		//(rosDistro= ReqRosDistro)?
		public Group getGroup() { return cGroup; }
		
		//name='deployRequirements'
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//'deployRequirements'
		public Keyword getNameDeployRequirementsKeyword_0_0() { return cNameDeployRequirementsKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//operatingSystem = ReqOperatingSystem
		public Assignment getOperatingSystemAssignment_2() { return cOperatingSystemAssignment_2; }
		
		//ReqOperatingSystem
		public RuleCall getOperatingSystemReqOperatingSystemParserRuleCall_2_0() { return cOperatingSystemReqOperatingSystemParserRuleCall_2_0; }
		
		//processorArchitecture = ReqProcessorArchitecture
		public Assignment getProcessorArchitectureAssignment_3() { return cProcessorArchitectureAssignment_3; }
		
		//ReqProcessorArchitecture
		public RuleCall getProcessorArchitectureReqProcessorArchitectureParserRuleCall_3_0() { return cProcessorArchitectureReqProcessorArchitectureParserRuleCall_3_0; }
		
		//(rosDistro= ReqRosDistro)?
		public Assignment getRosDistroAssignment_4() { return cRosDistroAssignment_4; }
		
		//ReqRosDistro
		public RuleCall getRosDistroReqRosDistroParserRuleCall_4_0() { return cRosDistroReqRosDistroParserRuleCall_4_0; }
	}
	public class ResourceRequirementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ResourceRequirements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameResourceRequirementsKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRequirementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRequirementsResourceRequirementParserRuleCall_2_0 = (RuleCall)cRequirementsAssignment_2.eContents().get(0);
		
		//ResourceRequirements:
		//  name='resourceRequirements'':'
		//  requirements += (ResourceRequirement)+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name='resourceRequirements'':'
		//requirements += (ResourceRequirement)+
		public Group getGroup() { return cGroup; }
		
		//name='resourceRequirements'
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//'resourceRequirements'
		public Keyword getNameResourceRequirementsKeyword_0_0() { return cNameResourceRequirementsKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//requirements += (ResourceRequirement)+
		public Assignment getRequirementsAssignment_2() { return cRequirementsAssignment_2; }
		
		//(ResourceRequirement)
		public RuleCall getRequirementsResourceRequirementParserRuleCall_2_0() { return cRequirementsResourceRequirementParserRuleCall_2_0; }
	}
	public class ResourceRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ResourceRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameResourceReqTypesEnumRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueScalarNumberParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ResourceRequirement:
		//  PreListElement 'name:' name=ResourceReqTypes
		//  INDENT
		//    'value:' value=ScalarNumber
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name=ResourceReqTypes
		//INDENT
		//  'value:' value=ScalarNumber
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ResourceReqTypes
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ResourceReqTypes
		public RuleCall getNameResourceReqTypesEnumRuleCall_2_0() { return cNameResourceReqTypesEnumRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'value:'
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }
		
		//value=ScalarNumber
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//ScalarNumber
		public RuleCall getValueScalarNumberParserRuleCall_5_0() { return cValueScalarNumberParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
	}
	public class ReqOperatingSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReqOperatingSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameOsKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueOperatingSystemTypeListParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ReqOperatingSystem:
		//  PreListElement 'name:' name='os'
		//  INDENT
		//    'value:' value=OperatingSystemTypeList
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name='os'
		//INDENT
		//  'value:' value=OperatingSystemTypeList
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name='os'
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//'os'
		public Keyword getNameOsKeyword_2_0() { return cNameOsKeyword_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'value:'
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }
		
		//value=OperatingSystemTypeList
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//OperatingSystemTypeList
		public RuleCall getValueOperatingSystemTypeListParserRuleCall_5_0() { return cValueOperatingSystemTypeListParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
	}
	public class OperatingSystemTypeListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.OperatingSystemTypeList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cPreListElementParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Assignment cChildrenAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cChildrenOperatingSystemTypesEnumRuleCall_0_1_0 = (RuleCall)cChildrenAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cChildrenAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cChildrenOperatingSystemTypesEnumRuleCall_1_1_0 = (RuleCall)cChildrenAssignment_1_1.eContents().get(0);
		
		//OperatingSystemTypeList:
		//  (PreListElement children+=( OperatingSystemTypes))
		//  (PreListElement children+=(OperatingSystemTypes)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(PreListElement children+=( OperatingSystemTypes))
		//(PreListElement children+=(OperatingSystemTypes)*)?
		public Group getGroup() { return cGroup; }
		
		//(PreListElement children+=( OperatingSystemTypes))
		public Group getGroup_0() { return cGroup_0; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0_0() { return cPreListElementParserRuleCall_0_0; }
		
		//children+=( OperatingSystemTypes)
		public Assignment getChildrenAssignment_0_1() { return cChildrenAssignment_0_1; }
		
		//( OperatingSystemTypes)
		public RuleCall getChildrenOperatingSystemTypesEnumRuleCall_0_1_0() { return cChildrenOperatingSystemTypesEnumRuleCall_0_1_0; }
		
		//(PreListElement children+=(OperatingSystemTypes)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_1_0() { return cPreListElementParserRuleCall_1_0; }
		
		//children+=(OperatingSystemTypes)*
		public Assignment getChildrenAssignment_1_1() { return cChildrenAssignment_1_1; }
		
		//(OperatingSystemTypes)
		public RuleCall getChildrenOperatingSystemTypesEnumRuleCall_1_1_0() { return cChildrenOperatingSystemTypesEnumRuleCall_1_1_0; }
	}
	public class ReqProcessorArchitectureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReqProcessorArchitecture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameProcessor_architectureKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueProcessorArchitectureTypeListParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ReqProcessorArchitecture:
		//  PreListElement 'name:' name='processor_architecture'
		//  INDENT
		//    'value:' value=ProcessorArchitectureTypeList
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name='processor_architecture'
		//INDENT
		//  'value:' value=ProcessorArchitectureTypeList
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name='processor_architecture'
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//'processor_architecture'
		public Keyword getNameProcessor_architectureKeyword_2_0() { return cNameProcessor_architectureKeyword_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'value:'
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }
		
		//value=ProcessorArchitectureTypeList
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//ProcessorArchitectureTypeList
		public RuleCall getValueProcessorArchitectureTypeListParserRuleCall_5_0() { return cValueProcessorArchitectureTypeListParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
	}
	public class ProcessorArchitectureTypeListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ProcessorArchitectureTypeList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cPreListElementParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Assignment cChildrenAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cChildrenProcessorArchitectureTypesEnumRuleCall_0_1_0 = (RuleCall)cChildrenAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cChildrenAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cChildrenProcessorArchitectureTypesEnumRuleCall_1_1_0 = (RuleCall)cChildrenAssignment_1_1.eContents().get(0);
		
		//ProcessorArchitectureTypeList:
		//  (PreListElement children+=( ProcessorArchitectureTypes))
		//  (PreListElement children+=(ProcessorArchitectureTypes)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(PreListElement children+=( ProcessorArchitectureTypes))
		//(PreListElement children+=(ProcessorArchitectureTypes)*)?
		public Group getGroup() { return cGroup; }
		
		//(PreListElement children+=( ProcessorArchitectureTypes))
		public Group getGroup_0() { return cGroup_0; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0_0() { return cPreListElementParserRuleCall_0_0; }
		
		//children+=( ProcessorArchitectureTypes)
		public Assignment getChildrenAssignment_0_1() { return cChildrenAssignment_0_1; }
		
		//( ProcessorArchitectureTypes)
		public RuleCall getChildrenProcessorArchitectureTypesEnumRuleCall_0_1_0() { return cChildrenProcessorArchitectureTypesEnumRuleCall_0_1_0; }
		
		//(PreListElement children+=(ProcessorArchitectureTypes)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_1_0() { return cPreListElementParserRuleCall_1_0; }
		
		//children+=(ProcessorArchitectureTypes)*
		public Assignment getChildrenAssignment_1_1() { return cChildrenAssignment_1_1; }
		
		//(ProcessorArchitectureTypes)
		public RuleCall getChildrenProcessorArchitectureTypesEnumRuleCall_1_1_0() { return cChildrenProcessorArchitectureTypesEnumRuleCall_1_1_0; }
	}
	public class ReqRosDistroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReqRosDistro");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameRos_distroKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueRosDistroListParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ReqRosDistro:
		//  PreListElement 'name:' name='ros_distro'
		//  INDENT
		//    'value:' value=RosDistroList
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name='ros_distro'
		//INDENT
		//  'value:' value=RosDistroList
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name='ros_distro'
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//'ros_distro'
		public Keyword getNameRos_distroKeyword_2_0() { return cNameRos_distroKeyword_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'value:'
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }
		
		//value=RosDistroList
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//RosDistroList
		public RuleCall getValueRosDistroListParserRuleCall_5_0() { return cValueRosDistroListParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
	}
	public class RosDistroListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.RosDistroList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cPreListElementParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Assignment cChildrenAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cChildrenRosDistroEnumRuleCall_0_1_0 = (RuleCall)cChildrenAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cChildrenAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cChildrenRosDistroEnumRuleCall_1_1_0 = (RuleCall)cChildrenAssignment_1_1.eContents().get(0);
		
		//RosDistroList:
		//  (PreListElement children+=( RosDistro))
		//  (PreListElement children+=(RosDistro)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(PreListElement children+=( RosDistro))
		//(PreListElement children+=(RosDistro)*)?
		public Group getGroup() { return cGroup; }
		
		//(PreListElement children+=( RosDistro))
		public Group getGroup_0() { return cGroup_0; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0_0() { return cPreListElementParserRuleCall_0_0; }
		
		//children+=( RosDistro)
		public Assignment getChildrenAssignment_0_1() { return cChildrenAssignment_0_1; }
		
		//( RosDistro)
		public RuleCall getChildrenRosDistroEnumRuleCall_0_1_0() { return cChildrenRosDistroEnumRuleCall_0_1_0; }
		
		//(PreListElement children+=(RosDistro)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_1_0() { return cPreListElementParserRuleCall_1_0; }
		
		//children+=(RosDistro)*
		public Assignment getChildrenAssignment_1_1() { return cChildrenAssignment_1_1; }
		
		//(RosDistro)
		public RuleCall getChildrenRosDistroEnumRuleCall_1_1_0() { return cChildrenRosDistroEnumRuleCall_1_1_0; }
	}
	public class BuildRequirementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.BuildRequirements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameBuildRequirementsKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cBuildDependenciesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBuildDependenciesReqBuildDependenciesParserRuleCall_3_0 = (RuleCall)cBuildDependenciesAssignment_3.eContents().get(0);
		private final Assignment cDependencyRepositoriesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_4_0 = (RuleCall)cDependencyRepositoriesAssignment_4.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//BuildRequirements:
		//  name='buildRequirements'':'
		//  INDENT
		//  (buildDependencies = ReqBuildDependencies)?
		//  (dependencyRepositories = ReqDependencyRepositories)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name='buildRequirements'':'
		//INDENT
		//(buildDependencies = ReqBuildDependencies)?
		//(dependencyRepositories = ReqDependencyRepositories)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//name='buildRequirements'
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//'buildRequirements'
		public Keyword getNameBuildRequirementsKeyword_0_0() { return cNameBuildRequirementsKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }
		
		//(buildDependencies = ReqBuildDependencies)?
		public Assignment getBuildDependenciesAssignment_3() { return cBuildDependenciesAssignment_3; }
		
		//ReqBuildDependencies
		public RuleCall getBuildDependenciesReqBuildDependenciesParserRuleCall_3_0() { return cBuildDependenciesReqBuildDependenciesParserRuleCall_3_0; }
		
		//(dependencyRepositories = ReqDependencyRepositories)?
		public Assignment getDependencyRepositoriesAssignment_4() { return cDependencyRepositoriesAssignment_4; }
		
		//ReqDependencyRepositories
		public RuleCall getDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_4_0() { return cDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_4_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_5() { return cDEDENTTerminalRuleCall_5; }
	}
	public class ReqBuildDependenciesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReqBuildDependencies");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameDependOnKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cDependenciesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDependenciesDependencyParserRuleCall_1_0 = (RuleCall)cDependenciesAssignment_1.eContents().get(0);
		
		//ReqBuildDependencies:
		//  name = 'dependOn:'
		//    (dependencies+=Dependency)+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = 'dependOn:'
		//  (dependencies+=Dependency)+
		public Group getGroup() { return cGroup; }
		
		//name = 'dependOn:'
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//'dependOn:'
		public Keyword getNameDependOnKeyword_0_0() { return cNameDependOnKeyword_0_0; }
		
		//(dependencies+=Dependency)+
		public Assignment getDependenciesAssignment_1() { return cDependenciesAssignment_1; }
		
		//Dependency
		public RuleCall getDependenciesDependencyParserRuleCall_1_0() { return cDependenciesDependencyParserRuleCall_1_0; }
	}
	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Dependency");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLocalPackageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGitPackageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Dependency:
		//  LocalPackage|GitPackage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//LocalPackage|GitPackage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LocalPackage
		public RuleCall getLocalPackageParserRuleCall_0() { return cLocalPackageParserRuleCall_0; }
		
		//GitPackage
		public RuleCall getGitPackageParserRuleCall_1() { return cGitPackageParserRuleCall_1; }
	}
	public class LocalPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.LocalPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_2_0 = (RuleCall)cImportedNamespaceAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cNameMonolithicImplementationDescriptionCrossReference_5_0 = (CrossReference)cNameAssignment_5.eContents().get(0);
		private final RuleCall cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cNameMonolithicImplementationDescriptionCrossReference_5_0.eContents().get(1);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//LocalPackage:
		//  PreListElement 'from:' importedNamespace=QualifiedName
		//  INDENT
		//  'name:' name = [MonolithicImplementationDescription|QualifiedName]
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'from:' importedNamespace=QualifiedName
		//INDENT
		//'name:' name = [MonolithicImplementationDescription|QualifiedName]
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'from:'
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }
		
		//importedNamespace=QualifiedName
		public Assignment getImportedNamespaceAssignment_2() { return cImportedNamespaceAssignment_2; }
		
		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_2_0() { return cImportedNamespaceQualifiedNameParserRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'name:'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//name = [MonolithicImplementationDescription|QualifiedName]
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getNameMonolithicImplementationDescriptionCrossReference_5_0() { return cNameMonolithicImplementationDescriptionCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1() { return cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
	}
	public class GitPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.GitPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPathAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPathURLTerminalRuleCall_2_0 = (RuleCall)cPathAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cBranchKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBranchAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBranchSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cBranchAssignment_6_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//GitPackage:
		//  PreListElement  'from:' path = URL
		//  INDENT
		// 'name:' name = ID
		// ('branch:' branch = STRING)?
		// DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		// PreListElement  'from:' path = URL
		// INDENT
		//'name:' name = ID
		//('branch:' branch = STRING)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'from:'
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }
		
		//path = URL
		public Assignment getPathAssignment_2() { return cPathAssignment_2; }
		
		//URL
		public RuleCall getPathURLTerminalRuleCall_2_0() { return cPathURLTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'name:'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//name = ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//('branch:' branch = STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'branch:'
		public Keyword getBranchKeyword_6_0() { return cBranchKeyword_6_0; }
		
		//branch = STRING
		public Assignment getBranchAssignment_6_1() { return cBranchAssignment_6_1; }
		
		//STRING
		public RuleCall getBranchSTRINGTerminalRuleCall_6_1_0() { return cBranchSTRINGTerminalRuleCall_6_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
	}
	public class ReqDependencyRepositoriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReqDependencyRepositories");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameAptRepositoriesKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cChildrenAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cChildrenAptRepositoryInstanceParserRuleCall_2_0 = (RuleCall)cChildrenAssignment_2.eContents().get(0);
		
		//ReqDependencyRepositories:
		//  name='aptRepositories'':'
		//  children+=(AptRepositoryInstance)+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name='aptRepositories'':'
		//children+=(AptRepositoryInstance)+
		public Group getGroup() { return cGroup; }
		
		//name='aptRepositories'
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//'aptRepositories'
		public Keyword getNameAptRepositoriesKeyword_0_0() { return cNameAptRepositoriesKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//children+=(AptRepositoryInstance)+
		public Assignment getChildrenAssignment_2() { return cChildrenAssignment_2; }
		
		//(AptRepositoryInstance)
		public RuleCall getChildrenAptRepositoryInstanceParserRuleCall_2_0() { return cChildrenAptRepositoryInstanceParserRuleCall_2_0; }
	}
	public class AptRepositoryInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.AptRepositoryInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cKeyLinkKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cKeyLinkAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cKeyLinkURLTerminalRuleCall_5_0 = (RuleCall)cKeyLinkAssignment_5.eContents().get(0);
		private final Keyword cRepositoryPathKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRepositoryPathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRepositoryPathURLTerminalRuleCall_7_0 = (RuleCall)cRepositoryPathAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUpdateRosDepKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUpdateRosDepAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUpdateRosDepURLTerminalRuleCall_8_1_0 = (RuleCall)cUpdateRosDepAssignment_8_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//AptRepositoryInstance:
		//  PreListElement 'name:' name=ID
		//  INDENT
		//    'keyLink:' keyLink=URL
		//    'repositoryPath:' repositoryPath=URL
		//    ('updateRosDep:' updateRosDep=URL)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name=ID
		//INDENT
		//  'keyLink:' keyLink=URL
		//  'repositoryPath:' repositoryPath=URL
		//  ('updateRosDep:' updateRosDep=URL)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'keyLink:'
		public Keyword getKeyLinkKeyword_4() { return cKeyLinkKeyword_4; }
		
		//keyLink=URL
		public Assignment getKeyLinkAssignment_5() { return cKeyLinkAssignment_5; }
		
		//URL
		public RuleCall getKeyLinkURLTerminalRuleCall_5_0() { return cKeyLinkURLTerminalRuleCall_5_0; }
		
		//'repositoryPath:'
		public Keyword getRepositoryPathKeyword_6() { return cRepositoryPathKeyword_6; }
		
		//repositoryPath=URL
		public Assignment getRepositoryPathAssignment_7() { return cRepositoryPathAssignment_7; }
		
		//URL
		public RuleCall getRepositoryPathURLTerminalRuleCall_7_0() { return cRepositoryPathURLTerminalRuleCall_7_0; }
		
		//('updateRosDep:' updateRosDep=URL)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'updateRosDep:'
		public Keyword getUpdateRosDepKeyword_8_0() { return cUpdateRosDepKeyword_8_0; }
		
		//updateRosDep=URL
		public Assignment getUpdateRosDepAssignment_8_1() { return cUpdateRosDepAssignment_8_1; }
		
		//URL
		public RuleCall getUpdateRosDepURLTerminalRuleCall_8_1_0() { return cUpdateRosDepURLTerminalRuleCall_8_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
	}
	public class StartCommandsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.StartCommands");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameStartCommandsKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cStartCommandsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStartCommandsListStartCommandsParserRuleCall_1_0 = (RuleCall)cStartCommandsAssignment_1.eContents().get(0);
		
		//StartCommands:
		//  name = 'startCommands:'
		//  startCommands=ListStartCommands
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = 'startCommands:'
		//startCommands=ListStartCommands
		public Group getGroup() { return cGroup; }
		
		//name = 'startCommands:'
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//'startCommands:'
		public Keyword getNameStartCommandsKeyword_0_0() { return cNameStartCommandsKeyword_0_0; }
		
		//startCommands=ListStartCommands
		public Assignment getStartCommandsAssignment_1() { return cStartCommandsAssignment_1; }
		
		//ListStartCommands
		public RuleCall getStartCommandsListStartCommandsParserRuleCall_1_0() { return cStartCommandsListStartCommandsParserRuleCall_1_0; }
	}
	public class ListStartCommandsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ListStartCommands");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cPreListElementParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Assignment cChildrenAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cChildrenSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cChildrenAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cChildrenAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cChildrenSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cChildrenAssignment_1_1.eContents().get(0);
		
		//ListStartCommands:
		//  (PreListElement children+=(STRING))
		//  (PreListElement children+=(STRING)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(PreListElement children+=(STRING))
		//(PreListElement children+=(STRING)*)?
		public Group getGroup() { return cGroup; }
		
		//(PreListElement children+=(STRING))
		public Group getGroup_0() { return cGroup_0; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0_0() { return cPreListElementParserRuleCall_0_0; }
		
		//children+=(STRING)
		public Assignment getChildrenAssignment_0_1() { return cChildrenAssignment_0_1; }
		
		//(STRING)
		public RuleCall getChildrenSTRINGTerminalRuleCall_0_1_0() { return cChildrenSTRINGTerminalRuleCall_0_1_0; }
		
		//(PreListElement children+=(STRING)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_1_0() { return cPreListElementParserRuleCall_1_0; }
		
		//children+=(STRING)*
		public Assignment getChildrenAssignment_1_1() { return cChildrenAssignment_1_1; }
		
		//(STRING)
		public RuleCall getChildrenSTRINGTerminalRuleCall_1_1_0() { return cChildrenSTRINGTerminalRuleCall_1_1_0; }
	}
	public class StackImplementationDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.StackImplementationDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeStackImplementationDescriptionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameQualifiedNameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cImplementsRosModelKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cImpRosmodelAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cImpRosmodelQualifiedNameParserRuleCall_5_1_0 = (RuleCall)cImpRosmodelAssignment_5_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Keyword cModeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cModeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cModeImplementationModeTypeEnumRuleCall_9_0 = (RuleCall)cModeAssignment_9.eContents().get(0);
		private final Assignment cImplAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cImplImplementationArtifactDescriptionParserRuleCall_10_0 = (RuleCall)cImplAssignment_10.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		
		//StackImplementationDescription:
		//  type='StackImplementationDescription'':'
		//  INDENT
		//    'name:' name=QualifiedName
		//  //  TODO: link to rosmodel
		//    ('implementsRosModel:'impRosmodel=QualifiedName)?
		//    'description:' description=STRING
		//    'mode:' mode=ImplementationModeType
		//    impl=ImplementationArtifactDescription
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='StackImplementationDescription'':'
		//INDENT
		//  'name:' name=QualifiedName
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=QualifiedName)?
		//  'description:' description=STRING
		//  'mode:' mode=ImplementationModeType
		//  impl=ImplementationArtifactDescription
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='StackImplementationDescription'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'StackImplementationDescription'
		public Keyword getTypeStackImplementationDescriptionKeyword_0_0() { return cTypeStackImplementationDescriptionKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }
		
		//'name:'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_4_0() { return cNameQualifiedNameParserRuleCall_4_0; }
		
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=QualifiedName)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'implementsRosModel:'
		public Keyword getImplementsRosModelKeyword_5_0() { return cImplementsRosModelKeyword_5_0; }
		
		//impRosmodel=QualifiedName
		public Assignment getImpRosmodelAssignment_5_1() { return cImpRosmodelAssignment_5_1; }
		
		//QualifiedName
		public RuleCall getImpRosmodelQualifiedNameParserRuleCall_5_1_0() { return cImpRosmodelQualifiedNameParserRuleCall_5_1_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//'mode:'
		public Keyword getModeKeyword_8() { return cModeKeyword_8; }
		
		//mode=ImplementationModeType
		public Assignment getModeAssignment_9() { return cModeAssignment_9; }
		
		//ImplementationModeType
		public RuleCall getModeImplementationModeTypeEnumRuleCall_9_0() { return cModeImplementationModeTypeEnumRuleCall_9_0; }
		
		//impl=ImplementationArtifactDescription
		public Assignment getImplAssignment_10() { return cImplAssignment_10; }
		
		//ImplementationArtifactDescription
		public RuleCall getImplImplementationArtifactDescriptionParserRuleCall_10_0() { return cImplImplementationArtifactDescriptionParserRuleCall_10_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_11() { return cDEDENTTerminalRuleCall_11; }
	}
	public class PackageDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.PackageDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypePackageDescriptionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cImageDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cImageDescriptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImageDescriptionImageDescriptionParserRuleCall_5_0 = (RuleCall)cImageDescriptionAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cRepositoryDescriptionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cRepositoryDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0 = (RuleCall)cRepositoryDescriptionAssignment_8.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//PackageDescription:
		//  type='PackageDescription'':'
		//  INDENT
		//    'imageDescription:'
		//  INDENT
		//    imageDescription=ImageDescription
		//  DEDENT
		//    'repositoryDescription:'
		//    repositoryDescription=RepositoryDescription
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='PackageDescription'':'
		//INDENT
		//  'imageDescription:'
		//INDENT
		//  imageDescription=ImageDescription
		//DEDENT
		//  'repositoryDescription:'
		//  repositoryDescription=RepositoryDescription
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='PackageDescription'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'PackageDescription'
		public Keyword getTypePackageDescriptionKeyword_0_0() { return cTypePackageDescriptionKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }
		
		//'imageDescription:'
		public Keyword getImageDescriptionKeyword_3() { return cImageDescriptionKeyword_3; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_4() { return cINDENTTerminalRuleCall_4; }
		
		//imageDescription=ImageDescription
		public Assignment getImageDescriptionAssignment_5() { return cImageDescriptionAssignment_5; }
		
		//ImageDescription
		public RuleCall getImageDescriptionImageDescriptionParserRuleCall_5_0() { return cImageDescriptionImageDescriptionParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
		
		//'repositoryDescription:'
		public Keyword getRepositoryDescriptionKeyword_7() { return cRepositoryDescriptionKeyword_7; }
		
		//repositoryDescription=RepositoryDescription
		public Assignment getRepositoryDescriptionAssignment_8() { return cRepositoryDescriptionAssignment_8; }
		
		//RepositoryDescription
		public RuleCall getRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0() { return cRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
	}
	public class ImageDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImageDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypesImageTypeListParserRuleCall_1_0 = (RuleCall)cTypesAssignment_1.eContents().get(0);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cNameMonolithicImplementationDescriptionCrossReference_3_0 = (CrossReference)cNameAssignment_3.eContents().get(0);
		private final RuleCall cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cNameMonolithicImplementationDescriptionCrossReference_3_0.eContents().get(1);
		private final Keyword cImageVersionsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cImageVersionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImageVersionsImageVersionListParserRuleCall_5_0 = (RuleCall)cImageVersionsAssignment_5.eContents().get(0);
		
		//ImageDescription:
		//  'types:' types += ImageTypeList
		//  'name:' name= [MonolithicImplementationDescription|QualifiedName]
		//  'imageVersions:' imageVersions = ImageVersionList
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'types:' types += ImageTypeList
		//'name:' name= [MonolithicImplementationDescription|QualifiedName]
		//'imageVersions:' imageVersions = ImageVersionList
		public Group getGroup() { return cGroup; }
		
		//'types:'
		public Keyword getTypesKeyword_0() { return cTypesKeyword_0; }
		
		//types += ImageTypeList
		public Assignment getTypesAssignment_1() { return cTypesAssignment_1; }
		
		//ImageTypeList
		public RuleCall getTypesImageTypeListParserRuleCall_1_0() { return cTypesImageTypeListParserRuleCall_1_0; }
		
		//'name:'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name= [MonolithicImplementationDescription|QualifiedName]
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getNameMonolithicImplementationDescriptionCrossReference_3_0() { return cNameMonolithicImplementationDescriptionCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1() { return cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1; }
		
		//'imageVersions:'
		public Keyword getImageVersionsKeyword_4() { return cImageVersionsKeyword_4; }
		
		//imageVersions = ImageVersionList
		public Assignment getImageVersionsAssignment_5() { return cImageVersionsAssignment_5; }
		
		//ImageVersionList
		public RuleCall getImageVersionsImageVersionListParserRuleCall_5_0() { return cImageVersionsImageVersionListParserRuleCall_5_0; }
	}
	public class ImageTypeListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImageTypeList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cChildrenAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cChildrenImageTypesEnumRuleCall_1_0 = (RuleCall)cChildrenAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cChildrenAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cChildrenImageTypesEnumRuleCall_2_1_0 = (RuleCall)cChildrenAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ImageTypeList:
		//  '[' (children+=(ImageTypes)) (',' children+=(ImageTypes)*)? ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'[' (children+=(ImageTypes)) (',' children+=(ImageTypes)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(children+=(ImageTypes))
		public Assignment getChildrenAssignment_1() { return cChildrenAssignment_1; }
		
		//(ImageTypes)
		public RuleCall getChildrenImageTypesEnumRuleCall_1_0() { return cChildrenImageTypesEnumRuleCall_1_0; }
		
		//(',' children+=(ImageTypes)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//children+=(ImageTypes)*
		public Assignment getChildrenAssignment_2_1() { return cChildrenAssignment_2_1; }
		
		//(ImageTypes)
		public RuleCall getChildrenImageTypesEnumRuleCall_2_1_0() { return cChildrenImageTypesEnumRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class ImageVersionListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImageVersionList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cPreListElementParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Assignment cChildrenAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cChildrenImageVersionTypesEnumRuleCall_0_1_0 = (RuleCall)cChildrenAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cChildrenAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cChildrenImageVersionTypesEnumRuleCall_1_1_0 = (RuleCall)cChildrenAssignment_1_1.eContents().get(0);
		
		//ImageVersionList:
		//  (PreListElement children+=( ImageVersionTypes))
		//  (PreListElement children+=(ImageVersionTypes)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(PreListElement children+=( ImageVersionTypes))
		//(PreListElement children+=(ImageVersionTypes)*)?
		public Group getGroup() { return cGroup; }
		
		//(PreListElement children+=( ImageVersionTypes))
		public Group getGroup_0() { return cGroup_0; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0_0() { return cPreListElementParserRuleCall_0_0; }
		
		//children+=( ImageVersionTypes)
		public Assignment getChildrenAssignment_0_1() { return cChildrenAssignment_0_1; }
		
		//( ImageVersionTypes)
		public RuleCall getChildrenImageVersionTypesEnumRuleCall_0_1_0() { return cChildrenImageVersionTypesEnumRuleCall_0_1_0; }
		
		//(PreListElement children+=(ImageVersionTypes)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_1_0() { return cPreListElementParserRuleCall_1_0; }
		
		//children+=(ImageVersionTypes)*
		public Assignment getChildrenAssignment_1_1() { return cChildrenAssignment_1_1; }
		
		//(ImageVersionTypes)
		public RuleCall getChildrenImageVersionTypesEnumRuleCall_1_1_0() { return cChildrenImageVersionTypesEnumRuleCall_1_1_0; }
	}
	public class RepositoryDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.RepositoryDescription");
		private final Assignment cSpecAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSpecRepositorySpecParserRuleCall_0 = (RuleCall)cSpecAssignment.eContents().get(0);
		
		//RepositoryDescription:
		//  (spec+=RepositorySpec)+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(spec+=RepositorySpec)+
		public Assignment getSpecAssignment() { return cSpecAssignment; }
		
		//RepositorySpec
		public RuleCall getSpecRepositorySpecParserRuleCall_0() { return cSpecRepositorySpecParserRuleCall_0; }
	}
	public class RepositorySpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.RepositorySpec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cRepositoryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRepositoryRepositoryParserRuleCall_4_0 = (RuleCall)cRepositoryAssignment_4.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//RepositorySpec:
		//  PreListElement 'name:' name=ID
		//  INDENT
		//      repository=Repository
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name=ID
		//INDENT
		//    repository=Repository
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//repository=Repository
		public Assignment getRepositoryAssignment_4() { return cRepositoryAssignment_4; }
		
		//Repository
		public RuleCall getRepositoryRepositoryParserRuleCall_4_0() { return cRepositoryRepositoryParserRuleCall_4_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_5() { return cDEDENTTerminalRuleCall_5; }
	}
	public class RepositoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Repository");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeRepositoryTypesEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPathKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPathAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPathSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cPathAssignment_2_1.eContents().get(0);
		
		//Repository:
		//  'type:' type = RepositoryTypes
		//  ('path:' path=STRING)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'type:' type = RepositoryTypes
		//('path:' path=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'type:'
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }
		
		//type = RepositoryTypes
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//RepositoryTypes
		public RuleCall getTypeRepositoryTypesEnumRuleCall_1_0() { return cTypeRepositoryTypesEnumRuleCall_1_0; }
		
		//('path:' path=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'path:'
		public Keyword getPathKeyword_2_0() { return cPathKeyword_2_0; }
		
		//path=STRING
		public Assignment getPathAssignment_2_1() { return cPathAssignment_2_1; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_2_1_0() { return cPathSTRINGTerminalRuleCall_2_1_0; }
	}
	public class PreListElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.PreListElement");
		private final Keyword cHyphenMinusKeyword = (Keyword)rule.eContents().get(1);
		
		//PreListElement hidden(SL_COMMENT):
		//  '-';
		@Override public ParserRule getRule() { return rule; }
		
		//'-'
		public Keyword getHyphenMinusKeyword() { return cHyphenMinusKeyword; }
	}
	public class ScalarNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumberParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUnitParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ScalarNumber:
		//  (Number Unit?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(Number Unit?)
		public Group getGroup() { return cGroup; }
		
		//Number
		public RuleCall getNumberParserRuleCall_0() { return cNumberParserRuleCall_0; }
		
		//Unit?
		public RuleCall getUnitParserRuleCall_1() { return cUnitParserRuleCall_1; }
	}
	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Number");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFLOATTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Number:
		//  INT|
		//  FLOAT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//INT|
		//FLOAT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//FLOAT
		public RuleCall getFLOATTerminalRuleCall_1() { return cFLOATTerminalRuleCall_1; }
	}
	public class UnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Unit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cScalarUnitSizeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cScalarUnitTimeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cScalarUnitFrequencyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Unit:
		//  ScalarUnitSize|ScalarUnitTime|ScalarUnitFrequency
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ScalarUnitSize|ScalarUnitTime|ScalarUnitFrequency
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ScalarUnitSize
		public RuleCall getScalarUnitSizeParserRuleCall_0() { return cScalarUnitSizeParserRuleCall_0; }
		
		//ScalarUnitTime
		public RuleCall getScalarUnitTimeParserRuleCall_1() { return cScalarUnitTimeParserRuleCall_1; }
		
		//ScalarUnitFrequency
		public RuleCall getScalarUnitFrequencyParserRuleCall_2() { return cScalarUnitFrequencyParserRuleCall_2; }
	}
	public class ScalarUnitSizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarUnitSize");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cBKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cKBKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cKbKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cKBKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cKbKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cMBKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cMbKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cMBKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cMbKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cGBKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cGbKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cGbKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cGBKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cTBKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cTbKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cTbKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cTBKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		
		//// 3.2.6.4 scalar-unit.size
		//ScalarUnitSize:
		//  ('B'|'b'
		//  'KB'|'kb'|'kB'|'Kb'|
		//  'MB'|'mb'|'mB'|'Mb'|
		//  'GB'|'gb'|'Gb'|'gB'|
		//  'TB'|'tb'|'Tb'|'tB')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('B'|'b'
		//'KB'|'kb'|'kB'|'Kb'|
		//'MB'|'mb'|'mB'|'Mb'|
		//'GB'|'gb'|'Gb'|'gB'|
		//'TB'|'tb'|'Tb'|'tB')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'B'
		public Keyword getBKeyword_0() { return cBKeyword_0; }
		
		//'b'
		//  'KB'
		public Group getGroup_1() { return cGroup_1; }
		
		//'b'
		public Keyword getBKeyword_1_0() { return cBKeyword_1_0; }
		
		//'KB'
		public Keyword getKBKeyword_1_1() { return cKBKeyword_1_1; }
		
		//'kb'
		public Keyword getKbKeyword_2() { return cKbKeyword_2; }
		
		//'kB'
		public Keyword getKBKeyword_3() { return cKBKeyword_3; }
		
		//'Kb'
		public Keyword getKbKeyword_4() { return cKbKeyword_4; }
		
		//'MB'
		public Keyword getMBKeyword_5() { return cMBKeyword_5; }
		
		//'mb'
		public Keyword getMbKeyword_6() { return cMbKeyword_6; }
		
		//'mB'
		public Keyword getMBKeyword_7() { return cMBKeyword_7; }
		
		//'Mb'
		public Keyword getMbKeyword_8() { return cMbKeyword_8; }
		
		//'GB'
		public Keyword getGBKeyword_9() { return cGBKeyword_9; }
		
		//'gb'
		public Keyword getGbKeyword_10() { return cGbKeyword_10; }
		
		//'Gb'
		public Keyword getGbKeyword_11() { return cGbKeyword_11; }
		
		//'gB'
		public Keyword getGBKeyword_12() { return cGBKeyword_12; }
		
		//'TB'
		public Keyword getTBKeyword_13() { return cTBKeyword_13; }
		
		//'tb'
		public Keyword getTbKeyword_14() { return cTbKeyword_14; }
		
		//'Tb'
		public Keyword getTbKeyword_15() { return cTbKeyword_15; }
		
		//'tB'
		public Keyword getTBKeyword_16() { return cTBKeyword_16; }
	}
	public class ScalarUnitTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarUnitTime");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cMKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cSKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cMsKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cUsKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cNsKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//// 3.2.6.5 scalar-unit.time
		//ScalarUnitTime:
		//  ('d'|'h'|'m'|'s'|'ms'|'us'|'ns')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('d'|'h'|'m'|'s'|'ms'|'us'|'ns')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'d'
		public Keyword getDKeyword_0() { return cDKeyword_0; }
		
		//'h'
		public Keyword getHKeyword_1() { return cHKeyword_1; }
		
		//'m'
		public Keyword getMKeyword_2() { return cMKeyword_2; }
		
		//'s'
		public Keyword getSKeyword_3() { return cSKeyword_3; }
		
		//'ms'
		public Keyword getMsKeyword_4() { return cMsKeyword_4; }
		
		//'us'
		public Keyword getUsKeyword_5() { return cUsKeyword_5; }
		
		//'ns'
		public Keyword getNsKeyword_6() { return cNsKeyword_6; }
	}
	public class ScalarUnitFrequencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarUnitFrequency");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cHzKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cKHzKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cMHzKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGHzKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//ScalarUnitFrequency:
		//  ('Hz'|'kHz'|'MHz'|'GHz')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('Hz'|'kHz'|'MHz'|'GHz')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Hz'
		public Keyword getHzKeyword_0() { return cHzKeyword_0; }
		
		//'kHz'
		public Keyword getKHzKeyword_1() { return cKHzKeyword_1; }
		
		//'MHz'
		public Keyword getMHzKeyword_2() { return cMHzKeyword_2; }
		
		//'GHz'
		public Keyword getGHzKeyword_3() { return cGHzKeyword_3; }
	}
	
	public class ImplementationModeTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImplementationModeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDebugModeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDebugModeDebugKeyword_0_0 = (Keyword)cDebugModeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cReleaseModeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cReleaseModeReleaseKeyword_1_0 = (Keyword)cReleaseModeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ImplementationModeType:
		//  DebugMode='debug'|
		//  ReleaseMode='release'
		//;
		public EnumRule getRule() { return rule; }
		
		//DebugMode='debug'|
		//ReleaseMode='release'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DebugMode='debug'
		public EnumLiteralDeclaration getDebugModeEnumLiteralDeclaration_0() { return cDebugModeEnumLiteralDeclaration_0; }
		
		//'debug'
		public Keyword getDebugModeDebugKeyword_0_0() { return cDebugModeDebugKeyword_0_0; }
		
		//ReleaseMode='release'
		public EnumLiteralDeclaration getReleaseModeEnumLiteralDeclaration_1() { return cReleaseModeEnumLiteralDeclaration_1; }
		
		//'release'
		public Keyword getReleaseModeReleaseKeyword_1_0() { return cReleaseModeReleaseKeyword_1_0; }
	}
	public class ResourceReqTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ResourceReqTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCPUEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCPUCpusKeyword_0_0 = (Keyword)cCPUEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMemoryEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMemoryMemoryKeyword_1_0 = (Keyword)cMemoryEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMemorySawpEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMemorySawpMemory_swapKeyword_2_0 = (Keyword)cMemorySawpEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cOomKillDisableEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cOomKillDisableOom_kill_disableKeyword_3_0 = (Keyword)cOomKillDisableEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ResourceReqTypes:
		//  CPU="cpus"|
		//  Memory='memory'|
		//  MemorySawp='memory_swap'|
		//  OomKillDisable='oom_kill_disable'
		//;
		public EnumRule getRule() { return rule; }
		
		//CPU="cpus"|
		//Memory='memory'|
		//MemorySawp='memory_swap'|
		//OomKillDisable='oom_kill_disable'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CPU="cpus"
		public EnumLiteralDeclaration getCPUEnumLiteralDeclaration_0() { return cCPUEnumLiteralDeclaration_0; }
		
		//"cpus"
		public Keyword getCPUCpusKeyword_0_0() { return cCPUCpusKeyword_0_0; }
		
		//Memory='memory'
		public EnumLiteralDeclaration getMemoryEnumLiteralDeclaration_1() { return cMemoryEnumLiteralDeclaration_1; }
		
		//'memory'
		public Keyword getMemoryMemoryKeyword_1_0() { return cMemoryMemoryKeyword_1_0; }
		
		//MemorySawp='memory_swap'
		public EnumLiteralDeclaration getMemorySawpEnumLiteralDeclaration_2() { return cMemorySawpEnumLiteralDeclaration_2; }
		
		//'memory_swap'
		public Keyword getMemorySawpMemory_swapKeyword_2_0() { return cMemorySawpMemory_swapKeyword_2_0; }
		
		//OomKillDisable='oom_kill_disable'
		public EnumLiteralDeclaration getOomKillDisableEnumLiteralDeclaration_3() { return cOomKillDisableEnumLiteralDeclaration_3; }
		
		//'oom_kill_disable'
		public Keyword getOomKillDisableOom_kill_disableKeyword_3_0() { return cOomKillDisableOom_kill_disableKeyword_3_0; }
	}
	public class OperatingSystemTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.OperatingSystemTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUbuntu18EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUbuntu18Ubuntu18Keyword_0_0 = (Keyword)cUbuntu18EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUbuntu20EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUbuntu20Ubuntu20Keyword_1_0 = (Keyword)cUbuntu20EnumLiteralDeclaration_1.eContents().get(0);
		
		//enum OperatingSystemTypes:
		//  ubuntu18='ubuntu18'|
		//  ubuntu20='ubuntu20'
		//;
		public EnumRule getRule() { return rule; }
		
		//ubuntu18='ubuntu18'|
		//ubuntu20='ubuntu20'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ubuntu18='ubuntu18'
		public EnumLiteralDeclaration getUbuntu18EnumLiteralDeclaration_0() { return cUbuntu18EnumLiteralDeclaration_0; }
		
		//'ubuntu18'
		public Keyword getUbuntu18Ubuntu18Keyword_0_0() { return cUbuntu18Ubuntu18Keyword_0_0; }
		
		//ubuntu20='ubuntu20'
		public EnumLiteralDeclaration getUbuntu20EnumLiteralDeclaration_1() { return cUbuntu20EnumLiteralDeclaration_1; }
		
		//'ubuntu20'
		public Keyword getUbuntu20Ubuntu20Keyword_1_0() { return cUbuntu20Ubuntu20Keyword_1_0; }
	}
	public class RosDistroElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.RosDistro");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMelodicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMelodicMelodicKeyword_0_0 = (Keyword)cMelodicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNoeticEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNoeticNoeticKeyword_1_0 = (Keyword)cNoeticEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFoxyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFoxyFoxyKeyword_2_0 = (Keyword)cFoxyEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGalacticEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGalacticGalacticKeyword_3_0 = (Keyword)cGalacticEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RosDistro:
		//  melodic='melodic'|noetic='noetic'|foxy='foxy'|galactic="galactic"
		//;
		public EnumRule getRule() { return rule; }
		
		//melodic='melodic'|noetic='noetic'|foxy='foxy'|galactic="galactic"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//melodic='melodic'
		public EnumLiteralDeclaration getMelodicEnumLiteralDeclaration_0() { return cMelodicEnumLiteralDeclaration_0; }
		
		//'melodic'
		public Keyword getMelodicMelodicKeyword_0_0() { return cMelodicMelodicKeyword_0_0; }
		
		//noetic='noetic'
		public EnumLiteralDeclaration getNoeticEnumLiteralDeclaration_1() { return cNoeticEnumLiteralDeclaration_1; }
		
		//'noetic'
		public Keyword getNoeticNoeticKeyword_1_0() { return cNoeticNoeticKeyword_1_0; }
		
		//foxy='foxy'
		public EnumLiteralDeclaration getFoxyEnumLiteralDeclaration_2() { return cFoxyEnumLiteralDeclaration_2; }
		
		//'foxy'
		public Keyword getFoxyFoxyKeyword_2_0() { return cFoxyFoxyKeyword_2_0; }
		
		//galactic="galactic"
		public EnumLiteralDeclaration getGalacticEnumLiteralDeclaration_3() { return cGalacticEnumLiteralDeclaration_3; }
		
		//"galactic"
		public Keyword getGalacticGalacticKeyword_3_0() { return cGalacticGalacticKeyword_3_0; }
	}
	public class ProcessorArchitectureTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ProcessorArchitectureTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cArm64EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cArm64Arm64Keyword_0_0 = (Keyword)cArm64EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cX86EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cX86X86Keyword_1_0 = (Keyword)cX86EnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ProcessorArchitectureTypes:
		//  arm64='arm64'|
		//  x86='x86'
		//;
		public EnumRule getRule() { return rule; }
		
		//arm64='arm64'|
		//x86='x86'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//arm64='arm64'
		public EnumLiteralDeclaration getArm64EnumLiteralDeclaration_0() { return cArm64EnumLiteralDeclaration_0; }
		
		//'arm64'
		public Keyword getArm64Arm64Keyword_0_0() { return cArm64Arm64Keyword_0_0; }
		
		//x86='x86'
		public EnumLiteralDeclaration getX86EnumLiteralDeclaration_1() { return cX86EnumLiteralDeclaration_1; }
		
		//'x86'
		public Keyword getX86X86Keyword_1_0() { return cX86X86Keyword_1_0; }
	}
	public class ImageTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImageTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDockerImageEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDockerImageDockerKeyword_0_0 = (Keyword)cDockerImageEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSnapImageEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSnapImageSnapKeyword_1_0 = (Keyword)cSnapImageEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ImageTypes:
		//  DockerImage='docker'|
		//  SnapImage='snap'
		//;
		public EnumRule getRule() { return rule; }
		
		//DockerImage='docker'|
		//SnapImage='snap'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DockerImage='docker'
		public EnumLiteralDeclaration getDockerImageEnumLiteralDeclaration_0() { return cDockerImageEnumLiteralDeclaration_0; }
		
		//'docker'
		public Keyword getDockerImageDockerKeyword_0_0() { return cDockerImageDockerKeyword_0_0; }
		
		//SnapImage='snap'
		public EnumLiteralDeclaration getSnapImageEnumLiteralDeclaration_1() { return cSnapImageEnumLiteralDeclaration_1; }
		
		//'snap'
		public Keyword getSnapImageSnapKeyword_1_0() { return cSnapImageSnapKeyword_1_0; }
	}
	public class ImageVersionTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImageVersionTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBranchEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBranchBranchKeyword_0_0 = (Keyword)cBranchEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCommitHashEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCommitHashCommitKeyword_1_0 = (Keyword)cCommitHashEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLatestEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLatestLatestKeyword_2_0 = (Keyword)cLatestEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cReleaseEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cReleaseReleaseKeyword_3_0 = (Keyword)cReleaseEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ImageVersionTypes:
		//  branch='branch'|
		//  commitHash='commit'|
		//  latest='latest'|
		//  release='release'
		//;
		public EnumRule getRule() { return rule; }
		
		//branch='branch'|
		//commitHash='commit'|
		//latest='latest'|
		//release='release'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//branch='branch'
		public EnumLiteralDeclaration getBranchEnumLiteralDeclaration_0() { return cBranchEnumLiteralDeclaration_0; }
		
		//'branch'
		public Keyword getBranchBranchKeyword_0_0() { return cBranchBranchKeyword_0_0; }
		
		//commitHash='commit'
		public EnumLiteralDeclaration getCommitHashEnumLiteralDeclaration_1() { return cCommitHashEnumLiteralDeclaration_1; }
		
		//'commit'
		public Keyword getCommitHashCommitKeyword_1_0() { return cCommitHashCommitKeyword_1_0; }
		
		//latest='latest'
		public EnumLiteralDeclaration getLatestEnumLiteralDeclaration_2() { return cLatestEnumLiteralDeclaration_2; }
		
		//'latest'
		public Keyword getLatestLatestKeyword_2_0() { return cLatestLatestKeyword_2_0; }
		
		//release='release'
		public EnumLiteralDeclaration getReleaseEnumLiteralDeclaration_3() { return cReleaseEnumLiteralDeclaration_3; }
		
		//'release'
		public Keyword getReleaseReleaseKeyword_3_0() { return cReleaseReleaseKeyword_3_0; }
	}
	public class RepositoryTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.RepositoryTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLocalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLocalLocalKeyword_0_0 = (Keyword)cLocalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRemoteEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRemoteRemoteKeyword_1_0 = (Keyword)cRemoteEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGitlabEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGitlabGitlabKeyword_2_0 = (Keyword)cGitlabEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum RepositoryTypes:
		//  local="local"|
		//  remote="remote"|
		//  gitlab="gitlab"
		//;
		public EnumRule getRule() { return rule; }
		
		//local="local"|
		//remote="remote"|
		//gitlab="gitlab"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//local="local"
		public EnumLiteralDeclaration getLocalEnumLiteralDeclaration_0() { return cLocalEnumLiteralDeclaration_0; }
		
		//"local"
		public Keyword getLocalLocalKeyword_0_0() { return cLocalLocalKeyword_0_0; }
		
		//remote="remote"
		public EnumLiteralDeclaration getRemoteEnumLiteralDeclaration_1() { return cRemoteEnumLiteralDeclaration_1; }
		
		//"remote"
		public Keyword getRemoteRemoteKeyword_1_0() { return cRemoteRemoteKeyword_1_0; }
		
		//gitlab="gitlab"
		public EnumLiteralDeclaration getGitlabEnumLiteralDeclaration_2() { return cGitlabEnumLiteralDeclaration_2; }
		
		//"gitlab"
		public Keyword getGitlabGitlabKeyword_2_0() { return cGitlabGitlabKeyword_2_0; }
	}
	
	private final YamlElements pYaml;
	private final YamlContentElements pYamlContent;
	private final MonolithicImplementationDescriptionElements pMonolithicImplementationDescription;
	private final ImplementationModeTypeElements eImplementationModeType;
	private final BranchTypeElements pBranchType;
	private final QualifiedNameElements pQualifiedName;
	private final NewImplementationArtifactElements pNewImplementationArtifact;
	private final ImplementationArtifactDescriptionElements pImplementationArtifactDescription;
	private final ReuseImplementationArtifactElements pReuseImplementationArtifact;
	private final ImplementationArtifactAbstractElements pImplementationArtifactAbstract;
	private final DeploymentRequirementsElements pDeploymentRequirements;
	private final ResourceRequirementsElements pResourceRequirements;
	private final ResourceRequirementElements pResourceRequirement;
	private final ResourceReqTypesElements eResourceReqTypes;
	private final ReqOperatingSystemElements pReqOperatingSystem;
	private final OperatingSystemTypeListElements pOperatingSystemTypeList;
	private final ReqProcessorArchitectureElements pReqProcessorArchitecture;
	private final ProcessorArchitectureTypeListElements pProcessorArchitectureTypeList;
	private final ReqRosDistroElements pReqRosDistro;
	private final RosDistroListElements pRosDistroList;
	private final OperatingSystemTypesElements eOperatingSystemTypes;
	private final RosDistroElements eRosDistro;
	private final ProcessorArchitectureTypesElements eProcessorArchitectureTypes;
	private final BuildRequirementsElements pBuildRequirements;
	private final ReqBuildDependenciesElements pReqBuildDependencies;
	private final DependencyElements pDependency;
	private final LocalPackageElements pLocalPackage;
	private final GitPackageElements pGitPackage;
	private final ReqDependencyRepositoriesElements pReqDependencyRepositories;
	private final AptRepositoryInstanceElements pAptRepositoryInstance;
	private final StartCommandsElements pStartCommands;
	private final ListStartCommandsElements pListStartCommands;
	private final StackImplementationDescriptionElements pStackImplementationDescription;
	private final PackageDescriptionElements pPackageDescription;
	private final ImageDescriptionElements pImageDescription;
	private final ImageTypeListElements pImageTypeList;
	private final ImageTypesElements eImageTypes;
	private final ImageVersionListElements pImageVersionList;
	private final ImageVersionTypesElements eImageVersionTypes;
	private final RepositoryDescriptionElements pRepositoryDescription;
	private final RepositorySpecElements pRepositorySpec;
	private final RepositoryElements pRepository;
	private final RepositoryTypesElements eRepositoryTypes;
	private final PreListElementElements pPreListElement;
	private final ScalarNumberElements pScalarNumber;
	private final NumberElements pNumber;
	private final UnitElements pUnit;
	private final ScalarUnitSizeElements pScalarUnitSize;
	private final ScalarUnitTimeElements pScalarUnitTime;
	private final ScalarUnitFrequencyElements pScalarUnitFrequency;
	private final TerminalRule tLOCALPATH;
	private final TerminalRule tFLOAT;
	private final TerminalRule tURL;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tINDENT;
	private final TerminalRule tDEDENT;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DeployModelGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pYaml = new YamlElements();
		this.pYamlContent = new YamlContentElements();
		this.pMonolithicImplementationDescription = new MonolithicImplementationDescriptionElements();
		this.eImplementationModeType = new ImplementationModeTypeElements();
		this.pBranchType = new BranchTypeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pNewImplementationArtifact = new NewImplementationArtifactElements();
		this.pImplementationArtifactDescription = new ImplementationArtifactDescriptionElements();
		this.pReuseImplementationArtifact = new ReuseImplementationArtifactElements();
		this.pImplementationArtifactAbstract = new ImplementationArtifactAbstractElements();
		this.pDeploymentRequirements = new DeploymentRequirementsElements();
		this.pResourceRequirements = new ResourceRequirementsElements();
		this.pResourceRequirement = new ResourceRequirementElements();
		this.eResourceReqTypes = new ResourceReqTypesElements();
		this.pReqOperatingSystem = new ReqOperatingSystemElements();
		this.pOperatingSystemTypeList = new OperatingSystemTypeListElements();
		this.pReqProcessorArchitecture = new ReqProcessorArchitectureElements();
		this.pProcessorArchitectureTypeList = new ProcessorArchitectureTypeListElements();
		this.pReqRosDistro = new ReqRosDistroElements();
		this.pRosDistroList = new RosDistroListElements();
		this.eOperatingSystemTypes = new OperatingSystemTypesElements();
		this.eRosDistro = new RosDistroElements();
		this.eProcessorArchitectureTypes = new ProcessorArchitectureTypesElements();
		this.pBuildRequirements = new BuildRequirementsElements();
		this.pReqBuildDependencies = new ReqBuildDependenciesElements();
		this.pDependency = new DependencyElements();
		this.pLocalPackage = new LocalPackageElements();
		this.pGitPackage = new GitPackageElements();
		this.pReqDependencyRepositories = new ReqDependencyRepositoriesElements();
		this.pAptRepositoryInstance = new AptRepositoryInstanceElements();
		this.pStartCommands = new StartCommandsElements();
		this.pListStartCommands = new ListStartCommandsElements();
		this.pStackImplementationDescription = new StackImplementationDescriptionElements();
		this.pPackageDescription = new PackageDescriptionElements();
		this.pImageDescription = new ImageDescriptionElements();
		this.pImageTypeList = new ImageTypeListElements();
		this.eImageTypes = new ImageTypesElements();
		this.pImageVersionList = new ImageVersionListElements();
		this.eImageVersionTypes = new ImageVersionTypesElements();
		this.pRepositoryDescription = new RepositoryDescriptionElements();
		this.pRepositorySpec = new RepositorySpecElements();
		this.pRepository = new RepositoryElements();
		this.eRepositoryTypes = new RepositoryTypesElements();
		this.pPreListElement = new PreListElementElements();
		this.pScalarNumber = new ScalarNumberElements();
		this.pNumber = new NumberElements();
		this.pUnit = new UnitElements();
		this.pScalarUnitSize = new ScalarUnitSizeElements();
		this.pScalarUnitTime = new ScalarUnitTimeElements();
		this.pScalarUnitFrequency = new ScalarUnitFrequencyElements();
		this.tLOCALPATH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.LOCALPATH");
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.FLOAT");
		this.tURL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.URL");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.SL_COMMENT");
		this.tINDENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.INDENT");
		this.tDEDENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.DEDENT");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fraunhofer.ipa.deployment.DeployModel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Yaml: {Yaml}
	//  (content+=YamlContent)*
	//;
	public YamlElements getYamlAccess() {
		return pYaml;
	}
	
	public ParserRule getYamlRule() {
		return getYamlAccess().getRule();
	}
	
	//YamlContent:
	//  rootContent=(MonolithicImplementationDescription|
	//    StackImplementationDescription|
	//    PackageDescription
	//  )
	//;
	public YamlContentElements getYamlContentAccess() {
		return pYamlContent;
	}
	
	public ParserRule getYamlContentRule() {
		return getYamlContentAccess().getRule();
	}
	
	//MonolithicImplementationDescription:
	//  type='MonolithicImplementationDescription:'
	//  INDENT
	//    'name:' name=QualifiedName
	//  //  TODO: link to rosmodel
	//    ('implementsRosModel:'impRosmodel=STRING)?
	//    'description:' description=STRING
	//    'mode:' mode=ImplementationModeType
	//    'branch:' branch=BranchType
	//    (impl=ImplementationArtifactDescription)?
	//  DEDENT
	//;
	public MonolithicImplementationDescriptionElements getMonolithicImplementationDescriptionAccess() {
		return pMonolithicImplementationDescription;
	}
	
	public ParserRule getMonolithicImplementationDescriptionRule() {
		return getMonolithicImplementationDescriptionAccess().getRule();
	}
	
	//enum ImplementationModeType:
	//  DebugMode='debug'|
	//  ReleaseMode='release'
	//;
	public ImplementationModeTypeElements getImplementationModeTypeAccess() {
		return eImplementationModeType;
	}
	
	public EnumRule getImplementationModeTypeRule() {
		return getImplementationModeTypeAccess().getRule();
	}
	
	//BranchType:
	//  STRING|'any'
	//;
	public BranchTypeElements getBranchTypeAccess() {
		return pBranchType;
	}
	
	public ParserRule getBranchTypeRule() {
		return getBranchTypeAccess().getRule();
	}
	
	//QualifiedName:
	//    ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//NewImplementationArtifact:
	//  'location'':'name=(LOCALPATH|URL)
	//  deployRequirements = DeploymentRequirements
	//  (resourceRequirements = ResourceRequirements)?
	//  (buildRequirements = BuildRequirements)?
	//  startCommands = StartCommands
	//;
	public NewImplementationArtifactElements getNewImplementationArtifactAccess() {
		return pNewImplementationArtifact;
	}
	
	public ParserRule getNewImplementationArtifactRule() {
		return getNewImplementationArtifactAccess().getRule();
	}
	
	//ImplementationArtifactDescription:
	//  type='ImplementationArtifactDescription'':'
	//  INDENT
	//    impl=(NewImplementationArtifact | ReuseImplementationArtifact)
	//  DEDENT
	//;
	public ImplementationArtifactDescriptionElements getImplementationArtifactDescriptionAccess() {
		return pImplementationArtifactDescription;
	}
	
	public ParserRule getImplementationArtifactDescriptionRule() {
		return getImplementationArtifactDescriptionAccess().getRule();
	}
	
	//ReuseImplementationArtifact:
	//  'use:' lists+= (ImplementationArtifactAbstract)+
	//;
	public ReuseImplementationArtifactElements getReuseImplementationArtifactAccess() {
		return pReuseImplementationArtifact;
	}
	
	public ParserRule getReuseImplementationArtifactRule() {
		return getReuseImplementationArtifactAccess().getRule();
	}
	
	//ImplementationArtifactAbstract:
	//  PreListElement 'import:' importedNamespace=QualifiedName
	//  INDENT
	//    'name:' name=[MonolithicImplementationDescription|QualifiedName]
	//    (startCommands = StartCommands)
	//  DEDENT
	//;
	public ImplementationArtifactAbstractElements getImplementationArtifactAbstractAccess() {
		return pImplementationArtifactAbstract;
	}
	
	public ParserRule getImplementationArtifactAbstractRule() {
		return getImplementationArtifactAbstractAccess().getRule();
	}
	
	//DeploymentRequirements:
	//  name='deployRequirements'':'
	//  operatingSystem = ReqOperatingSystem
	//  processorArchitecture = ReqProcessorArchitecture
	//  (rosDistro= ReqRosDistro)?
	//;
	public DeploymentRequirementsElements getDeploymentRequirementsAccess() {
		return pDeploymentRequirements;
	}
	
	public ParserRule getDeploymentRequirementsRule() {
		return getDeploymentRequirementsAccess().getRule();
	}
	
	//ResourceRequirements:
	//  name='resourceRequirements'':'
	//  requirements += (ResourceRequirement)+
	//;
	public ResourceRequirementsElements getResourceRequirementsAccess() {
		return pResourceRequirements;
	}
	
	public ParserRule getResourceRequirementsRule() {
		return getResourceRequirementsAccess().getRule();
	}
	
	//ResourceRequirement:
	//  PreListElement 'name:' name=ResourceReqTypes
	//  INDENT
	//    'value:' value=ScalarNumber
	//  DEDENT
	//;
	public ResourceRequirementElements getResourceRequirementAccess() {
		return pResourceRequirement;
	}
	
	public ParserRule getResourceRequirementRule() {
		return getResourceRequirementAccess().getRule();
	}
	
	//enum ResourceReqTypes:
	//  CPU="cpus"|
	//  Memory='memory'|
	//  MemorySawp='memory_swap'|
	//  OomKillDisable='oom_kill_disable'
	//;
	public ResourceReqTypesElements getResourceReqTypesAccess() {
		return eResourceReqTypes;
	}
	
	public EnumRule getResourceReqTypesRule() {
		return getResourceReqTypesAccess().getRule();
	}
	
	//ReqOperatingSystem:
	//  PreListElement 'name:' name='os'
	//  INDENT
	//    'value:' value=OperatingSystemTypeList
	//  DEDENT
	//;
	public ReqOperatingSystemElements getReqOperatingSystemAccess() {
		return pReqOperatingSystem;
	}
	
	public ParserRule getReqOperatingSystemRule() {
		return getReqOperatingSystemAccess().getRule();
	}
	
	//OperatingSystemTypeList:
	//  (PreListElement children+=( OperatingSystemTypes))
	//  (PreListElement children+=(OperatingSystemTypes)*)?
	//;
	public OperatingSystemTypeListElements getOperatingSystemTypeListAccess() {
		return pOperatingSystemTypeList;
	}
	
	public ParserRule getOperatingSystemTypeListRule() {
		return getOperatingSystemTypeListAccess().getRule();
	}
	
	//ReqProcessorArchitecture:
	//  PreListElement 'name:' name='processor_architecture'
	//  INDENT
	//    'value:' value=ProcessorArchitectureTypeList
	//  DEDENT
	//;
	public ReqProcessorArchitectureElements getReqProcessorArchitectureAccess() {
		return pReqProcessorArchitecture;
	}
	
	public ParserRule getReqProcessorArchitectureRule() {
		return getReqProcessorArchitectureAccess().getRule();
	}
	
	//ProcessorArchitectureTypeList:
	//  (PreListElement children+=( ProcessorArchitectureTypes))
	//  (PreListElement children+=(ProcessorArchitectureTypes)*)?
	//;
	public ProcessorArchitectureTypeListElements getProcessorArchitectureTypeListAccess() {
		return pProcessorArchitectureTypeList;
	}
	
	public ParserRule getProcessorArchitectureTypeListRule() {
		return getProcessorArchitectureTypeListAccess().getRule();
	}
	
	//ReqRosDistro:
	//  PreListElement 'name:' name='ros_distro'
	//  INDENT
	//    'value:' value=RosDistroList
	//  DEDENT
	//;
	public ReqRosDistroElements getReqRosDistroAccess() {
		return pReqRosDistro;
	}
	
	public ParserRule getReqRosDistroRule() {
		return getReqRosDistroAccess().getRule();
	}
	
	//RosDistroList:
	//  (PreListElement children+=( RosDistro))
	//  (PreListElement children+=(RosDistro)*)?
	//;
	public RosDistroListElements getRosDistroListAccess() {
		return pRosDistroList;
	}
	
	public ParserRule getRosDistroListRule() {
		return getRosDistroListAccess().getRule();
	}
	
	//enum OperatingSystemTypes:
	//  ubuntu18='ubuntu18'|
	//  ubuntu20='ubuntu20'
	//;
	public OperatingSystemTypesElements getOperatingSystemTypesAccess() {
		return eOperatingSystemTypes;
	}
	
	public EnumRule getOperatingSystemTypesRule() {
		return getOperatingSystemTypesAccess().getRule();
	}
	
	//enum RosDistro:
	//  melodic='melodic'|noetic='noetic'|foxy='foxy'|galactic="galactic"
	//;
	public RosDistroElements getRosDistroAccess() {
		return eRosDistro;
	}
	
	public EnumRule getRosDistroRule() {
		return getRosDistroAccess().getRule();
	}
	
	//enum ProcessorArchitectureTypes:
	//  arm64='arm64'|
	//  x86='x86'
	//;
	public ProcessorArchitectureTypesElements getProcessorArchitectureTypesAccess() {
		return eProcessorArchitectureTypes;
	}
	
	public EnumRule getProcessorArchitectureTypesRule() {
		return getProcessorArchitectureTypesAccess().getRule();
	}
	
	//BuildRequirements:
	//  name='buildRequirements'':'
	//  INDENT
	//  (buildDependencies = ReqBuildDependencies)?
	//  (dependencyRepositories = ReqDependencyRepositories)?
	//  DEDENT
	//;
	public BuildRequirementsElements getBuildRequirementsAccess() {
		return pBuildRequirements;
	}
	
	public ParserRule getBuildRequirementsRule() {
		return getBuildRequirementsAccess().getRule();
	}
	
	//ReqBuildDependencies:
	//  name = 'dependOn:'
	//    (dependencies+=Dependency)+
	//;
	public ReqBuildDependenciesElements getReqBuildDependenciesAccess() {
		return pReqBuildDependencies;
	}
	
	public ParserRule getReqBuildDependenciesRule() {
		return getReqBuildDependenciesAccess().getRule();
	}
	
	//Dependency:
	//  LocalPackage|GitPackage
	//;
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	//LocalPackage:
	//  PreListElement 'from:' importedNamespace=QualifiedName
	//  INDENT
	//  'name:' name = [MonolithicImplementationDescription|QualifiedName]
	//  DEDENT
	//;
	public LocalPackageElements getLocalPackageAccess() {
		return pLocalPackage;
	}
	
	public ParserRule getLocalPackageRule() {
		return getLocalPackageAccess().getRule();
	}
	
	//GitPackage:
	//  PreListElement  'from:' path = URL
	//  INDENT
	// 'name:' name = ID
	// ('branch:' branch = STRING)?
	// DEDENT
	//;
	public GitPackageElements getGitPackageAccess() {
		return pGitPackage;
	}
	
	public ParserRule getGitPackageRule() {
		return getGitPackageAccess().getRule();
	}
	
	//ReqDependencyRepositories:
	//  name='aptRepositories'':'
	//  children+=(AptRepositoryInstance)+
	//;
	public ReqDependencyRepositoriesElements getReqDependencyRepositoriesAccess() {
		return pReqDependencyRepositories;
	}
	
	public ParserRule getReqDependencyRepositoriesRule() {
		return getReqDependencyRepositoriesAccess().getRule();
	}
	
	//AptRepositoryInstance:
	//  PreListElement 'name:' name=ID
	//  INDENT
	//    'keyLink:' keyLink=URL
	//    'repositoryPath:' repositoryPath=URL
	//    ('updateRosDep:' updateRosDep=URL)?
	//  DEDENT
	//;
	public AptRepositoryInstanceElements getAptRepositoryInstanceAccess() {
		return pAptRepositoryInstance;
	}
	
	public ParserRule getAptRepositoryInstanceRule() {
		return getAptRepositoryInstanceAccess().getRule();
	}
	
	//StartCommands:
	//  name = 'startCommands:'
	//  startCommands=ListStartCommands
	//;
	public StartCommandsElements getStartCommandsAccess() {
		return pStartCommands;
	}
	
	public ParserRule getStartCommandsRule() {
		return getStartCommandsAccess().getRule();
	}
	
	//ListStartCommands:
	//  (PreListElement children+=(STRING))
	//  (PreListElement children+=(STRING)*)?
	//;
	public ListStartCommandsElements getListStartCommandsAccess() {
		return pListStartCommands;
	}
	
	public ParserRule getListStartCommandsRule() {
		return getListStartCommandsAccess().getRule();
	}
	
	//StackImplementationDescription:
	//  type='StackImplementationDescription'':'
	//  INDENT
	//    'name:' name=QualifiedName
	//  //  TODO: link to rosmodel
	//    ('implementsRosModel:'impRosmodel=QualifiedName)?
	//    'description:' description=STRING
	//    'mode:' mode=ImplementationModeType
	//    impl=ImplementationArtifactDescription
	//  DEDENT
	//;
	public StackImplementationDescriptionElements getStackImplementationDescriptionAccess() {
		return pStackImplementationDescription;
	}
	
	public ParserRule getStackImplementationDescriptionRule() {
		return getStackImplementationDescriptionAccess().getRule();
	}
	
	//PackageDescription:
	//  type='PackageDescription'':'
	//  INDENT
	//    'imageDescription:'
	//  INDENT
	//    imageDescription=ImageDescription
	//  DEDENT
	//    'repositoryDescription:'
	//    repositoryDescription=RepositoryDescription
	//  DEDENT
	//;
	public PackageDescriptionElements getPackageDescriptionAccess() {
		return pPackageDescription;
	}
	
	public ParserRule getPackageDescriptionRule() {
		return getPackageDescriptionAccess().getRule();
	}
	
	//ImageDescription:
	//  'types:' types += ImageTypeList
	//  'name:' name= [MonolithicImplementationDescription|QualifiedName]
	//  'imageVersions:' imageVersions = ImageVersionList
	//;
	public ImageDescriptionElements getImageDescriptionAccess() {
		return pImageDescription;
	}
	
	public ParserRule getImageDescriptionRule() {
		return getImageDescriptionAccess().getRule();
	}
	
	//ImageTypeList:
	//  '[' (children+=(ImageTypes)) (',' children+=(ImageTypes)*)? ']'
	//;
	public ImageTypeListElements getImageTypeListAccess() {
		return pImageTypeList;
	}
	
	public ParserRule getImageTypeListRule() {
		return getImageTypeListAccess().getRule();
	}
	
	//enum ImageTypes:
	//  DockerImage='docker'|
	//  SnapImage='snap'
	//;
	public ImageTypesElements getImageTypesAccess() {
		return eImageTypes;
	}
	
	public EnumRule getImageTypesRule() {
		return getImageTypesAccess().getRule();
	}
	
	//ImageVersionList:
	//  (PreListElement children+=( ImageVersionTypes))
	//  (PreListElement children+=(ImageVersionTypes)*)?
	//;
	public ImageVersionListElements getImageVersionListAccess() {
		return pImageVersionList;
	}
	
	public ParserRule getImageVersionListRule() {
		return getImageVersionListAccess().getRule();
	}
	
	//enum ImageVersionTypes:
	//  branch='branch'|
	//  commitHash='commit'|
	//  latest='latest'|
	//  release='release'
	//;
	public ImageVersionTypesElements getImageVersionTypesAccess() {
		return eImageVersionTypes;
	}
	
	public EnumRule getImageVersionTypesRule() {
		return getImageVersionTypesAccess().getRule();
	}
	
	//RepositoryDescription:
	//  (spec+=RepositorySpec)+
	//;
	public RepositoryDescriptionElements getRepositoryDescriptionAccess() {
		return pRepositoryDescription;
	}
	
	public ParserRule getRepositoryDescriptionRule() {
		return getRepositoryDescriptionAccess().getRule();
	}
	
	//RepositorySpec:
	//  PreListElement 'name:' name=ID
	//  INDENT
	//      repository=Repository
	//  DEDENT
	//;
	public RepositorySpecElements getRepositorySpecAccess() {
		return pRepositorySpec;
	}
	
	public ParserRule getRepositorySpecRule() {
		return getRepositorySpecAccess().getRule();
	}
	
	//Repository:
	//  'type:' type = RepositoryTypes
	//  ('path:' path=STRING)?
	//;
	public RepositoryElements getRepositoryAccess() {
		return pRepository;
	}
	
	public ParserRule getRepositoryRule() {
		return getRepositoryAccess().getRule();
	}
	
	//enum RepositoryTypes:
	//  local="local"|
	//  remote="remote"|
	//  gitlab="gitlab"
	//;
	public RepositoryTypesElements getRepositoryTypesAccess() {
		return eRepositoryTypes;
	}
	
	public EnumRule getRepositoryTypesRule() {
		return getRepositoryTypesAccess().getRule();
	}
	
	//PreListElement hidden(SL_COMMENT):
	//  '-';
	public PreListElementElements getPreListElementAccess() {
		return pPreListElement;
	}
	
	public ParserRule getPreListElementRule() {
		return getPreListElementAccess().getRule();
	}
	
	//ScalarNumber:
	//  (Number Unit?)
	//;
	public ScalarNumberElements getScalarNumberAccess() {
		return pScalarNumber;
	}
	
	public ParserRule getScalarNumberRule() {
		return getScalarNumberAccess().getRule();
	}
	
	//Number:
	//  INT|
	//  FLOAT
	//;
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	//Unit:
	//  ScalarUnitSize|ScalarUnitTime|ScalarUnitFrequency
	//;
	public UnitElements getUnitAccess() {
		return pUnit;
	}
	
	public ParserRule getUnitRule() {
		return getUnitAccess().getRule();
	}
	
	//// 3.2.6.4 scalar-unit.size
	//ScalarUnitSize:
	//  ('B'|'b'
	//  'KB'|'kb'|'kB'|'Kb'|
	//  'MB'|'mb'|'mB'|'Mb'|
	//  'GB'|'gb'|'Gb'|'gB'|
	//  'TB'|'tb'|'Tb'|'tB')
	//;
	public ScalarUnitSizeElements getScalarUnitSizeAccess() {
		return pScalarUnitSize;
	}
	
	public ParserRule getScalarUnitSizeRule() {
		return getScalarUnitSizeAccess().getRule();
	}
	
	//// 3.2.6.5 scalar-unit.time
	//ScalarUnitTime:
	//  ('d'|'h'|'m'|'s'|'ms'|'us'|'ns')
	//;
	public ScalarUnitTimeElements getScalarUnitTimeAccess() {
		return pScalarUnitTime;
	}
	
	public ParserRule getScalarUnitTimeRule() {
		return getScalarUnitTimeAccess().getRule();
	}
	
	//ScalarUnitFrequency:
	//  ('Hz'|'kHz'|'MHz'|'GHz')
	//;
	public ScalarUnitFrequencyElements getScalarUnitFrequencyAccess() {
		return pScalarUnitFrequency;
	}
	
	public ParserRule getScalarUnitFrequencyRule() {
		return getScalarUnitFrequencyAccess().getRule();
	}
	
	//terminal LOCALPATH:
	//   (
	//    '"'(('/')|('./')|('../')|('.'))
	//    ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-')*
	//    '"'
	//   )
	//;
	public TerminalRule getLOCALPATHRule() {
		return tLOCALPATH;
	}
	
	//terminal FLOAT returns ecore::EFloat: INT '.' INT;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal URL:
	//  (
	//    '"'
	//    (
	//      (('http'('s')?'://')|('git@'))
	//      ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'\\'|'/'|'='|'?'|'!'|'('|')'|'.'|'-'|':')*
	//    )'"'|
	//    'localhost'|
	//    '"'('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-')*':'
	//    ('0'..'9')*'"'
	//  )
	//;
	public TerminalRule getURLRule() {
		return tURL;
	}
	
	//terminal SL_COMMENT: '#' !('\n'|'\r')*;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal INDENT: 'synthetic:INDENT';
	public TerminalRule getINDENTRule() {
		return tINDENT;
	}
	
	//terminal DEDENT: 'synthetic:DEDENT';
	public TerminalRule getDEDENTRule() {
		return tDEDENT;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
