/*
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DeployModelGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class YamlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Yaml");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cYamlAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cContentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cContentYamlContentParserRuleCall_1_0 = (RuleCall)cContentAssignment_1.eContents().get(0);
		
		//Yaml: {Yaml}
		//  (content+=YamlContent)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Yaml}
		// (content+=YamlContent)*
		public Group getGroup() { return cGroup; }
		
		//{Yaml}
		public Action getYamlAction_0() { return cYamlAction_0; }
		
		//(content+=YamlContent)*
		public Assignment getContentAssignment_1() { return cContentAssignment_1; }
		
		//YamlContent
		public RuleCall getContentYamlContentParserRuleCall_1_0() { return cContentYamlContentParserRuleCall_1_0; }
	}
	public class YamlContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.YamlContent");
		private final Assignment cRootContentAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRootContentAlternatives_0 = (Alternatives)cRootContentAssignment.eContents().get(0);
		private final RuleCall cRootContentMonolithicImplementationDescriptionParserRuleCall_0_0 = (RuleCall)cRootContentAlternatives_0.eContents().get(0);
		private final RuleCall cRootContentStackImplementationDescriptionParserRuleCall_0_1 = (RuleCall)cRootContentAlternatives_0.eContents().get(1);
		private final RuleCall cRootContentPackageDescriptionParserRuleCall_0_2 = (RuleCall)cRootContentAlternatives_0.eContents().get(2);
		private final RuleCall cRootContentCISettingParserRuleCall_0_3 = (RuleCall)cRootContentAlternatives_0.eContents().get(3);
		
		//YamlContent:
		//  rootContent=(MonolithicImplementationDescription|
		//    StackImplementationDescription|
		//    PackageDescription|
		//    CISetting
		//  )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//rootContent=(MonolithicImplementationDescription|
		//  StackImplementationDescription|
		//  PackageDescription|
		//  CISetting
		//)
		public Assignment getRootContentAssignment() { return cRootContentAssignment; }
		
		//(MonolithicImplementationDescription|
		//    StackImplementationDescription|
		//    PackageDescription|
		//    CISetting
		//  )
		public Alternatives getRootContentAlternatives_0() { return cRootContentAlternatives_0; }
		
		//MonolithicImplementationDescription
		public RuleCall getRootContentMonolithicImplementationDescriptionParserRuleCall_0_0() { return cRootContentMonolithicImplementationDescriptionParserRuleCall_0_0; }
		
		//StackImplementationDescription
		public RuleCall getRootContentStackImplementationDescriptionParserRuleCall_0_1() { return cRootContentStackImplementationDescriptionParserRuleCall_0_1; }
		
		//PackageDescription
		public RuleCall getRootContentPackageDescriptionParserRuleCall_0_2() { return cRootContentPackageDescriptionParserRuleCall_0_2; }
		
		//CISetting
		public RuleCall getRootContentCISettingParserRuleCall_0_3() { return cRootContentCISettingParserRuleCall_0_3; }
	}
	public class MonolithicImplementationDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MonolithicImplementationDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeMonolithicImplementationDescriptionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameQualifiedNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImplementsRosModelKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cImpRosmodelAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cImpRosmodelSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cImpRosmodelAssignment_4_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescriptionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescriptionAssignment_6.eContents().get(0);
		private final Keyword cModeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cModeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cModeImplementationModeTypeEnumRuleCall_8_0 = (RuleCall)cModeAssignment_8.eContents().get(0);
		private final Keyword cBranchKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cBranchAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cBranchBranchTypeParserRuleCall_10_0 = (RuleCall)cBranchAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cImplementationArtifactDescriptionKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cImplementationAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cImplementationNewImplementationArtifactParserRuleCall_11_1_0 = (RuleCall)cImplementationAssignment_11_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//MonolithicImplementationDescription:
		//  type='MonolithicImplementationDescription:'
		//  INDENT
		//    'name:' name=QualifiedName
		//  //  TODO: link to rosmodel
		//    ('implementsRosModel:'impRosmodel=STRING)?
		//    'description:' description=STRING
		//    'mode:' mode=ImplementationModeType
		//    'branch:' branch=BranchType
		//    ('ImplementationArtifactDescription:' implementation=NewImplementationArtifact)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='MonolithicImplementationDescription:'
		//INDENT
		//  'name:' name=QualifiedName
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=STRING)?
		//  'description:' description=STRING
		//  'mode:' mode=ImplementationModeType
		//  'branch:' branch=BranchType
		//  ('ImplementationArtifactDescription:' implementation=NewImplementationArtifact)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='MonolithicImplementationDescription:'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'MonolithicImplementationDescription:'
		public Keyword getTypeMonolithicImplementationDescriptionKeyword_0_0() { return cTypeMonolithicImplementationDescriptionKeyword_0_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//'name:'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_3_0() { return cNameQualifiedNameParserRuleCall_3_0; }
		
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'implementsRosModel:'
		public Keyword getImplementsRosModelKeyword_4_0() { return cImplementsRosModelKeyword_4_0; }
		
		//impRosmodel=STRING
		public Assignment getImpRosmodelAssignment_4_1() { return cImpRosmodelAssignment_4_1; }
		
		//STRING
		public RuleCall getImpRosmodelSTRINGTerminalRuleCall_4_1_0() { return cImpRosmodelSTRINGTerminalRuleCall_4_1_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_6() { return cDescriptionAssignment_6; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_0() { return cDescriptionSTRINGTerminalRuleCall_6_0; }
		
		//'mode:'
		public Keyword getModeKeyword_7() { return cModeKeyword_7; }
		
		//mode=ImplementationModeType
		public Assignment getModeAssignment_8() { return cModeAssignment_8; }
		
		//ImplementationModeType
		public RuleCall getModeImplementationModeTypeEnumRuleCall_8_0() { return cModeImplementationModeTypeEnumRuleCall_8_0; }
		
		//'branch:'
		public Keyword getBranchKeyword_9() { return cBranchKeyword_9; }
		
		//branch=BranchType
		public Assignment getBranchAssignment_10() { return cBranchAssignment_10; }
		
		//BranchType
		public RuleCall getBranchBranchTypeParserRuleCall_10_0() { return cBranchBranchTypeParserRuleCall_10_0; }
		
		//('ImplementationArtifactDescription:' implementation=NewImplementationArtifact)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'ImplementationArtifactDescription:'
		public Keyword getImplementationArtifactDescriptionKeyword_11_0() { return cImplementationArtifactDescriptionKeyword_11_0; }
		
		//implementation=NewImplementationArtifact
		public Assignment getImplementationAssignment_11_1() { return cImplementationAssignment_11_1; }
		
		//NewImplementationArtifact
		public RuleCall getImplementationNewImplementationArtifactParserRuleCall_11_1_0() { return cImplementationNewImplementationArtifactParserRuleCall_11_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_12() { return cDEDENTTerminalRuleCall_12; }
	}
	public class BranchTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.BranchType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAnyKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BranchType:
		//  STRING|'any'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING|'any'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//'any'
		public Keyword getAnyKeyword_1() { return cAnyKeyword_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//    ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class NewImplementationArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.NewImplementationArtifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLocationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLocationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cLocationAlternatives_2_0 = (Alternatives)cLocationAssignment_2.eContents().get(0);
		private final RuleCall cLocationSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cLocationAlternatives_2_0.eContents().get(0);
		private final RuleCall cLocationLOCALPATHTerminalRuleCall_2_0_1 = (RuleCall)cLocationAlternatives_2_0.eContents().get(1);
		private final RuleCall cLocationURLTerminalRuleCall_2_0_2 = (RuleCall)cLocationAlternatives_2_0.eContents().get(2);
		private final Keyword cDeployRequirementsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDeployRequirementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDeployRequirementsDeploymentRequirementsParserRuleCall_4_0 = (RuleCall)cDeployRequirementsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cResourceRequirementsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cResourceRequirementsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cResourceRequirementsResourceRequirementsParserRuleCall_5_1_0 = (RuleCall)cResourceRequirementsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cBuildRequirementsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBuildRequirementsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBuildRequirementsBuildRequirementsParserRuleCall_6_1_0 = (RuleCall)cBuildRequirementsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cStartCommandsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cStartCommandsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cStartCommandsMultiValueListParserRuleCall_7_1_0 = (RuleCall)cStartCommandsAssignment_7_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//NewImplementationArtifact:
		//    INDENT
		//      'location:' location=(STRING|LOCALPATH|URL)
		//      'deployRequirements:' deployRequirements = DeploymentRequirements
		//      ('resourceRequirements:' resourceRequirements = ResourceRequirements)?
		//      ('buildRequirements:' buildRequirements = BuildRequirements)?
		//      ('startCommands:' startCommands = MultiValueList)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  INDENT
		//    'location:' location=(STRING|LOCALPATH|URL)
		//    'deployRequirements:' deployRequirements = DeploymentRequirements
		//    ('resourceRequirements:' resourceRequirements = ResourceRequirements)?
		//    ('buildRequirements:' buildRequirements = BuildRequirements)?
		//    ('startCommands:' startCommands = MultiValueList)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_0() { return cINDENTTerminalRuleCall_0; }
		
		//'location:'
		public Keyword getLocationKeyword_1() { return cLocationKeyword_1; }
		
		//location=(STRING|LOCALPATH|URL)
		public Assignment getLocationAssignment_2() { return cLocationAssignment_2; }
		
		//(STRING|LOCALPATH|URL)
		public Alternatives getLocationAlternatives_2_0() { return cLocationAlternatives_2_0; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_2_0_0() { return cLocationSTRINGTerminalRuleCall_2_0_0; }
		
		//LOCALPATH
		public RuleCall getLocationLOCALPATHTerminalRuleCall_2_0_1() { return cLocationLOCALPATHTerminalRuleCall_2_0_1; }
		
		//URL
		public RuleCall getLocationURLTerminalRuleCall_2_0_2() { return cLocationURLTerminalRuleCall_2_0_2; }
		
		//'deployRequirements:'
		public Keyword getDeployRequirementsKeyword_3() { return cDeployRequirementsKeyword_3; }
		
		//deployRequirements = DeploymentRequirements
		public Assignment getDeployRequirementsAssignment_4() { return cDeployRequirementsAssignment_4; }
		
		//DeploymentRequirements
		public RuleCall getDeployRequirementsDeploymentRequirementsParserRuleCall_4_0() { return cDeployRequirementsDeploymentRequirementsParserRuleCall_4_0; }
		
		//('resourceRequirements:' resourceRequirements = ResourceRequirements)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'resourceRequirements:'
		public Keyword getResourceRequirementsKeyword_5_0() { return cResourceRequirementsKeyword_5_0; }
		
		//resourceRequirements = ResourceRequirements
		public Assignment getResourceRequirementsAssignment_5_1() { return cResourceRequirementsAssignment_5_1; }
		
		//ResourceRequirements
		public RuleCall getResourceRequirementsResourceRequirementsParserRuleCall_5_1_0() { return cResourceRequirementsResourceRequirementsParserRuleCall_5_1_0; }
		
		//('buildRequirements:' buildRequirements = BuildRequirements)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'buildRequirements:'
		public Keyword getBuildRequirementsKeyword_6_0() { return cBuildRequirementsKeyword_6_0; }
		
		//buildRequirements = BuildRequirements
		public Assignment getBuildRequirementsAssignment_6_1() { return cBuildRequirementsAssignment_6_1; }
		
		//BuildRequirements
		public RuleCall getBuildRequirementsBuildRequirementsParserRuleCall_6_1_0() { return cBuildRequirementsBuildRequirementsParserRuleCall_6_1_0; }
		
		//('startCommands:' startCommands = MultiValueList)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'startCommands:'
		public Keyword getStartCommandsKeyword_7_0() { return cStartCommandsKeyword_7_0; }
		
		//startCommands = MultiValueList
		public Assignment getStartCommandsAssignment_7_1() { return cStartCommandsAssignment_7_1; }
		
		//MultiValueList
		public RuleCall getStartCommandsMultiValueListParserRuleCall_7_1_0() { return cStartCommandsMultiValueListParserRuleCall_7_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_8() { return cDEDENTTerminalRuleCall_8; }
	}
	public class ImplementationArtifactDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImplementationArtifactDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cImplAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cImplAlternatives_1_0 = (Alternatives)cImplAssignment_1.eContents().get(0);
		private final RuleCall cImplNewImplementationArtifactParserRuleCall_1_0_0 = (RuleCall)cImplAlternatives_1_0.eContents().get(0);
		private final RuleCall cImplReuseImplementationArtifactParserRuleCall_1_0_1 = (RuleCall)cImplAlternatives_1_0.eContents().get(1);
		private final RuleCall cDEDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ImplementationArtifactDescription:
		//  INDENT
		//    impl=(NewImplementationArtifact | ReuseImplementationArtifact)
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//INDENT
		//  impl=(NewImplementationArtifact | ReuseImplementationArtifact)
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_0() { return cINDENTTerminalRuleCall_0; }
		
		//impl=(NewImplementationArtifact | ReuseImplementationArtifact)
		public Assignment getImplAssignment_1() { return cImplAssignment_1; }
		
		//(NewImplementationArtifact | ReuseImplementationArtifact)
		public Alternatives getImplAlternatives_1_0() { return cImplAlternatives_1_0; }
		
		//NewImplementationArtifact
		public RuleCall getImplNewImplementationArtifactParserRuleCall_1_0_0() { return cImplNewImplementationArtifactParserRuleCall_1_0_0; }
		
		//ReuseImplementationArtifact
		public RuleCall getImplReuseImplementationArtifactParserRuleCall_1_0_1() { return cImplReuseImplementationArtifactParserRuleCall_1_0_1; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_2() { return cDEDENTTerminalRuleCall_2; }
	}
	public class ReuseImplementationArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReuseImplementationArtifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cListsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListsImplementationArtifactAbstractParserRuleCall_1_0 = (RuleCall)cListsAssignment_1.eContents().get(0);
		
		//ReuseImplementationArtifact:
		//  'use:' lists+= (ImplementationArtifactAbstract)+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'use:' lists+= (ImplementationArtifactAbstract)+
		public Group getGroup() { return cGroup; }
		
		//'use:'
		public Keyword getUseKeyword_0() { return cUseKeyword_0; }
		
		//lists+= (ImplementationArtifactAbstract)+
		public Assignment getListsAssignment_1() { return cListsAssignment_1; }
		
		//(ImplementationArtifactAbstract)
		public RuleCall getListsImplementationArtifactAbstractParserRuleCall_1_0() { return cListsImplementationArtifactAbstractParserRuleCall_1_0; }
	}
	public class ImplementationArtifactAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImplementationArtifactAbstract");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_2_0 = (RuleCall)cImportedNamespaceAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cNameMonolithicImplementationDescriptionCrossReference_5_0 = (CrossReference)cNameAssignment_5.eContents().get(0);
		private final RuleCall cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cNameMonolithicImplementationDescriptionCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cStartCommandsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStartCommandsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStartCommandsMultiValueListParserRuleCall_6_1_0 = (RuleCall)cStartCommandsAssignment_6_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//ImplementationArtifactAbstract:
		//  PreListElement 'import:' importedNamespace=QualifiedName
		//  INDENT
		//    'name:' name=[MonolithicImplementationDescription|QualifiedName]
		//    ('startCommands:' startCommands = MultiValueList)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'import:' importedNamespace=QualifiedName
		//INDENT
		//  'name:' name=[MonolithicImplementationDescription|QualifiedName]
		//  ('startCommands:' startCommands = MultiValueList)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'import:'
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }
		
		//importedNamespace=QualifiedName
		public Assignment getImportedNamespaceAssignment_2() { return cImportedNamespaceAssignment_2; }
		
		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_2_0() { return cImportedNamespaceQualifiedNameParserRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'name:'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//name=[MonolithicImplementationDescription|QualifiedName]
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getNameMonolithicImplementationDescriptionCrossReference_5_0() { return cNameMonolithicImplementationDescriptionCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1() { return cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1; }
		
		//('startCommands:' startCommands = MultiValueList)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'startCommands:'
		public Keyword getStartCommandsKeyword_6_0() { return cStartCommandsKeyword_6_0; }
		
		//startCommands = MultiValueList
		public Assignment getStartCommandsAssignment_6_1() { return cStartCommandsAssignment_6_1; }
		
		//MultiValueList
		public RuleCall getStartCommandsMultiValueListParserRuleCall_6_1_0() { return cStartCommandsMultiValueListParserRuleCall_6_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
	}
	public class DeploymentRequirementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.DeploymentRequirements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDeploymentRequirementsAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cRequirementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRequirementsPropertyExpressTypeParserRuleCall_2_0 = (RuleCall)cRequirementsAssignment_2.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//DeploymentRequirements:
		//  {DeploymentRequirements}
		//  INDENT
		//      requirements += PropertyExpressType+
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{DeploymentRequirements}
		//INDENT
		//    requirements += PropertyExpressType+
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//{DeploymentRequirements}
		public Action getDeploymentRequirementsAction_0() { return cDeploymentRequirementsAction_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//requirements += PropertyExpressType+
		public Assignment getRequirementsAssignment_2() { return cRequirementsAssignment_2; }
		
		//PropertyExpressType
		public RuleCall getRequirementsPropertyExpressTypeParserRuleCall_2_0() { return cRequirementsPropertyExpressTypeParserRuleCall_2_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_3() { return cDEDENTTerminalRuleCall_3; }
	}
	public class ResourceRequirementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ResourceRequirements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceRequirementsAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cRequirementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRequirementsPropertyExpressTypeParserRuleCall_2_0 = (RuleCall)cRequirementsAssignment_2.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ResourceRequirements:
		//    {ResourceRequirements}
		//  INDENT
		//      requirements += PropertyExpressType+
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  {ResourceRequirements}
		//INDENT
		//    requirements += PropertyExpressType+
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//{ResourceRequirements}
		public Action getResourceRequirementsAction_0() { return cResourceRequirementsAction_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//requirements += PropertyExpressType+
		public Assignment getRequirementsAssignment_2() { return cRequirementsAssignment_2; }
		
		//PropertyExpressType
		public RuleCall getRequirementsPropertyExpressTypeParserRuleCall_2_0() { return cRequirementsPropertyExpressTypeParserRuleCall_2_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_3() { return cDEDENTTerminalRuleCall_3; }
	}
	public class PropertyExpressTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.PropertyExpressType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCommonPropertySingleValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCommonPropertyMultiValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PropertyExpressType:
		//    CommonPropertySingleValue
		//    | CommonPropertyMultiValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CommonPropertySingleValue
		//| CommonPropertyMultiValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CommonPropertySingleValue
		public RuleCall getCommonPropertySingleValueParserRuleCall_0() { return cCommonPropertySingleValueParserRuleCall_0; }
		
		//CommonPropertyMultiValue
		public RuleCall getCommonPropertyMultiValueParserRuleCall_1() { return cCommonPropertyMultiValueParserRuleCall_1; }
	}
	public class CommonPropertySingleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.CommonPropertySingleValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueValueTypesParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//CommonPropertySingleValue:
		//  PreListElement 'name:' name=ID
		//  INDENT
		//    'value:' value = ValueTypes
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name=ID
		//INDENT
		//  'value:' value = ValueTypes
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'value:'
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }
		
		//value = ValueTypes
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//ValueTypes
		public RuleCall getValueValueTypesParserRuleCall_5_0() { return cValueValueTypesParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
	}
	public class CommonPropertyMultiValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.CommonPropertyMultiValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueMultiValueListParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//CommonPropertyMultiValue:
		//  PreListElement 'name:' name=ID
		//  INDENT
		//    'value:' value=MultiValueList
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name=ID
		//INDENT
		//  'value:' value=MultiValueList
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'value:'
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }
		
		//value=MultiValueList
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//MultiValueList
		public RuleCall getValueMultiValueListParserRuleCall_5_0() { return cValueMultiValueListParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
	}
	public class MultiValueListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MultiValueList");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMultiValueListPreListParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMultiValueListBracketParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MultiValueList:
		//    MultiValueListPreList
		//    |MultiValueListBracket
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MultiValueListPreList
		//|MultiValueListBracket
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MultiValueListPreList
		public RuleCall getMultiValueListPreListParserRuleCall_0() { return cMultiValueListPreListParserRuleCall_0; }
		
		//MultiValueListBracket
		public RuleCall getMultiValueListBracketParserRuleCall_1() { return cMultiValueListBracketParserRuleCall_1; }
	}
	public class MultiValueListPreListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MultiValueListPreList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMultiValueListPreListAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cPreListElementParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesValueTypesParserRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//MultiValueListPreList:
		//    {MultiValueListPreList}
		//    INDENT
		//      (PreListElement values+=ValueTypes)*
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  {MultiValueListPreList}
		//  INDENT
		//    (PreListElement values+=ValueTypes)*
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//{MultiValueListPreList}
		public Action getMultiValueListPreListAction_0() { return cMultiValueListPreListAction_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//(PreListElement values+=ValueTypes)*
		public Group getGroup_2() { return cGroup_2; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_2_0() { return cPreListElementParserRuleCall_2_0; }
		
		//values+=ValueTypes
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }
		
		//ValueTypes
		public RuleCall getValuesValueTypesParserRuleCall_2_1_0() { return cValuesValueTypesParserRuleCall_2_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_3() { return cDEDENTTerminalRuleCall_3; }
	}
	public class MultiValueListBracketElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MultiValueListBracket");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuesValueTypesParserRuleCall_1_0 = (RuleCall)cValuesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesValueTypesParserRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MultiValueListBracket:
		//  '[' (values+=ValueTypes) (',' values+=ValueTypes*)? ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'[' (values+=ValueTypes) (',' values+=ValueTypes*)? ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(values+=ValueTypes)
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }
		
		//ValueTypes
		public RuleCall getValuesValueTypesParserRuleCall_1_0() { return cValuesValueTypesParserRuleCall_1_0; }
		
		//(',' values+=ValueTypes*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//values+=ValueTypes*
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }
		
		//ValueTypes
		public RuleCall getValuesValueTypesParserRuleCall_2_1_0() { return cValuesValueTypesParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class ValueTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ValueTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cScalarNumberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ValueTypes:
		//    ID | STRING | ScalarNumber
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | STRING | ScalarNumber
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
		
		//ScalarNumber
		public RuleCall getScalarNumberParserRuleCall_2() { return cScalarNumberParserRuleCall_2; }
	}
	public class BuildRequirementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.BuildRequirements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBuildRequirementsAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRosDistrosKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReqRosDistrosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReqRosDistrosMultiValueListParserRuleCall_3_0 = (RuleCall)cReqRosDistrosAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTestRosDistrosKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReqTestRosDistrosAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cReqTestRosDistrosMultiValueListParserRuleCall_4_1_0 = (RuleCall)cReqTestRosDistrosAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDependOnKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cReqBuildDependenciesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cReqBuildDependenciesReqBuildDependenciesParserRuleCall_5_1_0 = (RuleCall)cReqBuildDependenciesAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAptRepositoriesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cReqDependencyRepositoriesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cReqDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_6_1_0 = (RuleCall)cReqDependencyRepositoriesAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCMakeArgsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cReqCMakeArgsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cReqCMakeArgsMultiValueListParserRuleCall_7_1_0 = (RuleCall)cReqCMakeArgsAssignment_7_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//BuildRequirements:
		//  {BuildRequirements}
		//  INDENT
		//      'rosDistros:' ReqRosDistros= MultiValueList
		//      ('testRosDistros:' ReqTestRosDistros= MultiValueList)?
		//      ('dependOn:' ReqBuildDependencies = ReqBuildDependencies)?
		//      ('aptRepositories:' ReqDependencyRepositories = ReqDependencyRepositories)?
		//      ('cMakeArgs:' ReqCMakeArgs=MultiValueList)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{BuildRequirements}
		//INDENT
		//    'rosDistros:' ReqRosDistros= MultiValueList
		//    ('testRosDistros:' ReqTestRosDistros= MultiValueList)?
		//    ('dependOn:' ReqBuildDependencies = ReqBuildDependencies)?
		//    ('aptRepositories:' ReqDependencyRepositories = ReqDependencyRepositories)?
		//    ('cMakeArgs:' ReqCMakeArgs=MultiValueList)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//{BuildRequirements}
		public Action getBuildRequirementsAction_0() { return cBuildRequirementsAction_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//'rosDistros:'
		public Keyword getRosDistrosKeyword_2() { return cRosDistrosKeyword_2; }
		
		//ReqRosDistros= MultiValueList
		public Assignment getReqRosDistrosAssignment_3() { return cReqRosDistrosAssignment_3; }
		
		//MultiValueList
		public RuleCall getReqRosDistrosMultiValueListParserRuleCall_3_0() { return cReqRosDistrosMultiValueListParserRuleCall_3_0; }
		
		//('testRosDistros:' ReqTestRosDistros= MultiValueList)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'testRosDistros:'
		public Keyword getTestRosDistrosKeyword_4_0() { return cTestRosDistrosKeyword_4_0; }
		
		//ReqTestRosDistros= MultiValueList
		public Assignment getReqTestRosDistrosAssignment_4_1() { return cReqTestRosDistrosAssignment_4_1; }
		
		//MultiValueList
		public RuleCall getReqTestRosDistrosMultiValueListParserRuleCall_4_1_0() { return cReqTestRosDistrosMultiValueListParserRuleCall_4_1_0; }
		
		//('dependOn:' ReqBuildDependencies = ReqBuildDependencies)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dependOn:'
		public Keyword getDependOnKeyword_5_0() { return cDependOnKeyword_5_0; }
		
		//ReqBuildDependencies = ReqBuildDependencies
		public Assignment getReqBuildDependenciesAssignment_5_1() { return cReqBuildDependenciesAssignment_5_1; }
		
		//ReqBuildDependencies
		public RuleCall getReqBuildDependenciesReqBuildDependenciesParserRuleCall_5_1_0() { return cReqBuildDependenciesReqBuildDependenciesParserRuleCall_5_1_0; }
		
		//('aptRepositories:' ReqDependencyRepositories = ReqDependencyRepositories)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'aptRepositories:'
		public Keyword getAptRepositoriesKeyword_6_0() { return cAptRepositoriesKeyword_6_0; }
		
		//ReqDependencyRepositories = ReqDependencyRepositories
		public Assignment getReqDependencyRepositoriesAssignment_6_1() { return cReqDependencyRepositoriesAssignment_6_1; }
		
		//ReqDependencyRepositories
		public RuleCall getReqDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_6_1_0() { return cReqDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_6_1_0; }
		
		//('cMakeArgs:' ReqCMakeArgs=MultiValueList)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'cMakeArgs:'
		public Keyword getCMakeArgsKeyword_7_0() { return cCMakeArgsKeyword_7_0; }
		
		//ReqCMakeArgs=MultiValueList
		public Assignment getReqCMakeArgsAssignment_7_1() { return cReqCMakeArgsAssignment_7_1; }
		
		//MultiValueList
		public RuleCall getReqCMakeArgsMultiValueListParserRuleCall_7_1_0() { return cReqCMakeArgsMultiValueListParserRuleCall_7_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_8() { return cDEDENTTerminalRuleCall_8; }
	}
	public class ReqBuildDependenciesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReqBuildDependencies");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReqBuildDependenciesAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cDependenciesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDependenciesDependencyTypesParserRuleCall_2_0 = (RuleCall)cDependenciesAssignment_2.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ReqBuildDependencies:
		//  {ReqBuildDependencies}
		//  INDENT
		//    (dependencies+=DependencyTypes)*
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ReqBuildDependencies}
		//INDENT
		//  (dependencies+=DependencyTypes)*
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//{ReqBuildDependencies}
		public Action getReqBuildDependenciesAction_0() { return cReqBuildDependenciesAction_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//(dependencies+=DependencyTypes)*
		public Assignment getDependenciesAssignment_2() { return cDependenciesAssignment_2; }
		
		//DependencyTypes
		public RuleCall getDependenciesDependencyTypesParserRuleCall_2_0() { return cDependenciesDependencyTypesParserRuleCall_2_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_3() { return cDEDENTTerminalRuleCall_3; }
	}
	public class DependencyTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.DependencyTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLocalPackageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGitPackageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DependencyTypes:
		//  LocalPackage | GitPackage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//LocalPackage | GitPackage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LocalPackage
		public RuleCall getLocalPackageParserRuleCall_0() { return cLocalPackageParserRuleCall_0; }
		
		//GitPackage
		public RuleCall getGitPackageParserRuleCall_1() { return cGitPackageParserRuleCall_1; }
	}
	public class LocalPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.LocalPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cNameMonolithicImplementationDescriptionCrossReference_2_0 = (CrossReference)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cNameMonolithicImplementationDescriptionCrossReference_2_0.eContents().get(1);
		
		//LocalPackage:
		//    PreListElement 'name:' name = [MonolithicImplementationDescription|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name = [MonolithicImplementationDescription|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name = [MonolithicImplementationDescription|QualifiedName]
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getNameMonolithicImplementationDescriptionCrossReference_2_0() { return cNameMonolithicImplementationDescriptionCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_0_1() { return cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_0_1; }
	}
	public class GitPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.GitPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLocationKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPathAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPathURLTerminalRuleCall_5_0 = (RuleCall)cPathAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVisibilityKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVisibilityAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVisibilityIDTerminalRuleCall_6_1_0 = (RuleCall)cVisibilityAssignment_6_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//GitPackage:
		//    PreListElement 'name:' name = ID
		//  INDENT
		//      'location:' path = URL
		//      ('visibility:' visibility = ID)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  PreListElement 'name:' name = ID
		//INDENT
		//    'location:' path = URL
		//    ('visibility:' visibility = ID)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name = ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'location:'
		public Keyword getLocationKeyword_4() { return cLocationKeyword_4; }
		
		//path = URL
		public Assignment getPathAssignment_5() { return cPathAssignment_5; }
		
		//URL
		public RuleCall getPathURLTerminalRuleCall_5_0() { return cPathURLTerminalRuleCall_5_0; }
		
		//('visibility:' visibility = ID)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'visibility:'
		public Keyword getVisibilityKeyword_6_0() { return cVisibilityKeyword_6_0; }
		
		//visibility = ID
		public Assignment getVisibilityAssignment_6_1() { return cVisibilityAssignment_6_1; }
		
		//ID
		public RuleCall getVisibilityIDTerminalRuleCall_6_1_0() { return cVisibilityIDTerminalRuleCall_6_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
	}
	public class ReqDependencyRepositoriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ReqDependencyRepositories");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cChildrenAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cChildrenAptRepositoryInstanceParserRuleCall_1_0 = (RuleCall)cChildrenAssignment_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ReqDependencyRepositories:
		//  INDENT
		//  children+=(AptRepositoryInstance)+
		//    DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//INDENT
		//children+=(AptRepositoryInstance)+
		//  DEDENT
		public Group getGroup() { return cGroup; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_0() { return cINDENTTerminalRuleCall_0; }
		
		//children+=(AptRepositoryInstance)+
		public Assignment getChildrenAssignment_1() { return cChildrenAssignment_1; }
		
		//(AptRepositoryInstance)
		public RuleCall getChildrenAptRepositoryInstanceParserRuleCall_1_0() { return cChildrenAptRepositoryInstanceParserRuleCall_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_2() { return cDEDENTTerminalRuleCall_2; }
	}
	public class AptRepositoryInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.AptRepositoryInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cKeyLinkKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cKeyLinkAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cKeyLinkURLTerminalRuleCall_5_0 = (RuleCall)cKeyLinkAssignment_5.eContents().get(0);
		private final Keyword cRepositoryPathKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRepositoryPathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRepositoryPathURLTerminalRuleCall_7_0 = (RuleCall)cRepositoryPathAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUpdateRosDepKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUpdateRosDepAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUpdateRosDepURLTerminalRuleCall_8_1_0 = (RuleCall)cUpdateRosDepAssignment_8_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//AptRepositoryInstance:
		//  PreListElement 'name:' name=ID
		//  INDENT
		//    'keyLink:' keyLink=URL
		//    'repositoryPath:' repositoryPath=URL
		//    ('updateRosDep:' updateRosDep=URL)?
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name=ID
		//INDENT
		//  'keyLink:' keyLink=URL
		//  'repositoryPath:' repositoryPath=URL
		//  ('updateRosDep:' updateRosDep=URL)?
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//'keyLink:'
		public Keyword getKeyLinkKeyword_4() { return cKeyLinkKeyword_4; }
		
		//keyLink=URL
		public Assignment getKeyLinkAssignment_5() { return cKeyLinkAssignment_5; }
		
		//URL
		public RuleCall getKeyLinkURLTerminalRuleCall_5_0() { return cKeyLinkURLTerminalRuleCall_5_0; }
		
		//'repositoryPath:'
		public Keyword getRepositoryPathKeyword_6() { return cRepositoryPathKeyword_6; }
		
		//repositoryPath=URL
		public Assignment getRepositoryPathAssignment_7() { return cRepositoryPathAssignment_7; }
		
		//URL
		public RuleCall getRepositoryPathURLTerminalRuleCall_7_0() { return cRepositoryPathURLTerminalRuleCall_7_0; }
		
		//('updateRosDep:' updateRosDep=URL)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'updateRosDep:'
		public Keyword getUpdateRosDepKeyword_8_0() { return cUpdateRosDepKeyword_8_0; }
		
		//updateRosDep=URL
		public Assignment getUpdateRosDepAssignment_8_1() { return cUpdateRosDepAssignment_8_1; }
		
		//URL
		public RuleCall getUpdateRosDepURLTerminalRuleCall_8_1_0() { return cUpdateRosDepURLTerminalRuleCall_8_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
	}
	public class StackImplementationDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.StackImplementationDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeStackImplementationDescriptionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameQualifiedNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImplementsRosModelKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cImpRosmodelAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cImpRosmodelQualifiedNameParserRuleCall_4_1_0 = (RuleCall)cImpRosmodelAssignment_4_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescriptionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescriptionAssignment_6.eContents().get(0);
		private final Keyword cModeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cModeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cModeImplementationModeTypeEnumRuleCall_8_0 = (RuleCall)cModeAssignment_8.eContents().get(0);
		private final Keyword cImplementationArtifactDescriptionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cImplAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cImplImplementationArtifactDescriptionParserRuleCall_10_0 = (RuleCall)cImplAssignment_10.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		
		//StackImplementationDescription:
		//  type='StackImplementationDescription:'
		//  INDENT
		//    'name:' name=QualifiedName
		//  //  TODO: link to rosmodel
		//    ('implementsRosModel:'impRosmodel=QualifiedName)?
		//    'description:' description=STRING
		//    'mode:' mode=ImplementationModeType
		//    "ImplementationArtifactDescription:" impl=ImplementationArtifactDescription
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='StackImplementationDescription:'
		//INDENT
		//  'name:' name=QualifiedName
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=QualifiedName)?
		//  'description:' description=STRING
		//  'mode:' mode=ImplementationModeType
		//  "ImplementationArtifactDescription:" impl=ImplementationArtifactDescription
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='StackImplementationDescription:'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'StackImplementationDescription:'
		public Keyword getTypeStackImplementationDescriptionKeyword_0_0() { return cTypeStackImplementationDescriptionKeyword_0_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//'name:'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_3_0() { return cNameQualifiedNameParserRuleCall_3_0; }
		
		////  TODO: link to rosmodel
		//  ('implementsRosModel:'impRosmodel=QualifiedName)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'implementsRosModel:'
		public Keyword getImplementsRosModelKeyword_4_0() { return cImplementsRosModelKeyword_4_0; }
		
		//impRosmodel=QualifiedName
		public Assignment getImpRosmodelAssignment_4_1() { return cImpRosmodelAssignment_4_1; }
		
		//QualifiedName
		public RuleCall getImpRosmodelQualifiedNameParserRuleCall_4_1_0() { return cImpRosmodelQualifiedNameParserRuleCall_4_1_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_6() { return cDescriptionAssignment_6; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_0() { return cDescriptionSTRINGTerminalRuleCall_6_0; }
		
		//'mode:'
		public Keyword getModeKeyword_7() { return cModeKeyword_7; }
		
		//mode=ImplementationModeType
		public Assignment getModeAssignment_8() { return cModeAssignment_8; }
		
		//ImplementationModeType
		public RuleCall getModeImplementationModeTypeEnumRuleCall_8_0() { return cModeImplementationModeTypeEnumRuleCall_8_0; }
		
		//"ImplementationArtifactDescription:"
		public Keyword getImplementationArtifactDescriptionKeyword_9() { return cImplementationArtifactDescriptionKeyword_9; }
		
		//impl=ImplementationArtifactDescription
		public Assignment getImplAssignment_10() { return cImplAssignment_10; }
		
		//ImplementationArtifactDescription
		public RuleCall getImplImplementationArtifactDescriptionParserRuleCall_10_0() { return cImplImplementationArtifactDescriptionParserRuleCall_10_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_11() { return cDEDENTTerminalRuleCall_11; }
	}
	public class PackageDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.PackageDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypePackageDescriptionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cImageDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cImageDescriptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImageDescriptionImageDescriptionParserRuleCall_5_0 = (RuleCall)cImageDescriptionAssignment_5.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cRepositoryDescriptionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cRepositoryDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0 = (RuleCall)cRepositoryDescriptionAssignment_8.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//PackageDescription:
		//  type='PackageDescription'':'
		//  INDENT
		//    'imageDescription:'
		//      INDENT
		//        imageDescription=ImageDescription
		//      DEDENT
		//    'repositoryDescription:'
		//        repositoryDescription=RepositoryDescription
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='PackageDescription'':'
		//INDENT
		//  'imageDescription:'
		//    INDENT
		//      imageDescription=ImageDescription
		//    DEDENT
		//  'repositoryDescription:'
		//      repositoryDescription=RepositoryDescription
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='PackageDescription'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'PackageDescription'
		public Keyword getTypePackageDescriptionKeyword_0_0() { return cTypePackageDescriptionKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }
		
		//'imageDescription:'
		public Keyword getImageDescriptionKeyword_3() { return cImageDescriptionKeyword_3; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_4() { return cINDENTTerminalRuleCall_4; }
		
		//imageDescription=ImageDescription
		public Assignment getImageDescriptionAssignment_5() { return cImageDescriptionAssignment_5; }
		
		//ImageDescription
		public RuleCall getImageDescriptionImageDescriptionParserRuleCall_5_0() { return cImageDescriptionImageDescriptionParserRuleCall_5_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
		
		//'repositoryDescription:'
		public Keyword getRepositoryDescriptionKeyword_7() { return cRepositoryDescriptionKeyword_7; }
		
		//repositoryDescription=RepositoryDescription
		public Assignment getRepositoryDescriptionAssignment_8() { return cRepositoryDescriptionAssignment_8; }
		
		//RepositoryDescription
		public RuleCall getRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0() { return cRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
	}
	public class ImageDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImageDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypesMultiValueListParserRuleCall_1_0 = (RuleCall)cTypesAssignment_1.eContents().get(0);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cNameMonolithicImplementationDescriptionCrossReference_3_0 = (CrossReference)cNameAssignment_3.eContents().get(0);
		private final RuleCall cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cNameMonolithicImplementationDescriptionCrossReference_3_0.eContents().get(1);
		private final Keyword cImageTagsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cImageTagsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImageTagsMultiValueListParserRuleCall_5_0 = (RuleCall)cImageTagsAssignment_5.eContents().get(0);
		
		//ImageDescription:
		//  'types:' types = MultiValueList
		//  'name:' name= [MonolithicImplementationDescription|QualifiedName]
		//  'imageTags:' imageTags = MultiValueList
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'types:' types = MultiValueList
		//'name:' name= [MonolithicImplementationDescription|QualifiedName]
		//'imageTags:' imageTags = MultiValueList
		public Group getGroup() { return cGroup; }
		
		//'types:'
		public Keyword getTypesKeyword_0() { return cTypesKeyword_0; }
		
		//types = MultiValueList
		public Assignment getTypesAssignment_1() { return cTypesAssignment_1; }
		
		//MultiValueList
		public RuleCall getTypesMultiValueListParserRuleCall_1_0() { return cTypesMultiValueListParserRuleCall_1_0; }
		
		//'name:'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name= [MonolithicImplementationDescription|QualifiedName]
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getNameMonolithicImplementationDescriptionCrossReference_3_0() { return cNameMonolithicImplementationDescriptionCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1() { return cNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1; }
		
		//'imageTags:'
		public Keyword getImageTagsKeyword_4() { return cImageTagsKeyword_4; }
		
		//imageTags = MultiValueList
		public Assignment getImageTagsAssignment_5() { return cImageTagsAssignment_5; }
		
		//MultiValueList
		public RuleCall getImageTagsMultiValueListParserRuleCall_5_0() { return cImageTagsMultiValueListParserRuleCall_5_0; }
	}
	public class RepositoryDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.RepositoryDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cSpecAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSpecRepositorySpecParserRuleCall_1_0 = (RuleCall)cSpecAssignment_1.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RepositoryDescription:
		//    INDENT
		//      (spec+=RepositorySpec)+
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  INDENT
		//    (spec+=RepositorySpec)+
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_0() { return cINDENTTerminalRuleCall_0; }
		
		//(spec+=RepositorySpec)+
		public Assignment getSpecAssignment_1() { return cSpecAssignment_1; }
		
		//RepositorySpec
		public RuleCall getSpecRepositorySpecParserRuleCall_1_0() { return cSpecRepositorySpecParserRuleCall_1_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_2() { return cDEDENTTerminalRuleCall_2; }
	}
	public class RepositorySpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.RepositorySpec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cRepositoryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRepositoryRepositoryParserRuleCall_4_0 = (RuleCall)cRepositoryAssignment_4.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//RepositorySpec:
		//  PreListElement 'name:' name=ID
		//  INDENT
		//      repository=Repository
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PreListElement 'name:' name=ID
		//INDENT
		//    repository=Repository
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }
		
		//repository=Repository
		public Assignment getRepositoryAssignment_4() { return cRepositoryAssignment_4; }
		
		//Repository
		public RuleCall getRepositoryRepositoryParserRuleCall_4_0() { return cRepositoryRepositoryParserRuleCall_4_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_5() { return cDEDENTTerminalRuleCall_5; }
	}
	public class RepositoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Repository");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeIDTerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPathKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPathAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPathSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cPathAssignment_2_1.eContents().get(0);
		
		//Repository:
		//  'type:' type = ID
		//  ('path:' path=STRING)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'type:' type = ID
		//('path:' path=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'type:'
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }
		
		//type = ID
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_1_0() { return cTypeIDTerminalRuleCall_1_0; }
		
		//('path:' path=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'path:'
		public Keyword getPathKeyword_2_0() { return cPathKeyword_2_0; }
		
		//path=STRING
		public Assignment getPathAssignment_2_1() { return cPathAssignment_2_1; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_2_1_0() { return cPathSTRINGTerminalRuleCall_2_1_0; }
	}
	public class CISettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.CISetting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeCISettingKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCiTypesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCiTypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCiTypesMultiValueListParserRuleCall_3_0 = (RuleCall)cCiTypesAssignment_3.eContents().get(0);
		private final Keyword cAppliedReposKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAppliedReposAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAppliedReposMultiMonolithicImplementationNameListParserRuleCall_5_0 = (RuleCall)cAppliedReposAssignment_5.eContents().get(0);
		private final Keyword cBranchPrefixTypeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReqBranchPrefixAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cReqBranchPrefixIDTerminalRuleCall_7_0 = (RuleCall)cReqBranchPrefixAssignment_7.eContents().get(0);
		private final Assignment cCiParametersAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCiParametersCIParametersParserRuleCall_8_0 = (RuleCall)cCiParametersAssignment_8.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//CISetting:
		//  type='CISetting:'
		//  INDENT
		//      'ciTypes:' ciTypes = MultiValueList
		//      'appliedRepos:' appliedRepos=MultiMonolithicImplementationNameList
		//      'branchPrefixType:' reqBranchPrefix=ID
		//      ciParameters+=(CIParameters)*
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type='CISetting:'
		//INDENT
		//    'ciTypes:' ciTypes = MultiValueList
		//    'appliedRepos:' appliedRepos=MultiMonolithicImplementationNameList
		//    'branchPrefixType:' reqBranchPrefix=ID
		//    ciParameters+=(CIParameters)*
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type='CISetting:'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'CISetting:'
		public Keyword getTypeCISettingKeyword_0_0() { return cTypeCISettingKeyword_0_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//'ciTypes:'
		public Keyword getCiTypesKeyword_2() { return cCiTypesKeyword_2; }
		
		//ciTypes = MultiValueList
		public Assignment getCiTypesAssignment_3() { return cCiTypesAssignment_3; }
		
		//MultiValueList
		public RuleCall getCiTypesMultiValueListParserRuleCall_3_0() { return cCiTypesMultiValueListParserRuleCall_3_0; }
		
		//'appliedRepos:'
		public Keyword getAppliedReposKeyword_4() { return cAppliedReposKeyword_4; }
		
		//appliedRepos=MultiMonolithicImplementationNameList
		public Assignment getAppliedReposAssignment_5() { return cAppliedReposAssignment_5; }
		
		//MultiMonolithicImplementationNameList
		public RuleCall getAppliedReposMultiMonolithicImplementationNameListParserRuleCall_5_0() { return cAppliedReposMultiMonolithicImplementationNameListParserRuleCall_5_0; }
		
		//'branchPrefixType:'
		public Keyword getBranchPrefixTypeKeyword_6() { return cBranchPrefixTypeKeyword_6; }
		
		//reqBranchPrefix=ID
		public Assignment getReqBranchPrefixAssignment_7() { return cReqBranchPrefixAssignment_7; }
		
		//ID
		public RuleCall getReqBranchPrefixIDTerminalRuleCall_7_0() { return cReqBranchPrefixIDTerminalRuleCall_7_0; }
		
		//ciParameters+=(CIParameters)*
		public Assignment getCiParametersAssignment_8() { return cCiParametersAssignment_8; }
		
		//(CIParameters)
		public RuleCall getCiParametersCIParametersParserRuleCall_8_0() { return cCiParametersCIParametersParserRuleCall_8_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
	}
	public class MultiMonolithicImplementationNameListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MultiMonolithicImplementationNameList");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMultiMonolithicImplementationNamePreListParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMultiMonolithicImplementationNameListBracketParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MultiMonolithicImplementationNameList:
		//    MultiMonolithicImplementationNamePreList|
		//    MultiMonolithicImplementationNameListBracket
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MultiMonolithicImplementationNamePreList|
		//MultiMonolithicImplementationNameListBracket
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MultiMonolithicImplementationNamePreList
		public RuleCall getMultiMonolithicImplementationNamePreListParserRuleCall_0() { return cMultiMonolithicImplementationNamePreListParserRuleCall_0; }
		
		//MultiMonolithicImplementationNameListBracket
		public RuleCall getMultiMonolithicImplementationNameListBracketParserRuleCall_1() { return cMultiMonolithicImplementationNameListBracketParserRuleCall_1; }
	}
	public class MultiMonolithicImplementationNamePreListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MultiMonolithicImplementationNamePreList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMultiMonolithicImplementationNamePreListAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cPreListElementParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cValuesMonolithicImplementationDescriptionCrossReference_2_1_0 = (CrossReference)cValuesAssignment_2_1.eContents().get(0);
		private final RuleCall cValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cValuesMonolithicImplementationDescriptionCrossReference_2_1_0.eContents().get(1);
		private final RuleCall cDEDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//MultiMonolithicImplementationNamePreList:
		//    {MultiMonolithicImplementationNamePreList} INDENT
		//      (PreListElement values+=[MonolithicImplementationDescription|QualifiedName])*
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  {MultiMonolithicImplementationNamePreList} INDENT
		//    (PreListElement values+=[MonolithicImplementationDescription|QualifiedName])*
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//{MultiMonolithicImplementationNamePreList}
		public Action getMultiMonolithicImplementationNamePreListAction_0() { return cMultiMonolithicImplementationNamePreListAction_0; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }
		
		//(PreListElement values+=[MonolithicImplementationDescription|QualifiedName])*
		public Group getGroup_2() { return cGroup_2; }
		
		//PreListElement
		public RuleCall getPreListElementParserRuleCall_2_0() { return cPreListElementParserRuleCall_2_0; }
		
		//values+=[MonolithicImplementationDescription|QualifiedName]
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getValuesMonolithicImplementationDescriptionCrossReference_2_1_0() { return cValuesMonolithicImplementationDescriptionCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_1_0_1() { return cValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_1_0_1; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_3() { return cDEDENTTerminalRuleCall_3; }
	}
	public class MultiMonolithicImplementationNameListBracketElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.MultiMonolithicImplementationNameListBracket");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cValuesMonolithicImplementationDescriptionCrossReference_1_0 = (CrossReference)cValuesAssignment_1.eContents().get(0);
		private final RuleCall cValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cValuesMonolithicImplementationDescriptionCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cValuesMonolithicImplementationDescriptionCrossReference_2_1_0 = (CrossReference)cValuesAssignment_2_1.eContents().get(0);
		private final RuleCall cValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cValuesMonolithicImplementationDescriptionCrossReference_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MultiMonolithicImplementationNameListBracket:
		//  '[' (values+=[MonolithicImplementationDescription|QualifiedName]) (',' values+=[MonolithicImplementationDescription|QualifiedName]*)? ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'[' (values+=[MonolithicImplementationDescription|QualifiedName]) (',' values+=[MonolithicImplementationDescription|QualifiedName]*)? ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(values+=[MonolithicImplementationDescription|QualifiedName])
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getValuesMonolithicImplementationDescriptionCrossReference_1_0() { return cValuesMonolithicImplementationDescriptionCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_1_0_1() { return cValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_1_0_1; }
		
		//(',' values+=[MonolithicImplementationDescription|QualifiedName]*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//values+=[MonolithicImplementationDescription|QualifiedName]*
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }
		
		//[MonolithicImplementationDescription|QualifiedName]
		public CrossReference getValuesMonolithicImplementationDescriptionCrossReference_2_1_0() { return cValuesMonolithicImplementationDescriptionCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_1_0_1() { return cValuesMonolithicImplementationDescriptionQualifiedNameParserRuleCall_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class CIParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.CIParameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cParametersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParametersGroupedPropertiesParserRuleCall_3_0 = (RuleCall)cParametersAssignment_3.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//CIParameters:
		//    type = ID":"
		//    INDENT
		//    (parameters += GroupedProperties)+
		//    DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type = ID":"
		//INDENT
		//(parameters += GroupedProperties)+
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type = ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }
		
		//(parameters += GroupedProperties)+
		public Assignment getParametersAssignment_3() { return cParametersAssignment_3; }
		
		//GroupedProperties
		public RuleCall getParametersGroupedPropertiesParserRuleCall_3_0() { return cParametersGroupedPropertiesParserRuleCall_3_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_4() { return cDEDENTTerminalRuleCall_4; }
	}
	public class GroupedPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.GroupedProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertiesPropertyExpressTypeParserRuleCall_3_0 = (RuleCall)cPropertiesAssignment_3.eContents().get(0);
		private final RuleCall cDEDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//GroupedProperties:
		//    type = ID":"
		//  INDENT
		//      (properties += PropertyExpressType)+
		//  DEDENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  type = ID":"
		//INDENT
		//    (properties += PropertyExpressType)+
		//DEDENT
		public Group getGroup() { return cGroup; }
		
		//type = ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//INDENT
		public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }
		
		//(properties += PropertyExpressType)+
		public Assignment getPropertiesAssignment_3() { return cPropertiesAssignment_3; }
		
		//PropertyExpressType
		public RuleCall getPropertiesPropertyExpressTypeParserRuleCall_3_0() { return cPropertiesPropertyExpressTypeParserRuleCall_3_0; }
		
		//DEDENT
		public RuleCall getDEDENTTerminalRuleCall_4() { return cDEDENTTerminalRuleCall_4; }
	}
	public class PreListElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.PreListElement");
		private final Keyword cHyphenMinusKeyword = (Keyword)rule.eContents().get(1);
		
		//PreListElement hidden(SL_COMMENT):
		//  '-';
		@Override public ParserRule getRule() { return rule; }
		
		//'-'
		public Keyword getHyphenMinusKeyword() { return cHyphenMinusKeyword; }
	}
	public class ScalarNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumberParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUnitParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ScalarNumber:
		//  (Number Unit?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(Number Unit?)
		public Group getGroup() { return cGroup; }
		
		//Number
		public RuleCall getNumberParserRuleCall_0() { return cNumberParserRuleCall_0; }
		
		//Unit?
		public RuleCall getUnitParserRuleCall_1() { return cUnitParserRuleCall_1; }
	}
	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Number");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFLOATTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Number:
		//  INT|
		//  FLOAT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//INT|
		//FLOAT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//FLOAT
		public RuleCall getFLOATTerminalRuleCall_1() { return cFLOATTerminalRuleCall_1; }
	}
	public class UnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.Unit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cScalarUnitSizeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cScalarUnitTimeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cScalarUnitFrequencyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Unit:
		//  ScalarUnitSize|ScalarUnitTime|ScalarUnitFrequency
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ScalarUnitSize|ScalarUnitTime|ScalarUnitFrequency
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ScalarUnitSize
		public RuleCall getScalarUnitSizeParserRuleCall_0() { return cScalarUnitSizeParserRuleCall_0; }
		
		//ScalarUnitTime
		public RuleCall getScalarUnitTimeParserRuleCall_1() { return cScalarUnitTimeParserRuleCall_1; }
		
		//ScalarUnitFrequency
		public RuleCall getScalarUnitFrequencyParserRuleCall_2() { return cScalarUnitFrequencyParserRuleCall_2; }
	}
	public class ScalarUnitSizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarUnitSize");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cBKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cKBKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cKbKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cKBKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cKbKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cMBKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cMbKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cMBKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cMbKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cGBKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cGbKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cGbKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cGBKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cTBKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cTbKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cTbKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cTBKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		
		//// 3.2.6.4 scalar-unit.size
		//ScalarUnitSize:
		//  ('B'|'b'
		//  'KB'|'kb'|'kB'|'Kb'|
		//  'MB'|'mb'|'mB'|'Mb'|
		//  'GB'|'gb'|'Gb'|'gB'|
		//  'TB'|'tb'|'Tb'|'tB')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('B'|'b'
		//'KB'|'kb'|'kB'|'Kb'|
		//'MB'|'mb'|'mB'|'Mb'|
		//'GB'|'gb'|'Gb'|'gB'|
		//'TB'|'tb'|'Tb'|'tB')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'B'
		public Keyword getBKeyword_0() { return cBKeyword_0; }
		
		//'b'
		//  'KB'
		public Group getGroup_1() { return cGroup_1; }
		
		//'b'
		public Keyword getBKeyword_1_0() { return cBKeyword_1_0; }
		
		//'KB'
		public Keyword getKBKeyword_1_1() { return cKBKeyword_1_1; }
		
		//'kb'
		public Keyword getKbKeyword_2() { return cKbKeyword_2; }
		
		//'kB'
		public Keyword getKBKeyword_3() { return cKBKeyword_3; }
		
		//'Kb'
		public Keyword getKbKeyword_4() { return cKbKeyword_4; }
		
		//'MB'
		public Keyword getMBKeyword_5() { return cMBKeyword_5; }
		
		//'mb'
		public Keyword getMbKeyword_6() { return cMbKeyword_6; }
		
		//'mB'
		public Keyword getMBKeyword_7() { return cMBKeyword_7; }
		
		//'Mb'
		public Keyword getMbKeyword_8() { return cMbKeyword_8; }
		
		//'GB'
		public Keyword getGBKeyword_9() { return cGBKeyword_9; }
		
		//'gb'
		public Keyword getGbKeyword_10() { return cGbKeyword_10; }
		
		//'Gb'
		public Keyword getGbKeyword_11() { return cGbKeyword_11; }
		
		//'gB'
		public Keyword getGBKeyword_12() { return cGBKeyword_12; }
		
		//'TB'
		public Keyword getTBKeyword_13() { return cTBKeyword_13; }
		
		//'tb'
		public Keyword getTbKeyword_14() { return cTbKeyword_14; }
		
		//'Tb'
		public Keyword getTbKeyword_15() { return cTbKeyword_15; }
		
		//'tB'
		public Keyword getTBKeyword_16() { return cTBKeyword_16; }
	}
	public class ScalarUnitTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarUnitTime");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cMKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cSKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cMsKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cUsKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cNsKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//// 3.2.6.5 scalar-unit.time
		//ScalarUnitTime:
		//  ('d'|'h'|'m'|'s'|'ms'|'us'|'ns')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('d'|'h'|'m'|'s'|'ms'|'us'|'ns')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'d'
		public Keyword getDKeyword_0() { return cDKeyword_0; }
		
		//'h'
		public Keyword getHKeyword_1() { return cHKeyword_1; }
		
		//'m'
		public Keyword getMKeyword_2() { return cMKeyword_2; }
		
		//'s'
		public Keyword getSKeyword_3() { return cSKeyword_3; }
		
		//'ms'
		public Keyword getMsKeyword_4() { return cMsKeyword_4; }
		
		//'us'
		public Keyword getUsKeyword_5() { return cUsKeyword_5; }
		
		//'ns'
		public Keyword getNsKeyword_6() { return cNsKeyword_6; }
	}
	public class ScalarUnitFrequencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ScalarUnitFrequency");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cHzKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cKHzKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cMHzKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGHzKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//ScalarUnitFrequency:
		//  ('Hz'|'kHz'|'MHz'|'GHz')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('Hz'|'kHz'|'MHz'|'GHz')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Hz'
		public Keyword getHzKeyword_0() { return cHzKeyword_0; }
		
		//'kHz'
		public Keyword getKHzKeyword_1() { return cKHzKeyword_1; }
		
		//'MHz'
		public Keyword getMHzKeyword_2() { return cMHzKeyword_2; }
		
		//'GHz'
		public Keyword getGHzKeyword_3() { return cGHzKeyword_3; }
	}
	
	public class ImplementationModeTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.ImplementationModeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDebugModeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDebugModeDebugKeyword_0_0 = (Keyword)cDebugModeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cReleaseModeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cReleaseModeReleaseKeyword_1_0 = (Keyword)cReleaseModeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ImplementationModeType:
		//  DebugMode='debug'|
		//  ReleaseMode='release'
		//;
		public EnumRule getRule() { return rule; }
		
		//DebugMode='debug'|
		//ReleaseMode='release'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DebugMode='debug'
		public EnumLiteralDeclaration getDebugModeEnumLiteralDeclaration_0() { return cDebugModeEnumLiteralDeclaration_0; }
		
		//'debug'
		public Keyword getDebugModeDebugKeyword_0_0() { return cDebugModeDebugKeyword_0_0; }
		
		//ReleaseMode='release'
		public EnumLiteralDeclaration getReleaseModeEnumLiteralDeclaration_1() { return cReleaseModeEnumLiteralDeclaration_1; }
		
		//'release'
		public Keyword getReleaseModeReleaseKeyword_1_0() { return cReleaseModeReleaseKeyword_1_0; }
	}
	public class BOOLEANElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.BOOLEAN");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFALSEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFALSEFalseKeyword_0_0 = (Keyword)cFALSEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTRUEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTRUETrueKeyword_1_0 = (Keyword)cTRUEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BOOLEAN:
		//    FALSE='false'|TRUE='true'
		//;
		public EnumRule getRule() { return rule; }
		
		//FALSE='false'|TRUE='true'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FALSE='false'
		public EnumLiteralDeclaration getFALSEEnumLiteralDeclaration_0() { return cFALSEEnumLiteralDeclaration_0; }
		
		//'false'
		public Keyword getFALSEFalseKeyword_0_0() { return cFALSEFalseKeyword_0_0; }
		
		//TRUE='true'
		public EnumLiteralDeclaration getTRUEEnumLiteralDeclaration_1() { return cTRUEEnumLiteralDeclaration_1; }
		
		//'true'
		public Keyword getTRUETrueKeyword_1_0() { return cTRUETrueKeyword_1_0; }
	}
	
	private final YamlElements pYaml;
	private final YamlContentElements pYamlContent;
	private final MonolithicImplementationDescriptionElements pMonolithicImplementationDescription;
	private final ImplementationModeTypeElements eImplementationModeType;
	private final BranchTypeElements pBranchType;
	private final QualifiedNameElements pQualifiedName;
	private final NewImplementationArtifactElements pNewImplementationArtifact;
	private final ImplementationArtifactDescriptionElements pImplementationArtifactDescription;
	private final ReuseImplementationArtifactElements pReuseImplementationArtifact;
	private final ImplementationArtifactAbstractElements pImplementationArtifactAbstract;
	private final DeploymentRequirementsElements pDeploymentRequirements;
	private final ResourceRequirementsElements pResourceRequirements;
	private final PropertyExpressTypeElements pPropertyExpressType;
	private final CommonPropertySingleValueElements pCommonPropertySingleValue;
	private final CommonPropertyMultiValueElements pCommonPropertyMultiValue;
	private final MultiValueListElements pMultiValueList;
	private final MultiValueListPreListElements pMultiValueListPreList;
	private final MultiValueListBracketElements pMultiValueListBracket;
	private final ValueTypesElements pValueTypes;
	private final BuildRequirementsElements pBuildRequirements;
	private final ReqBuildDependenciesElements pReqBuildDependencies;
	private final DependencyTypesElements pDependencyTypes;
	private final LocalPackageElements pLocalPackage;
	private final GitPackageElements pGitPackage;
	private final ReqDependencyRepositoriesElements pReqDependencyRepositories;
	private final AptRepositoryInstanceElements pAptRepositoryInstance;
	private final StackImplementationDescriptionElements pStackImplementationDescription;
	private final PackageDescriptionElements pPackageDescription;
	private final ImageDescriptionElements pImageDescription;
	private final RepositoryDescriptionElements pRepositoryDescription;
	private final RepositorySpecElements pRepositorySpec;
	private final RepositoryElements pRepository;
	private final CISettingElements pCISetting;
	private final MultiMonolithicImplementationNameListElements pMultiMonolithicImplementationNameList;
	private final MultiMonolithicImplementationNamePreListElements pMultiMonolithicImplementationNamePreList;
	private final MultiMonolithicImplementationNameListBracketElements pMultiMonolithicImplementationNameListBracket;
	private final CIParametersElements pCIParameters;
	private final GroupedPropertiesElements pGroupedProperties;
	private final BOOLEANElements eBOOLEAN;
	private final PreListElementElements pPreListElement;
	private final ScalarNumberElements pScalarNumber;
	private final NumberElements pNumber;
	private final UnitElements pUnit;
	private final ScalarUnitSizeElements pScalarUnitSize;
	private final ScalarUnitTimeElements pScalarUnitTime;
	private final ScalarUnitFrequencyElements pScalarUnitFrequency;
	private final TerminalRule tLOCALPATH;
	private final TerminalRule tFLOAT;
	private final TerminalRule tURL;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tINDENT;
	private final TerminalRule tDEDENT;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DeployModelGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pYaml = new YamlElements();
		this.pYamlContent = new YamlContentElements();
		this.pMonolithicImplementationDescription = new MonolithicImplementationDescriptionElements();
		this.eImplementationModeType = new ImplementationModeTypeElements();
		this.pBranchType = new BranchTypeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pNewImplementationArtifact = new NewImplementationArtifactElements();
		this.pImplementationArtifactDescription = new ImplementationArtifactDescriptionElements();
		this.pReuseImplementationArtifact = new ReuseImplementationArtifactElements();
		this.pImplementationArtifactAbstract = new ImplementationArtifactAbstractElements();
		this.pDeploymentRequirements = new DeploymentRequirementsElements();
		this.pResourceRequirements = new ResourceRequirementsElements();
		this.pPropertyExpressType = new PropertyExpressTypeElements();
		this.pCommonPropertySingleValue = new CommonPropertySingleValueElements();
		this.pCommonPropertyMultiValue = new CommonPropertyMultiValueElements();
		this.pMultiValueList = new MultiValueListElements();
		this.pMultiValueListPreList = new MultiValueListPreListElements();
		this.pMultiValueListBracket = new MultiValueListBracketElements();
		this.pValueTypes = new ValueTypesElements();
		this.pBuildRequirements = new BuildRequirementsElements();
		this.pReqBuildDependencies = new ReqBuildDependenciesElements();
		this.pDependencyTypes = new DependencyTypesElements();
		this.pLocalPackage = new LocalPackageElements();
		this.pGitPackage = new GitPackageElements();
		this.pReqDependencyRepositories = new ReqDependencyRepositoriesElements();
		this.pAptRepositoryInstance = new AptRepositoryInstanceElements();
		this.pStackImplementationDescription = new StackImplementationDescriptionElements();
		this.pPackageDescription = new PackageDescriptionElements();
		this.pImageDescription = new ImageDescriptionElements();
		this.pRepositoryDescription = new RepositoryDescriptionElements();
		this.pRepositorySpec = new RepositorySpecElements();
		this.pRepository = new RepositoryElements();
		this.pCISetting = new CISettingElements();
		this.pMultiMonolithicImplementationNameList = new MultiMonolithicImplementationNameListElements();
		this.pMultiMonolithicImplementationNamePreList = new MultiMonolithicImplementationNamePreListElements();
		this.pMultiMonolithicImplementationNameListBracket = new MultiMonolithicImplementationNameListBracketElements();
		this.pCIParameters = new CIParametersElements();
		this.pGroupedProperties = new GroupedPropertiesElements();
		this.eBOOLEAN = new BOOLEANElements();
		this.pPreListElement = new PreListElementElements();
		this.pScalarNumber = new ScalarNumberElements();
		this.pNumber = new NumberElements();
		this.pUnit = new UnitElements();
		this.pScalarUnitSize = new ScalarUnitSizeElements();
		this.pScalarUnitTime = new ScalarUnitTimeElements();
		this.pScalarUnitFrequency = new ScalarUnitFrequencyElements();
		this.tLOCALPATH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.LOCALPATH");
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.FLOAT");
		this.tURL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.URL");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.SL_COMMENT");
		this.tINDENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.INDENT");
		this.tDEDENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deployment.DeployModel.DEDENT");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fraunhofer.ipa.deployment.DeployModel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Yaml: {Yaml}
	//  (content+=YamlContent)*
	//;
	public YamlElements getYamlAccess() {
		return pYaml;
	}
	
	public ParserRule getYamlRule() {
		return getYamlAccess().getRule();
	}
	
	//YamlContent:
	//  rootContent=(MonolithicImplementationDescription|
	//    StackImplementationDescription|
	//    PackageDescription|
	//    CISetting
	//  )
	//;
	public YamlContentElements getYamlContentAccess() {
		return pYamlContent;
	}
	
	public ParserRule getYamlContentRule() {
		return getYamlContentAccess().getRule();
	}
	
	//MonolithicImplementationDescription:
	//  type='MonolithicImplementationDescription:'
	//  INDENT
	//    'name:' name=QualifiedName
	//  //  TODO: link to rosmodel
	//    ('implementsRosModel:'impRosmodel=STRING)?
	//    'description:' description=STRING
	//    'mode:' mode=ImplementationModeType
	//    'branch:' branch=BranchType
	//    ('ImplementationArtifactDescription:' implementation=NewImplementationArtifact)?
	//  DEDENT
	//;
	public MonolithicImplementationDescriptionElements getMonolithicImplementationDescriptionAccess() {
		return pMonolithicImplementationDescription;
	}
	
	public ParserRule getMonolithicImplementationDescriptionRule() {
		return getMonolithicImplementationDescriptionAccess().getRule();
	}
	
	//enum ImplementationModeType:
	//  DebugMode='debug'|
	//  ReleaseMode='release'
	//;
	public ImplementationModeTypeElements getImplementationModeTypeAccess() {
		return eImplementationModeType;
	}
	
	public EnumRule getImplementationModeTypeRule() {
		return getImplementationModeTypeAccess().getRule();
	}
	
	//BranchType:
	//  STRING|'any'
	//;
	public BranchTypeElements getBranchTypeAccess() {
		return pBranchType;
	}
	
	public ParserRule getBranchTypeRule() {
		return getBranchTypeAccess().getRule();
	}
	
	//QualifiedName:
	//    ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//NewImplementationArtifact:
	//    INDENT
	//      'location:' location=(STRING|LOCALPATH|URL)
	//      'deployRequirements:' deployRequirements = DeploymentRequirements
	//      ('resourceRequirements:' resourceRequirements = ResourceRequirements)?
	//      ('buildRequirements:' buildRequirements = BuildRequirements)?
	//      ('startCommands:' startCommands = MultiValueList)?
	//  DEDENT
	//;
	public NewImplementationArtifactElements getNewImplementationArtifactAccess() {
		return pNewImplementationArtifact;
	}
	
	public ParserRule getNewImplementationArtifactRule() {
		return getNewImplementationArtifactAccess().getRule();
	}
	
	//ImplementationArtifactDescription:
	//  INDENT
	//    impl=(NewImplementationArtifact | ReuseImplementationArtifact)
	//  DEDENT
	//;
	public ImplementationArtifactDescriptionElements getImplementationArtifactDescriptionAccess() {
		return pImplementationArtifactDescription;
	}
	
	public ParserRule getImplementationArtifactDescriptionRule() {
		return getImplementationArtifactDescriptionAccess().getRule();
	}
	
	//ReuseImplementationArtifact:
	//  'use:' lists+= (ImplementationArtifactAbstract)+
	//;
	public ReuseImplementationArtifactElements getReuseImplementationArtifactAccess() {
		return pReuseImplementationArtifact;
	}
	
	public ParserRule getReuseImplementationArtifactRule() {
		return getReuseImplementationArtifactAccess().getRule();
	}
	
	//ImplementationArtifactAbstract:
	//  PreListElement 'import:' importedNamespace=QualifiedName
	//  INDENT
	//    'name:' name=[MonolithicImplementationDescription|QualifiedName]
	//    ('startCommands:' startCommands = MultiValueList)?
	//  DEDENT
	//;
	public ImplementationArtifactAbstractElements getImplementationArtifactAbstractAccess() {
		return pImplementationArtifactAbstract;
	}
	
	public ParserRule getImplementationArtifactAbstractRule() {
		return getImplementationArtifactAbstractAccess().getRule();
	}
	
	//DeploymentRequirements:
	//  {DeploymentRequirements}
	//  INDENT
	//      requirements += PropertyExpressType+
	//  DEDENT
	//;
	public DeploymentRequirementsElements getDeploymentRequirementsAccess() {
		return pDeploymentRequirements;
	}
	
	public ParserRule getDeploymentRequirementsRule() {
		return getDeploymentRequirementsAccess().getRule();
	}
	
	//ResourceRequirements:
	//    {ResourceRequirements}
	//  INDENT
	//      requirements += PropertyExpressType+
	//  DEDENT
	//;
	public ResourceRequirementsElements getResourceRequirementsAccess() {
		return pResourceRequirements;
	}
	
	public ParserRule getResourceRequirementsRule() {
		return getResourceRequirementsAccess().getRule();
	}
	
	//PropertyExpressType:
	//    CommonPropertySingleValue
	//    | CommonPropertyMultiValue
	//;
	public PropertyExpressTypeElements getPropertyExpressTypeAccess() {
		return pPropertyExpressType;
	}
	
	public ParserRule getPropertyExpressTypeRule() {
		return getPropertyExpressTypeAccess().getRule();
	}
	
	//CommonPropertySingleValue:
	//  PreListElement 'name:' name=ID
	//  INDENT
	//    'value:' value = ValueTypes
	//  DEDENT
	//;
	public CommonPropertySingleValueElements getCommonPropertySingleValueAccess() {
		return pCommonPropertySingleValue;
	}
	
	public ParserRule getCommonPropertySingleValueRule() {
		return getCommonPropertySingleValueAccess().getRule();
	}
	
	//CommonPropertyMultiValue:
	//  PreListElement 'name:' name=ID
	//  INDENT
	//    'value:' value=MultiValueList
	//  DEDENT
	//;
	public CommonPropertyMultiValueElements getCommonPropertyMultiValueAccess() {
		return pCommonPropertyMultiValue;
	}
	
	public ParserRule getCommonPropertyMultiValueRule() {
		return getCommonPropertyMultiValueAccess().getRule();
	}
	
	//MultiValueList:
	//    MultiValueListPreList
	//    |MultiValueListBracket
	//;
	public MultiValueListElements getMultiValueListAccess() {
		return pMultiValueList;
	}
	
	public ParserRule getMultiValueListRule() {
		return getMultiValueListAccess().getRule();
	}
	
	//MultiValueListPreList:
	//    {MultiValueListPreList}
	//    INDENT
	//      (PreListElement values+=ValueTypes)*
	//  DEDENT
	//;
	public MultiValueListPreListElements getMultiValueListPreListAccess() {
		return pMultiValueListPreList;
	}
	
	public ParserRule getMultiValueListPreListRule() {
		return getMultiValueListPreListAccess().getRule();
	}
	
	//MultiValueListBracket:
	//  '[' (values+=ValueTypes) (',' values+=ValueTypes*)? ']'
	//;
	public MultiValueListBracketElements getMultiValueListBracketAccess() {
		return pMultiValueListBracket;
	}
	
	public ParserRule getMultiValueListBracketRule() {
		return getMultiValueListBracketAccess().getRule();
	}
	
	//ValueTypes:
	//    ID | STRING | ScalarNumber
	//;
	public ValueTypesElements getValueTypesAccess() {
		return pValueTypes;
	}
	
	public ParserRule getValueTypesRule() {
		return getValueTypesAccess().getRule();
	}
	
	//BuildRequirements:
	//  {BuildRequirements}
	//  INDENT
	//      'rosDistros:' ReqRosDistros= MultiValueList
	//      ('testRosDistros:' ReqTestRosDistros= MultiValueList)?
	//      ('dependOn:' ReqBuildDependencies = ReqBuildDependencies)?
	//      ('aptRepositories:' ReqDependencyRepositories = ReqDependencyRepositories)?
	//      ('cMakeArgs:' ReqCMakeArgs=MultiValueList)?
	//  DEDENT
	//;
	public BuildRequirementsElements getBuildRequirementsAccess() {
		return pBuildRequirements;
	}
	
	public ParserRule getBuildRequirementsRule() {
		return getBuildRequirementsAccess().getRule();
	}
	
	//ReqBuildDependencies:
	//  {ReqBuildDependencies}
	//  INDENT
	//    (dependencies+=DependencyTypes)*
	//  DEDENT
	//;
	public ReqBuildDependenciesElements getReqBuildDependenciesAccess() {
		return pReqBuildDependencies;
	}
	
	public ParserRule getReqBuildDependenciesRule() {
		return getReqBuildDependenciesAccess().getRule();
	}
	
	//DependencyTypes:
	//  LocalPackage | GitPackage
	//;
	public DependencyTypesElements getDependencyTypesAccess() {
		return pDependencyTypes;
	}
	
	public ParserRule getDependencyTypesRule() {
		return getDependencyTypesAccess().getRule();
	}
	
	//LocalPackage:
	//    PreListElement 'name:' name = [MonolithicImplementationDescription|QualifiedName]
	//;
	public LocalPackageElements getLocalPackageAccess() {
		return pLocalPackage;
	}
	
	public ParserRule getLocalPackageRule() {
		return getLocalPackageAccess().getRule();
	}
	
	//GitPackage:
	//    PreListElement 'name:' name = ID
	//  INDENT
	//      'location:' path = URL
	//      ('visibility:' visibility = ID)?
	//  DEDENT
	//;
	public GitPackageElements getGitPackageAccess() {
		return pGitPackage;
	}
	
	public ParserRule getGitPackageRule() {
		return getGitPackageAccess().getRule();
	}
	
	//ReqDependencyRepositories:
	//  INDENT
	//  children+=(AptRepositoryInstance)+
	//    DEDENT
	//;
	public ReqDependencyRepositoriesElements getReqDependencyRepositoriesAccess() {
		return pReqDependencyRepositories;
	}
	
	public ParserRule getReqDependencyRepositoriesRule() {
		return getReqDependencyRepositoriesAccess().getRule();
	}
	
	//AptRepositoryInstance:
	//  PreListElement 'name:' name=ID
	//  INDENT
	//    'keyLink:' keyLink=URL
	//    'repositoryPath:' repositoryPath=URL
	//    ('updateRosDep:' updateRosDep=URL)?
	//  DEDENT
	//;
	public AptRepositoryInstanceElements getAptRepositoryInstanceAccess() {
		return pAptRepositoryInstance;
	}
	
	public ParserRule getAptRepositoryInstanceRule() {
		return getAptRepositoryInstanceAccess().getRule();
	}
	
	//StackImplementationDescription:
	//  type='StackImplementationDescription:'
	//  INDENT
	//    'name:' name=QualifiedName
	//  //  TODO: link to rosmodel
	//    ('implementsRosModel:'impRosmodel=QualifiedName)?
	//    'description:' description=STRING
	//    'mode:' mode=ImplementationModeType
	//    "ImplementationArtifactDescription:" impl=ImplementationArtifactDescription
	//  DEDENT
	//;
	public StackImplementationDescriptionElements getStackImplementationDescriptionAccess() {
		return pStackImplementationDescription;
	}
	
	public ParserRule getStackImplementationDescriptionRule() {
		return getStackImplementationDescriptionAccess().getRule();
	}
	
	//PackageDescription:
	//  type='PackageDescription'':'
	//  INDENT
	//    'imageDescription:'
	//      INDENT
	//        imageDescription=ImageDescription
	//      DEDENT
	//    'repositoryDescription:'
	//        repositoryDescription=RepositoryDescription
	//  DEDENT
	//;
	public PackageDescriptionElements getPackageDescriptionAccess() {
		return pPackageDescription;
	}
	
	public ParserRule getPackageDescriptionRule() {
		return getPackageDescriptionAccess().getRule();
	}
	
	//ImageDescription:
	//  'types:' types = MultiValueList
	//  'name:' name= [MonolithicImplementationDescription|QualifiedName]
	//  'imageTags:' imageTags = MultiValueList
	//;
	public ImageDescriptionElements getImageDescriptionAccess() {
		return pImageDescription;
	}
	
	public ParserRule getImageDescriptionRule() {
		return getImageDescriptionAccess().getRule();
	}
	
	//RepositoryDescription:
	//    INDENT
	//      (spec+=RepositorySpec)+
	//  DEDENT
	//;
	public RepositoryDescriptionElements getRepositoryDescriptionAccess() {
		return pRepositoryDescription;
	}
	
	public ParserRule getRepositoryDescriptionRule() {
		return getRepositoryDescriptionAccess().getRule();
	}
	
	//RepositorySpec:
	//  PreListElement 'name:' name=ID
	//  INDENT
	//      repository=Repository
	//  DEDENT
	//;
	public RepositorySpecElements getRepositorySpecAccess() {
		return pRepositorySpec;
	}
	
	public ParserRule getRepositorySpecRule() {
		return getRepositorySpecAccess().getRule();
	}
	
	//Repository:
	//  'type:' type = ID
	//  ('path:' path=STRING)?
	//;
	public RepositoryElements getRepositoryAccess() {
		return pRepository;
	}
	
	public ParserRule getRepositoryRule() {
		return getRepositoryAccess().getRule();
	}
	
	//CISetting:
	//  type='CISetting:'
	//  INDENT
	//      'ciTypes:' ciTypes = MultiValueList
	//      'appliedRepos:' appliedRepos=MultiMonolithicImplementationNameList
	//      'branchPrefixType:' reqBranchPrefix=ID
	//      ciParameters+=(CIParameters)*
	//  DEDENT
	//;
	public CISettingElements getCISettingAccess() {
		return pCISetting;
	}
	
	public ParserRule getCISettingRule() {
		return getCISettingAccess().getRule();
	}
	
	//MultiMonolithicImplementationNameList:
	//    MultiMonolithicImplementationNamePreList|
	//    MultiMonolithicImplementationNameListBracket
	//;
	public MultiMonolithicImplementationNameListElements getMultiMonolithicImplementationNameListAccess() {
		return pMultiMonolithicImplementationNameList;
	}
	
	public ParserRule getMultiMonolithicImplementationNameListRule() {
		return getMultiMonolithicImplementationNameListAccess().getRule();
	}
	
	//MultiMonolithicImplementationNamePreList:
	//    {MultiMonolithicImplementationNamePreList} INDENT
	//      (PreListElement values+=[MonolithicImplementationDescription|QualifiedName])*
	//  DEDENT
	//;
	public MultiMonolithicImplementationNamePreListElements getMultiMonolithicImplementationNamePreListAccess() {
		return pMultiMonolithicImplementationNamePreList;
	}
	
	public ParserRule getMultiMonolithicImplementationNamePreListRule() {
		return getMultiMonolithicImplementationNamePreListAccess().getRule();
	}
	
	//MultiMonolithicImplementationNameListBracket:
	//  '[' (values+=[MonolithicImplementationDescription|QualifiedName]) (',' values+=[MonolithicImplementationDescription|QualifiedName]*)? ']'
	//;
	public MultiMonolithicImplementationNameListBracketElements getMultiMonolithicImplementationNameListBracketAccess() {
		return pMultiMonolithicImplementationNameListBracket;
	}
	
	public ParserRule getMultiMonolithicImplementationNameListBracketRule() {
		return getMultiMonolithicImplementationNameListBracketAccess().getRule();
	}
	
	//CIParameters:
	//    type = ID":"
	//    INDENT
	//    (parameters += GroupedProperties)+
	//    DEDENT
	//;
	public CIParametersElements getCIParametersAccess() {
		return pCIParameters;
	}
	
	public ParserRule getCIParametersRule() {
		return getCIParametersAccess().getRule();
	}
	
	//GroupedProperties:
	//    type = ID":"
	//  INDENT
	//      (properties += PropertyExpressType)+
	//  DEDENT
	//;
	public GroupedPropertiesElements getGroupedPropertiesAccess() {
		return pGroupedProperties;
	}
	
	public ParserRule getGroupedPropertiesRule() {
		return getGroupedPropertiesAccess().getRule();
	}
	
	//enum BOOLEAN:
	//    FALSE='false'|TRUE='true'
	//;
	public BOOLEANElements getBOOLEANAccess() {
		return eBOOLEAN;
	}
	
	public EnumRule getBOOLEANRule() {
		return getBOOLEANAccess().getRule();
	}
	
	//PreListElement hidden(SL_COMMENT):
	//  '-';
	public PreListElementElements getPreListElementAccess() {
		return pPreListElement;
	}
	
	public ParserRule getPreListElementRule() {
		return getPreListElementAccess().getRule();
	}
	
	//ScalarNumber:
	//  (Number Unit?)
	//;
	public ScalarNumberElements getScalarNumberAccess() {
		return pScalarNumber;
	}
	
	public ParserRule getScalarNumberRule() {
		return getScalarNumberAccess().getRule();
	}
	
	//Number:
	//  INT|
	//  FLOAT
	//;
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	//Unit:
	//  ScalarUnitSize|ScalarUnitTime|ScalarUnitFrequency
	//;
	public UnitElements getUnitAccess() {
		return pUnit;
	}
	
	public ParserRule getUnitRule() {
		return getUnitAccess().getRule();
	}
	
	//// 3.2.6.4 scalar-unit.size
	//ScalarUnitSize:
	//  ('B'|'b'
	//  'KB'|'kb'|'kB'|'Kb'|
	//  'MB'|'mb'|'mB'|'Mb'|
	//  'GB'|'gb'|'Gb'|'gB'|
	//  'TB'|'tb'|'Tb'|'tB')
	//;
	public ScalarUnitSizeElements getScalarUnitSizeAccess() {
		return pScalarUnitSize;
	}
	
	public ParserRule getScalarUnitSizeRule() {
		return getScalarUnitSizeAccess().getRule();
	}
	
	//// 3.2.6.5 scalar-unit.time
	//ScalarUnitTime:
	//  ('d'|'h'|'m'|'s'|'ms'|'us'|'ns')
	//;
	public ScalarUnitTimeElements getScalarUnitTimeAccess() {
		return pScalarUnitTime;
	}
	
	public ParserRule getScalarUnitTimeRule() {
		return getScalarUnitTimeAccess().getRule();
	}
	
	//ScalarUnitFrequency:
	//  ('Hz'|'kHz'|'MHz'|'GHz')
	//;
	public ScalarUnitFrequencyElements getScalarUnitFrequencyAccess() {
		return pScalarUnitFrequency;
	}
	
	public ParserRule getScalarUnitFrequencyRule() {
		return getScalarUnitFrequencyAccess().getRule();
	}
	
	//terminal LOCALPATH:
	//   (
	//    '"'(('/')|('./')|('../')|('.'))
	//    ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-')*
	//    '"'
	//   )
	//;
	public TerminalRule getLOCALPATHRule() {
		return tLOCALPATH;
	}
	
	//terminal FLOAT returns ecore::EFloat: INT '.' INT;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal URL:
	//  (
	//    '"'
	//    (
	//      (('http'('s')?'://')|('git@'))
	//      ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'\\'|'/'|'='|'?'|'!'|'('|')'|'.'|'-'|':')*
	//    )'"'|
	//    'localhost'|
	//    '"'('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-')*':'
	//    ('0'..'9')*'"'
	//  )
	//;
	public TerminalRule getURLRule() {
		return tURL;
	}
	
	//terminal SL_COMMENT: '#' !('\n'|'\r')*;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal INDENT: 'synthetic:INDENT';
	public TerminalRule getINDENTRule() {
		return tINDENT;
	}
	
	//terminal DEDENT: 'synthetic:DEDENT';
	public TerminalRule getDEDENTRule() {
		return tDEDENT;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
