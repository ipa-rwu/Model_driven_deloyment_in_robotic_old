/*
 * generated by Xtext 2.27.0
 */
parser grammar InternalDeployModelParser;

options {
	tokenVocab=InternalDeployModelLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package de.fraunhofer.ipa.deployment.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.ipa.deployment.services.DeployModelGrammarAccess;

}

@members {

 	private DeployModelGrammarAccess grammarAccess;

    public InternalDeployModelParser(TokenStream input, DeployModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Yaml";
   	}

   	@Override
   	protected DeployModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleYaml
entryRuleYaml returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getYamlRule()); }
	iv_ruleYaml=ruleYaml
	{ $current=$iv_ruleYaml.current; }
	EOF;

// Rule Yaml
ruleYaml returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getYamlAccess().getYamlAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getYamlAccess().getContentYamlContentParserRuleCall_1_0());
				}
				lv_content_1_0=ruleYamlContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getYamlRule());
					}
					add(
						$current,
						"content",
						lv_content_1_0,
						"de.fraunhofer.ipa.deployment.DeployModel.YamlContent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleYamlContent
entryRuleYamlContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getYamlContentRule()); }
	iv_ruleYamlContent=ruleYamlContent
	{ $current=$iv_ruleYamlContent.current; }
	EOF;

// Rule YamlContent
ruleYamlContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getYamlContentAccess().getRootContentMonolithicImplementationDescriptionParserRuleCall_0_0());
				}
				lv_rootContent_0_1=ruleMonolithicImplementationDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getYamlContentRule());
					}
					set(
						$current,
						"rootContent",
						lv_rootContent_0_1,
						"de.fraunhofer.ipa.deployment.DeployModel.MonolithicImplementationDescription");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getYamlContentAccess().getRootContentStackImplementationDescriptionParserRuleCall_0_1());
				}
				lv_rootContent_0_2=ruleStackImplementationDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getYamlContentRule());
					}
					set(
						$current,
						"rootContent",
						lv_rootContent_0_2,
						"de.fraunhofer.ipa.deployment.DeployModel.StackImplementationDescription");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getYamlContentAccess().getRootContentPackageDescriptionParserRuleCall_0_2());
				}
				lv_rootContent_0_3=rulePackageDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getYamlContentRule());
					}
					set(
						$current,
						"rootContent",
						lv_rootContent_0_3,
						"de.fraunhofer.ipa.deployment.DeployModel.PackageDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMonolithicImplementationDescription
entryRuleMonolithicImplementationDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonolithicImplementationDescriptionRule()); }
	iv_ruleMonolithicImplementationDescription=ruleMonolithicImplementationDescription
	{ $current=$iv_ruleMonolithicImplementationDescription.current; }
	EOF;

// Rule MonolithicImplementationDescription
ruleMonolithicImplementationDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0=MonolithicImplementationDescription
				{
					newLeafNode(lv_type_0_0, grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeMonolithicImplementationDescriptionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonolithicImplementationDescriptionRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "MonolithicImplementationDescription:");
				}
			)
		)
		this_INDENT_1=RULE_INDENT
		{
			newLeafNode(this_INDENT_1, grammarAccess.getMonolithicImplementationDescriptionAccess().getINDENTTerminalRuleCall_1());
		}
		otherlv_2=Name
		{
			newLeafNode(otherlv_2, grammarAccess.getMonolithicImplementationDescriptionAccess().getNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameQualifiedNameParserRuleCall_3_0());
				}
				lv_name_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMonolithicImplementationDescriptionRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"de.fraunhofer.ipa.deployment.DeployModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=ImplementsRosModel
			{
				newLeafNode(otherlv_4, grammarAccess.getMonolithicImplementationDescriptionAccess().getImplementsRosModelKeyword_4_0());
			}
			(
				(
					lv_impRosmodel_5_0=RULE_STRING
					{
						newLeafNode(lv_impRosmodel_5_0, grammarAccess.getMonolithicImplementationDescriptionAccess().getImpRosmodelSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMonolithicImplementationDescriptionRule());
						}
						setWithLastConsumed(
							$current,
							"impRosmodel",
							lv_impRosmodel_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_6=Description
		{
			newLeafNode(otherlv_6, grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionKeyword_5());
		}
		(
			(
				lv_description_7_0=RULE_STRING
				{
					newLeafNode(lv_description_7_0, grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonolithicImplementationDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8=Mode
		{
			newLeafNode(otherlv_8, grammarAccess.getMonolithicImplementationDescriptionAccess().getModeKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeImplementationModeTypeEnumRuleCall_8_0());
				}
				lv_mode_9_0=ruleImplementationModeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMonolithicImplementationDescriptionRule());
					}
					set(
						$current,
						"mode",
						lv_mode_9_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImplementationModeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=Branch_1
		{
			newLeafNode(otherlv_10, grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchBranchTypeParserRuleCall_10_0());
				}
				lv_branch_11_0=ruleBranchType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMonolithicImplementationDescriptionRule());
					}
					set(
						$current,
						"branch",
						lv_branch_11_0,
						"de.fraunhofer.ipa.deployment.DeployModel.BranchType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplImplementationArtifactDescriptionParserRuleCall_11_0());
				}
				lv_impl_12_0=ruleImplementationArtifactDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMonolithicImplementationDescriptionRule());
					}
					set(
						$current,
						"impl",
						lv_impl_12_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImplementationArtifactDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		this_DEDENT_13=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_13, grammarAccess.getMonolithicImplementationDescriptionAccess().getDEDENTTerminalRuleCall_12());
		}
	)
;

// Entry rule entryRuleBranchType
entryRuleBranchType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBranchTypeRule()); }
	iv_ruleBranchType=ruleBranchType
	{ $current=$iv_ruleBranchType.current.getText(); }
	EOF;

// Rule BranchType
ruleBranchType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getBranchTypeAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		kw=Any
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBranchTypeAccess().getAnyKeyword_1());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleNewImplementationArtifact
entryRuleNewImplementationArtifact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNewImplementationArtifactRule()); }
	iv_ruleNewImplementationArtifact=ruleNewImplementationArtifact
	{ $current=$iv_ruleNewImplementationArtifact.current; }
	EOF;

// Rule NewImplementationArtifact
ruleNewImplementationArtifact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Location
		{
			newLeafNode(otherlv_0, grammarAccess.getNewImplementationArtifactAccess().getLocationKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getNewImplementationArtifactAccess().getColonKeyword_1());
		}
		(
			(
				(
					lv_name_2_1=RULE_LOCALPATH
					{
						newLeafNode(lv_name_2_1, grammarAccess.getNewImplementationArtifactAccess().getNameLOCALPATHTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNewImplementationArtifactRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_1,
							"de.fraunhofer.ipa.deployment.DeployModel.LOCALPATH");
					}
					    |
					lv_name_2_2=RULE_URL
					{
						newLeafNode(lv_name_2_2, grammarAccess.getNewImplementationArtifactAccess().getNameURLTerminalRuleCall_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNewImplementationArtifactRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_2,
							"de.fraunhofer.ipa.deployment.DeployModel.URL");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNewImplementationArtifactAccess().getDeployRequirementsDeploymentRequirementsParserRuleCall_3_0());
				}
				lv_deployRequirements_3_0=ruleDeploymentRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNewImplementationArtifactRule());
					}
					set(
						$current,
						"deployRequirements",
						lv_deployRequirements_3_0,
						"de.fraunhofer.ipa.deployment.DeployModel.DeploymentRequirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNewImplementationArtifactAccess().getResourceRequirementsResourceRequirementsParserRuleCall_4_0());
				}
				lv_resourceRequirements_4_0=ruleResourceRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNewImplementationArtifactRule());
					}
					set(
						$current,
						"resourceRequirements",
						lv_resourceRequirements_4_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ResourceRequirements");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNewImplementationArtifactAccess().getBuildRequirementsBuildRequirementsParserRuleCall_5_0());
				}
				lv_buildRequirements_5_0=ruleBuildRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNewImplementationArtifactRule());
					}
					set(
						$current,
						"buildRequirements",
						lv_buildRequirements_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.BuildRequirements");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNewImplementationArtifactAccess().getStartCommandsStartCommandsParserRuleCall_6_0());
				}
				lv_startCommands_6_0=ruleStartCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNewImplementationArtifactRule());
					}
					set(
						$current,
						"startCommands",
						lv_startCommands_6_0,
						"de.fraunhofer.ipa.deployment.DeployModel.StartCommands");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImplementationArtifactDescription
entryRuleImplementationArtifactDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplementationArtifactDescriptionRule()); }
	iv_ruleImplementationArtifactDescription=ruleImplementationArtifactDescription
	{ $current=$iv_ruleImplementationArtifactDescription.current; }
	EOF;

// Rule ImplementationArtifactDescription
ruleImplementationArtifactDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0=ImplementationArtifactDescription
				{
					newLeafNode(lv_type_0_0, grammarAccess.getImplementationArtifactDescriptionAccess().getTypeImplementationArtifactDescriptionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImplementationArtifactDescriptionRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "ImplementationArtifactDescription");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getImplementationArtifactDescriptionAccess().getColonKeyword_1());
		}
		this_INDENT_2=RULE_INDENT
		{
			newLeafNode(this_INDENT_2, grammarAccess.getImplementationArtifactDescriptionAccess().getINDENTTerminalRuleCall_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImplementationArtifactDescriptionAccess().getImplNewImplementationArtifactParserRuleCall_3_0_0());
					}
					lv_impl_3_1=ruleNewImplementationArtifact
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImplementationArtifactDescriptionRule());
						}
						set(
							$current,
							"impl",
							lv_impl_3_1,
							"de.fraunhofer.ipa.deployment.DeployModel.NewImplementationArtifact");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImplementationArtifactDescriptionAccess().getImplReuseImplementationArtifactParserRuleCall_3_0_1());
					}
					lv_impl_3_2=ruleReuseImplementationArtifact
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImplementationArtifactDescriptionRule());
						}
						set(
							$current,
							"impl",
							lv_impl_3_2,
							"de.fraunhofer.ipa.deployment.DeployModel.ReuseImplementationArtifact");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		this_DEDENT_4=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_4, grammarAccess.getImplementationArtifactDescriptionAccess().getDEDENTTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleReuseImplementationArtifact
entryRuleReuseImplementationArtifact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReuseImplementationArtifactRule()); }
	iv_ruleReuseImplementationArtifact=ruleReuseImplementationArtifact
	{ $current=$iv_ruleReuseImplementationArtifact.current; }
	EOF;

// Rule ReuseImplementationArtifact
ruleReuseImplementationArtifact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Use
		{
			newLeafNode(otherlv_0, grammarAccess.getReuseImplementationArtifactAccess().getUseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReuseImplementationArtifactAccess().getListsImplementationArtifactAbstractParserRuleCall_1_0());
				}
				lv_lists_1_0=ruleImplementationArtifactAbstract
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReuseImplementationArtifactRule());
					}
					add(
						$current,
						"lists",
						lv_lists_1_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImplementationArtifactAbstract");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleImplementationArtifactAbstract
entryRuleImplementationArtifactAbstract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplementationArtifactAbstractRule()); }
	iv_ruleImplementationArtifactAbstract=ruleImplementationArtifactAbstract
	{ $current=$iv_ruleImplementationArtifactAbstract.current; }
	EOF;

// Rule ImplementationArtifactAbstract
ruleImplementationArtifactAbstract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImplementationArtifactAbstractAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Import
		{
			newLeafNode(otherlv_1, grammarAccess.getImplementationArtifactAbstractAccess().getImportKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementationArtifactAbstractAccess().getImportedNamespaceQualifiedNameParserRuleCall_2_0());
				}
				lv_importedNamespace_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementationArtifactAbstractRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_2_0,
						"de.fraunhofer.ipa.deployment.DeployModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getImplementationArtifactAbstractAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=Name
		{
			newLeafNode(otherlv_4, grammarAccess.getImplementationArtifactAbstractAccess().getNameKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImplementationArtifactAbstractRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImplementationArtifactAbstractAccess().getNameMonolithicImplementationDescriptionCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementationArtifactAbstractAccess().getStartCommandsStartCommandsParserRuleCall_6_0());
				}
				lv_startCommands_6_0=ruleStartCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementationArtifactAbstractRule());
					}
					set(
						$current,
						"startCommands",
						lv_startCommands_6_0,
						"de.fraunhofer.ipa.deployment.DeployModel.StartCommands");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_7=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_7, grammarAccess.getImplementationArtifactAbstractAccess().getDEDENTTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleDeploymentRequirements
entryRuleDeploymentRequirements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeploymentRequirementsRule()); }
	iv_ruleDeploymentRequirements=ruleDeploymentRequirements
	{ $current=$iv_ruleDeploymentRequirements.current; }
	EOF;

// Rule DeploymentRequirements
ruleDeploymentRequirements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=DeployRequirements
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeploymentRequirementsAccess().getNameDeployRequirementsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeploymentRequirementsRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "deployRequirements");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getDeploymentRequirementsAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentRequirementsAccess().getOperatingSystemReqOperatingSystemParserRuleCall_2_0());
				}
				lv_operatingSystem_2_0=ruleReqOperatingSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentRequirementsRule());
					}
					set(
						$current,
						"operatingSystem",
						lv_operatingSystem_2_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ReqOperatingSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentRequirementsAccess().getProcessorArchitectureReqProcessorArchitectureParserRuleCall_3_0());
				}
				lv_processorArchitecture_3_0=ruleReqProcessorArchitecture
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentRequirementsRule());
					}
					set(
						$current,
						"processorArchitecture",
						lv_processorArchitecture_3_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ReqProcessorArchitecture");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentRequirementsAccess().getRosDistroReqRosDistroParserRuleCall_4_0());
				}
				lv_rosDistro_4_0=ruleReqRosDistro
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentRequirementsRule());
					}
					set(
						$current,
						"rosDistro",
						lv_rosDistro_4_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ReqRosDistro");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleResourceRequirements
entryRuleResourceRequirements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRequirementsRule()); }
	iv_ruleResourceRequirements=ruleResourceRequirements
	{ $current=$iv_ruleResourceRequirements.current; }
	EOF;

// Rule ResourceRequirements
ruleResourceRequirements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=ResourceRequirements
				{
					newLeafNode(lv_name_0_0, grammarAccess.getResourceRequirementsAccess().getNameResourceRequirementsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceRequirementsRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "resourceRequirements");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getResourceRequirementsAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceRequirementsAccess().getRequirementsResourceRequirementParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleResourceRequirement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceRequirementsRule());
					}
					add(
						$current,
						"requirements",
						lv_requirements_2_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ResourceRequirement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleResourceRequirement
entryRuleResourceRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRequirementRule()); }
	iv_ruleResourceRequirement=ruleResourceRequirement
	{ $current=$iv_ruleResourceRequirement.current; }
	EOF;

// Rule ResourceRequirement
ruleResourceRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getResourceRequirementAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getResourceRequirementAccess().getNameKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceRequirementAccess().getNameResourceReqTypesEnumRuleCall_2_0());
				}
				lv_name_2_0=ruleResourceReqTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceRequirementRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ResourceReqTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getResourceRequirementAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=Value
		{
			newLeafNode(otherlv_4, grammarAccess.getResourceRequirementAccess().getValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceRequirementAccess().getValueScalarNumberParserRuleCall_5_0());
				}
				lv_value_5_0=ruleScalarNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceRequirementRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ScalarNumber");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_6=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_6, grammarAccess.getResourceRequirementAccess().getDEDENTTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleReqOperatingSystem
entryRuleReqOperatingSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReqOperatingSystemRule()); }
	iv_ruleReqOperatingSystem=ruleReqOperatingSystem
	{ $current=$iv_ruleReqOperatingSystem.current; }
	EOF;

// Rule ReqOperatingSystem
ruleReqOperatingSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReqOperatingSystemAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getReqOperatingSystemAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=Os
				{
					newLeafNode(lv_name_2_0, grammarAccess.getReqOperatingSystemAccess().getNameOsKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReqOperatingSystemRule());
					}
					setWithLastConsumed($current, "name", lv_name_2_0, "os");
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getReqOperatingSystemAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=Value
		{
			newLeafNode(otherlv_4, grammarAccess.getReqOperatingSystemAccess().getValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReqOperatingSystemAccess().getValueOperatingSystemTypeListParserRuleCall_5_0());
				}
				lv_value_5_0=ruleOperatingSystemTypeList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReqOperatingSystemRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.OperatingSystemTypeList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_6=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_6, grammarAccess.getReqOperatingSystemAccess().getDEDENTTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleOperatingSystemTypeList
entryRuleOperatingSystemTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperatingSystemTypeListRule()); }
	iv_ruleOperatingSystemTypeList=ruleOperatingSystemTypeList
	{ $current=$iv_ruleOperatingSystemTypeList.current; }
	EOF;

// Rule OperatingSystemTypeList
ruleOperatingSystemTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOperatingSystemTypeListAccess().getPreListElementParserRuleCall_0_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperatingSystemTypeListAccess().getChildrenOperatingSystemTypesEnumRuleCall_0_1_0());
					}
					lv_children_1_0=ruleOperatingSystemTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperatingSystemTypeListRule());
						}
						add(
							$current,
							"children",
							lv_children_1_0,
							"de.fraunhofer.ipa.deployment.DeployModel.OperatingSystemTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getOperatingSystemTypeListAccess().getPreListElementParserRuleCall_1_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperatingSystemTypeListAccess().getChildrenOperatingSystemTypesEnumRuleCall_1_1_0());
					}
					lv_children_3_0=ruleOperatingSystemTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperatingSystemTypeListRule());
						}
						add(
							$current,
							"children",
							lv_children_3_0,
							"de.fraunhofer.ipa.deployment.DeployModel.OperatingSystemTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleReqProcessorArchitecture
entryRuleReqProcessorArchitecture returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReqProcessorArchitectureRule()); }
	iv_ruleReqProcessorArchitecture=ruleReqProcessorArchitecture
	{ $current=$iv_ruleReqProcessorArchitecture.current; }
	EOF;

// Rule ReqProcessorArchitecture
ruleReqProcessorArchitecture returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReqProcessorArchitectureAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getReqProcessorArchitectureAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=Processor_architecture
				{
					newLeafNode(lv_name_2_0, grammarAccess.getReqProcessorArchitectureAccess().getNameProcessor_architectureKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReqProcessorArchitectureRule());
					}
					setWithLastConsumed($current, "name", lv_name_2_0, "processor_architecture");
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getReqProcessorArchitectureAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=Value
		{
			newLeafNode(otherlv_4, grammarAccess.getReqProcessorArchitectureAccess().getValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReqProcessorArchitectureAccess().getValueProcessorArchitectureTypeListParserRuleCall_5_0());
				}
				lv_value_5_0=ruleProcessorArchitectureTypeList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReqProcessorArchitectureRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ProcessorArchitectureTypeList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_6=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_6, grammarAccess.getReqProcessorArchitectureAccess().getDEDENTTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleProcessorArchitectureTypeList
entryRuleProcessorArchitectureTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessorArchitectureTypeListRule()); }
	iv_ruleProcessorArchitectureTypeList=ruleProcessorArchitectureTypeList
	{ $current=$iv_ruleProcessorArchitectureTypeList.current; }
	EOF;

// Rule ProcessorArchitectureTypeList
ruleProcessorArchitectureTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProcessorArchitectureTypeListAccess().getPreListElementParserRuleCall_0_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenProcessorArchitectureTypesEnumRuleCall_0_1_0());
					}
					lv_children_1_0=ruleProcessorArchitectureTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessorArchitectureTypeListRule());
						}
						add(
							$current,
							"children",
							lv_children_1_0,
							"de.fraunhofer.ipa.deployment.DeployModel.ProcessorArchitectureTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getProcessorArchitectureTypeListAccess().getPreListElementParserRuleCall_1_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenProcessorArchitectureTypesEnumRuleCall_1_1_0());
					}
					lv_children_3_0=ruleProcessorArchitectureTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessorArchitectureTypeListRule());
						}
						add(
							$current,
							"children",
							lv_children_3_0,
							"de.fraunhofer.ipa.deployment.DeployModel.ProcessorArchitectureTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleReqRosDistro
entryRuleReqRosDistro returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReqRosDistroRule()); }
	iv_ruleReqRosDistro=ruleReqRosDistro
	{ $current=$iv_ruleReqRosDistro.current; }
	EOF;

// Rule ReqRosDistro
ruleReqRosDistro returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReqRosDistroAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getReqRosDistroAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=Ros_distro
				{
					newLeafNode(lv_name_2_0, grammarAccess.getReqRosDistroAccess().getNameRos_distroKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReqRosDistroRule());
					}
					setWithLastConsumed($current, "name", lv_name_2_0, "ros_distro");
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getReqRosDistroAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=Value
		{
			newLeafNode(otherlv_4, grammarAccess.getReqRosDistroAccess().getValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReqRosDistroAccess().getValueRosDistroListParserRuleCall_5_0());
				}
				lv_value_5_0=ruleRosDistroList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReqRosDistroRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.RosDistroList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_6=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_6, grammarAccess.getReqRosDistroAccess().getDEDENTTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleRosDistroList
entryRuleRosDistroList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRosDistroListRule()); }
	iv_ruleRosDistroList=ruleRosDistroList
	{ $current=$iv_ruleRosDistroList.current; }
	EOF;

// Rule RosDistroList
ruleRosDistroList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRosDistroListAccess().getPreListElementParserRuleCall_0_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRosDistroListAccess().getChildrenRosDistroEnumRuleCall_0_1_0());
					}
					lv_children_1_0=ruleRosDistro
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRosDistroListRule());
						}
						add(
							$current,
							"children",
							lv_children_1_0,
							"de.fraunhofer.ipa.deployment.DeployModel.RosDistro");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getRosDistroListAccess().getPreListElementParserRuleCall_1_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRosDistroListAccess().getChildrenRosDistroEnumRuleCall_1_1_0());
					}
					lv_children_3_0=ruleRosDistro
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRosDistroListRule());
						}
						add(
							$current,
							"children",
							lv_children_3_0,
							"de.fraunhofer.ipa.deployment.DeployModel.RosDistro");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleBuildRequirements
entryRuleBuildRequirements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuildRequirementsRule()); }
	iv_ruleBuildRequirements=ruleBuildRequirements
	{ $current=$iv_ruleBuildRequirements.current; }
	EOF;

// Rule BuildRequirements
ruleBuildRequirements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=BuildRequirements
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBuildRequirementsAccess().getNameBuildRequirementsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuildRequirementsRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "buildRequirements");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getBuildRequirementsAccess().getColonKeyword_1());
		}
		this_INDENT_2=RULE_INDENT
		{
			newLeafNode(this_INDENT_2, grammarAccess.getBuildRequirementsAccess().getINDENTTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuildRequirementsAccess().getBuildDependenciesReqBuildDependenciesParserRuleCall_3_0());
				}
				lv_buildDependencies_3_0=ruleReqBuildDependencies
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuildRequirementsRule());
					}
					set(
						$current,
						"buildDependencies",
						lv_buildDependencies_3_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ReqBuildDependencies");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBuildRequirementsAccess().getDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_4_0());
				}
				lv_dependencyRepositories_4_0=ruleReqDependencyRepositories
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuildRequirementsRule());
					}
					set(
						$current,
						"dependencyRepositories",
						lv_dependencyRepositories_4_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ReqDependencyRepositories");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		this_DEDENT_5=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_5, grammarAccess.getBuildRequirementsAccess().getDEDENTTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleReqBuildDependencies
entryRuleReqBuildDependencies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReqBuildDependenciesRule()); }
	iv_ruleReqBuildDependencies=ruleReqBuildDependencies
	{ $current=$iv_ruleReqBuildDependencies.current; }
	EOF;

// Rule ReqBuildDependencies
ruleReqBuildDependencies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=DependOn
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReqBuildDependenciesAccess().getNameDependOnKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReqBuildDependenciesRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "dependOn:");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReqBuildDependenciesAccess().getDependenciesDependencyParserRuleCall_1_0());
				}
				lv_dependencies_1_0=ruleDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReqBuildDependenciesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_1_0,
						"de.fraunhofer.ipa.deployment.DeployModel.Dependency");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	iv_ruleDependency=ruleDependency
	{ $current=$iv_ruleDependency.current; }
	EOF;

// Rule Dependency
ruleDependency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDependencyAccess().getLocalPackageParserRuleCall_0());
		}
		this_LocalPackage_0=ruleLocalPackage
		{
			$current = $this_LocalPackage_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDependencyAccess().getGitPackageParserRuleCall_1());
		}
		this_GitPackage_1=ruleGitPackage
		{
			$current = $this_GitPackage_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLocalPackage
entryRuleLocalPackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalPackageRule()); }
	iv_ruleLocalPackage=ruleLocalPackage
	{ $current=$iv_ruleLocalPackage.current; }
	EOF;

// Rule LocalPackage
ruleLocalPackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLocalPackageAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=From
		{
			newLeafNode(otherlv_1, grammarAccess.getLocalPackageAccess().getFromKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalPackageAccess().getImportedNamespaceQualifiedNameParserRuleCall_2_0());
				}
				lv_importedNamespace_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalPackageRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_2_0,
						"de.fraunhofer.ipa.deployment.DeployModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getLocalPackageAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=Name
		{
			newLeafNode(otherlv_4, grammarAccess.getLocalPackageAccess().getNameKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalPackageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLocalPackageAccess().getNameMonolithicImplementationDescriptionCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_6=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_6, grammarAccess.getLocalPackageAccess().getDEDENTTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleGitPackage
entryRuleGitPackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGitPackageRule()); }
	iv_ruleGitPackage=ruleGitPackage
	{ $current=$iv_ruleGitPackage.current; }
	EOF;

// Rule GitPackage
ruleGitPackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGitPackageAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=From
		{
			newLeafNode(otherlv_1, grammarAccess.getGitPackageAccess().getFromKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_URL
				{
					newLeafNode(lv_path_2_0, grammarAccess.getGitPackageAccess().getPathURLTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGitPackageRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"de.fraunhofer.ipa.deployment.DeployModel.URL");
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getGitPackageAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=Name
		{
			newLeafNode(otherlv_4, grammarAccess.getGitPackageAccess().getNameKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getGitPackageAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGitPackageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_6=Branch_1
			{
				newLeafNode(otherlv_6, grammarAccess.getGitPackageAccess().getBranchKeyword_6_0());
			}
			(
				(
					lv_branch_7_0=RULE_STRING
					{
						newLeafNode(lv_branch_7_0, grammarAccess.getGitPackageAccess().getBranchSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGitPackageRule());
						}
						setWithLastConsumed(
							$current,
							"branch",
							lv_branch_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		this_DEDENT_8=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_8, grammarAccess.getGitPackageAccess().getDEDENTTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleReqDependencyRepositories
entryRuleReqDependencyRepositories returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReqDependencyRepositoriesRule()); }
	iv_ruleReqDependencyRepositories=ruleReqDependencyRepositories
	{ $current=$iv_ruleReqDependencyRepositories.current; }
	EOF;

// Rule ReqDependencyRepositories
ruleReqDependencyRepositories returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=AptRepositories
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReqDependencyRepositoriesAccess().getNameAptRepositoriesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReqDependencyRepositoriesRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "aptRepositories");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getReqDependencyRepositoriesAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAptRepositoryInstanceParserRuleCall_2_0());
				}
				lv_children_2_0=ruleAptRepositoryInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReqDependencyRepositoriesRule());
					}
					add(
						$current,
						"children",
						lv_children_2_0,
						"de.fraunhofer.ipa.deployment.DeployModel.AptRepositoryInstance");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleAptRepositoryInstance
entryRuleAptRepositoryInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAptRepositoryInstanceRule()); }
	iv_ruleAptRepositoryInstance=ruleAptRepositoryInstance
	{ $current=$iv_ruleAptRepositoryInstance.current; }
	EOF;

// Rule AptRepositoryInstance
ruleAptRepositoryInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAptRepositoryInstanceAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getAptRepositoryInstanceAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAptRepositoryInstanceAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAptRepositoryInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getAptRepositoryInstanceAccess().getINDENTTerminalRuleCall_3());
		}
		otherlv_4=KeyLink
		{
			newLeafNode(otherlv_4, grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkKeyword_4());
		}
		(
			(
				lv_keyLink_5_0=RULE_URL
				{
					newLeafNode(lv_keyLink_5_0, grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkURLTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAptRepositoryInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"keyLink",
						lv_keyLink_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.URL");
				}
			)
		)
		otherlv_6=RepositoryPath
		{
			newLeafNode(otherlv_6, grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathKeyword_6());
		}
		(
			(
				lv_repositoryPath_7_0=RULE_URL
				{
					newLeafNode(lv_repositoryPath_7_0, grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathURLTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAptRepositoryInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"repositoryPath",
						lv_repositoryPath_7_0,
						"de.fraunhofer.ipa.deployment.DeployModel.URL");
				}
			)
		)
		(
			otherlv_8=UpdateRosDep
			{
				newLeafNode(otherlv_8, grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepKeyword_8_0());
			}
			(
				(
					lv_updateRosDep_9_0=RULE_URL
					{
						newLeafNode(lv_updateRosDep_9_0, grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepURLTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAptRepositoryInstanceRule());
						}
						setWithLastConsumed(
							$current,
							"updateRosDep",
							lv_updateRosDep_9_0,
							"de.fraunhofer.ipa.deployment.DeployModel.URL");
					}
				)
			)
		)?
		this_DEDENT_10=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_10, grammarAccess.getAptRepositoryInstanceAccess().getDEDENTTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleStartCommands
entryRuleStartCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartCommandsRule()); }
	iv_ruleStartCommands=ruleStartCommands
	{ $current=$iv_ruleStartCommands.current; }
	EOF;

// Rule StartCommands
ruleStartCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=StartCommands
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStartCommandsAccess().getNameStartCommandsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartCommandsRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "startCommands:");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStartCommandsAccess().getStartCommandsListStartCommandsParserRuleCall_1_0());
				}
				lv_startCommands_1_0=ruleListStartCommands
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartCommandsRule());
					}
					set(
						$current,
						"startCommands",
						lv_startCommands_1_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ListStartCommands");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleListStartCommands
entryRuleListStartCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListStartCommandsRule()); }
	iv_ruleListStartCommands=ruleListStartCommands
	{ $current=$iv_ruleListStartCommands.current; }
	EOF;

// Rule ListStartCommands
ruleListStartCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getListStartCommandsAccess().getPreListElementParserRuleCall_0_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					lv_children_1_0=RULE_STRING
					{
						newLeafNode(lv_children_1_0, grammarAccess.getListStartCommandsAccess().getChildrenSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListStartCommandsRule());
						}
						addWithLastConsumed(
							$current,
							"children",
							lv_children_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getListStartCommandsAccess().getPreListElementParserRuleCall_1_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					lv_children_3_0=RULE_STRING
					{
						newLeafNode(lv_children_3_0, grammarAccess.getListStartCommandsAccess().getChildrenSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListStartCommandsRule());
						}
						addWithLastConsumed(
							$current,
							"children",
							lv_children_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleStackImplementationDescription
entryRuleStackImplementationDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStackImplementationDescriptionRule()); }
	iv_ruleStackImplementationDescription=ruleStackImplementationDescription
	{ $current=$iv_ruleStackImplementationDescription.current; }
	EOF;

// Rule StackImplementationDescription
ruleStackImplementationDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0=StackImplementationDescription
				{
					newLeafNode(lv_type_0_0, grammarAccess.getStackImplementationDescriptionAccess().getTypeStackImplementationDescriptionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStackImplementationDescriptionRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "StackImplementationDescription");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getStackImplementationDescriptionAccess().getColonKeyword_1());
		}
		this_INDENT_2=RULE_INDENT
		{
			newLeafNode(this_INDENT_2, grammarAccess.getStackImplementationDescriptionAccess().getINDENTTerminalRuleCall_2());
		}
		otherlv_3=Name
		{
			newLeafNode(otherlv_3, grammarAccess.getStackImplementationDescriptionAccess().getNameKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStackImplementationDescriptionAccess().getNameQualifiedNameParserRuleCall_4_0());
				}
				lv_name_4_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStackImplementationDescriptionRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"de.fraunhofer.ipa.deployment.DeployModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=ImplementsRosModel
			{
				newLeafNode(otherlv_5, grammarAccess.getStackImplementationDescriptionAccess().getImplementsRosModelKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStackImplementationDescriptionAccess().getImpRosmodelQualifiedNameParserRuleCall_5_1_0());
					}
					lv_impRosmodel_6_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStackImplementationDescriptionRule());
						}
						set(
							$current,
							"impRosmodel",
							lv_impRosmodel_6_0,
							"de.fraunhofer.ipa.deployment.DeployModel.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=Description
		{
			newLeafNode(otherlv_7, grammarAccess.getStackImplementationDescriptionAccess().getDescriptionKeyword_6());
		}
		(
			(
				lv_description_8_0=RULE_STRING
				{
					newLeafNode(lv_description_8_0, grammarAccess.getStackImplementationDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStackImplementationDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9=Mode
		{
			newLeafNode(otherlv_9, grammarAccess.getStackImplementationDescriptionAccess().getModeKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStackImplementationDescriptionAccess().getModeImplementationModeTypeEnumRuleCall_9_0());
				}
				lv_mode_10_0=ruleImplementationModeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStackImplementationDescriptionRule());
					}
					set(
						$current,
						"mode",
						lv_mode_10_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImplementationModeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStackImplementationDescriptionAccess().getImplImplementationArtifactDescriptionParserRuleCall_10_0());
				}
				lv_impl_11_0=ruleImplementationArtifactDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStackImplementationDescriptionRule());
					}
					set(
						$current,
						"impl",
						lv_impl_11_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImplementationArtifactDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_12=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_12, grammarAccess.getStackImplementationDescriptionAccess().getDEDENTTerminalRuleCall_11());
		}
	)
;

// Entry rule entryRulePackageDescription
entryRulePackageDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageDescriptionRule()); }
	iv_rulePackageDescription=rulePackageDescription
	{ $current=$iv_rulePackageDescription.current; }
	EOF;

// Rule PackageDescription
rulePackageDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0=PackageDescription
				{
					newLeafNode(lv_type_0_0, grammarAccess.getPackageDescriptionAccess().getTypePackageDescriptionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageDescriptionRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "PackageDescription");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getPackageDescriptionAccess().getColonKeyword_1());
		}
		this_INDENT_2=RULE_INDENT
		{
			newLeafNode(this_INDENT_2, grammarAccess.getPackageDescriptionAccess().getINDENTTerminalRuleCall_2());
		}
		otherlv_3=ImageDescription
		{
			newLeafNode(otherlv_3, grammarAccess.getPackageDescriptionAccess().getImageDescriptionKeyword_3());
		}
		this_INDENT_4=RULE_INDENT
		{
			newLeafNode(this_INDENT_4, grammarAccess.getPackageDescriptionAccess().getINDENTTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDescriptionAccess().getImageDescriptionImageDescriptionParserRuleCall_5_0());
				}
				lv_imageDescription_5_0=ruleImageDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDescriptionRule());
					}
					set(
						$current,
						"imageDescription",
						lv_imageDescription_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImageDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_6=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_6, grammarAccess.getPackageDescriptionAccess().getDEDENTTerminalRuleCall_6());
		}
		otherlv_7=RepositoryDescription
		{
			newLeafNode(otherlv_7, grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0());
				}
				lv_repositoryDescription_8_0=ruleRepositoryDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDescriptionRule());
					}
					set(
						$current,
						"repositoryDescription",
						lv_repositoryDescription_8_0,
						"de.fraunhofer.ipa.deployment.DeployModel.RepositoryDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_9=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_9, grammarAccess.getPackageDescriptionAccess().getDEDENTTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleImageDescription
entryRuleImageDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageDescriptionRule()); }
	iv_ruleImageDescription=ruleImageDescription
	{ $current=$iv_ruleImageDescription.current; }
	EOF;

// Rule ImageDescription
ruleImageDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Types
		{
			newLeafNode(otherlv_0, grammarAccess.getImageDescriptionAccess().getTypesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImageDescriptionAccess().getTypesImageTypeListParserRuleCall_1_0());
				}
				lv_types_1_0=ruleImageTypeList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageDescriptionRule());
					}
					add(
						$current,
						"types",
						lv_types_1_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImageTypeList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=Name
		{
			newLeafNode(otherlv_2, grammarAccess.getImageDescriptionAccess().getNameKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageDescriptionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImageDescriptionAccess().getNameMonolithicImplementationDescriptionCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=ImageVersions
		{
			newLeafNode(otherlv_4, grammarAccess.getImageDescriptionAccess().getImageVersionsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImageDescriptionAccess().getImageVersionsImageVersionListParserRuleCall_5_0());
				}
				lv_imageVersions_5_0=ruleImageVersionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageDescriptionRule());
					}
					set(
						$current,
						"imageVersions",
						lv_imageVersions_5_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImageVersionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImageTypeList
entryRuleImageTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageTypeListRule()); }
	iv_ruleImageTypeList=ruleImageTypeList
	{ $current=$iv_ruleImageTypeList.current; }
	EOF;

// Rule ImageTypeList
ruleImageTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftSquareBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getImageTypeListAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImageTypeListAccess().getChildrenImageTypesEnumRuleCall_1_0());
				}
				lv_children_1_0=ruleImageTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageTypeListRule());
					}
					add(
						$current,
						"children",
						lv_children_1_0,
						"de.fraunhofer.ipa.deployment.DeployModel.ImageTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getImageTypeListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageTypeListAccess().getChildrenImageTypesEnumRuleCall_2_1_0());
					}
					lv_children_3_0=ruleImageTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageTypeListRule());
						}
						add(
							$current,
							"children",
							lv_children_3_0,
							"de.fraunhofer.ipa.deployment.DeployModel.ImageTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_4=RightSquareBracket
		{
			newLeafNode(otherlv_4, grammarAccess.getImageTypeListAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleImageVersionList
entryRuleImageVersionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageVersionListRule()); }
	iv_ruleImageVersionList=ruleImageVersionList
	{ $current=$iv_ruleImageVersionList.current; }
	EOF;

// Rule ImageVersionList
ruleImageVersionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getImageVersionListAccess().getPreListElementParserRuleCall_0_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageVersionListAccess().getChildrenImageVersionTypesEnumRuleCall_0_1_0());
					}
					lv_children_1_0=ruleImageVersionTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageVersionListRule());
						}
						add(
							$current,
							"children",
							lv_children_1_0,
							"de.fraunhofer.ipa.deployment.DeployModel.ImageVersionTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getImageVersionListAccess().getPreListElementParserRuleCall_1_0());
			}
			rulePreListElement
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageVersionListAccess().getChildrenImageVersionTypesEnumRuleCall_1_1_0());
					}
					lv_children_3_0=ruleImageVersionTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageVersionListRule());
						}
						add(
							$current,
							"children",
							lv_children_3_0,
							"de.fraunhofer.ipa.deployment.DeployModel.ImageVersionTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleRepositoryDescription
entryRuleRepositoryDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryDescriptionRule()); }
	iv_ruleRepositoryDescription=ruleRepositoryDescription
	{ $current=$iv_ruleRepositoryDescription.current; }
	EOF;

// Rule RepositoryDescription
ruleRepositoryDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRepositoryDescriptionAccess().getSpecRepositorySpecParserRuleCall_0());
			}
			lv_spec_0_0=ruleRepositorySpec
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRepositoryDescriptionRule());
				}
				add(
					$current,
					"spec",
					lv_spec_0_0,
					"de.fraunhofer.ipa.deployment.DeployModel.RepositorySpec");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleRepositorySpec
entryRuleRepositorySpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositorySpecRule()); }
	iv_ruleRepositorySpec=ruleRepositorySpec
	{ $current=$iv_ruleRepositorySpec.current; }
	EOF;

// Rule RepositorySpec
ruleRepositorySpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRepositorySpecAccess().getPreListElementParserRuleCall_0());
		}
		rulePreListElement
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Name
		{
			newLeafNode(otherlv_1, grammarAccess.getRepositorySpecAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRepositorySpecAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRepositorySpecRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_INDENT_3=RULE_INDENT
		{
			newLeafNode(this_INDENT_3, grammarAccess.getRepositorySpecAccess().getINDENTTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositorySpecAccess().getRepositoryRepositoryParserRuleCall_4_0());
				}
				lv_repository_4_0=ruleRepository
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositorySpecRule());
					}
					set(
						$current,
						"repository",
						lv_repository_4_0,
						"de.fraunhofer.ipa.deployment.DeployModel.Repository");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_DEDENT_5=RULE_DEDENT
		{
			newLeafNode(this_DEDENT_5, grammarAccess.getRepositorySpecAccess().getDEDENTTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleRepository
entryRuleRepository returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryRule()); }
	iv_ruleRepository=ruleRepository
	{ $current=$iv_ruleRepository.current; }
	EOF;

// Rule Repository
ruleRepository returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Type
		{
			newLeafNode(otherlv_0, grammarAccess.getRepositoryAccess().getTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getTypeRepositoryTypesEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleRepositoryTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.fraunhofer.ipa.deployment.DeployModel.RepositoryTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Path
			{
				newLeafNode(otherlv_2, grammarAccess.getRepositoryAccess().getPathKeyword_2_0());
			}
			(
				(
					lv_path_3_0=RULE_STRING
					{
						newLeafNode(lv_path_3_0, grammarAccess.getRepositoryAccess().getPathSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRepositoryRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePreListElement
entryRulePreListElement returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT");
}:
	{ newCompositeNode(grammarAccess.getPreListElementRule()); }
	iv_rulePreListElement=rulePreListElement
	{ $current=$iv_rulePreListElement.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule PreListElement
rulePreListElement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT");
}
@after {
	leaveRule();
}:
	kw=HyphenMinus
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPreListElementAccess().getHyphenMinusKeyword());
	}
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleScalarNumber
entryRuleScalarNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getScalarNumberRule()); }
	iv_ruleScalarNumber=ruleScalarNumber
	{ $current=$iv_ruleScalarNumber.current.getText(); }
	EOF;

// Rule ScalarNumber
ruleScalarNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getScalarNumberAccess().getNumberParserRuleCall_0());
		}
		this_Number_0=ruleNumber
		{
			$current.merge(this_Number_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getScalarNumberAccess().getUnitParserRuleCall_1());
			}
			this_Unit_1=ruleUnit
			{
				$current.merge(this_Unit_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getNumberAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_FLOAT_1=RULE_FLOAT
		{
			$current.merge(this_FLOAT_1);
		}
		{
			newLeafNode(this_FLOAT_1, grammarAccess.getNumberAccess().getFLOATTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current.getText(); }
	EOF;

// Rule Unit
ruleUnit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitAccess().getScalarUnitSizeParserRuleCall_0());
		}
		this_ScalarUnitSize_0=ruleScalarUnitSize
		{
			$current.merge(this_ScalarUnitSize_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getScalarUnitTimeParserRuleCall_1());
		}
		this_ScalarUnitTime_1=ruleScalarUnitTime
		{
			$current.merge(this_ScalarUnitTime_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getScalarUnitFrequencyParserRuleCall_2());
		}
		this_ScalarUnitFrequency_2=ruleScalarUnitFrequency
		{
			$current.merge(this_ScalarUnitFrequency_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleScalarUnitSize
entryRuleScalarUnitSize returns [String current=null]:
	{ newCompositeNode(grammarAccess.getScalarUnitSizeRule()); }
	iv_ruleScalarUnitSize=ruleScalarUnitSize
	{ $current=$iv_ruleScalarUnitSize.current.getText(); }
	EOF;

// Rule ScalarUnitSize
ruleScalarUnitSize returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=B
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getBKeyword_0());
		}
		    |
		(
			kw=B_1
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getBKeyword_1_0());
			}
			kw=KB
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getKBKeyword_1_1());
			}
		)
		    |
		kw=Kb_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getKbKeyword_2());
		}
		    |
		kw=KB_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getKBKeyword_3());
		}
		    |
		kw=Kb
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getKbKeyword_4());
		}
		    |
		kw=MB
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getMBKeyword_5());
		}
		    |
		kw=Mb_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getMbKeyword_6());
		}
		    |
		kw=MB_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getMBKeyword_7());
		}
		    |
		kw=Mb
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getMbKeyword_8());
		}
		    |
		kw=GB
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getGBKeyword_9());
		}
		    |
		kw=Gb_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getGbKeyword_10());
		}
		    |
		kw=Gb
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getGbKeyword_11());
		}
		    |
		kw=GB_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getGBKeyword_12());
		}
		    |
		kw=TB
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getTBKeyword_13());
		}
		    |
		kw=Tb_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getTbKeyword_14());
		}
		    |
		kw=Tb
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getTbKeyword_15());
		}
		    |
		kw=TB_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitSizeAccess().getTBKeyword_16());
		}
	)
;

// Entry rule entryRuleScalarUnitTime
entryRuleScalarUnitTime returns [String current=null]:
	{ newCompositeNode(grammarAccess.getScalarUnitTimeRule()); }
	iv_ruleScalarUnitTime=ruleScalarUnitTime
	{ $current=$iv_ruleScalarUnitTime.current.getText(); }
	EOF;

// Rule ScalarUnitTime
ruleScalarUnitTime returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=D
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitTimeAccess().getDKeyword_0());
		}
		    |
		kw=H
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitTimeAccess().getHKeyword_1());
		}
		    |
		kw=M
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitTimeAccess().getMKeyword_2());
		}
		    |
		kw=S
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitTimeAccess().getSKeyword_3());
		}
		    |
		kw=Ms
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitTimeAccess().getMsKeyword_4());
		}
		    |
		kw=Us
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitTimeAccess().getUsKeyword_5());
		}
		    |
		kw=Ns
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitTimeAccess().getNsKeyword_6());
		}
	)
;

// Entry rule entryRuleScalarUnitFrequency
entryRuleScalarUnitFrequency returns [String current=null]:
	{ newCompositeNode(grammarAccess.getScalarUnitFrequencyRule()); }
	iv_ruleScalarUnitFrequency=ruleScalarUnitFrequency
	{ $current=$iv_ruleScalarUnitFrequency.current.getText(); }
	EOF;

// Rule ScalarUnitFrequency
ruleScalarUnitFrequency returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Hz
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitFrequencyAccess().getHzKeyword_0());
		}
		    |
		kw=KHz
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitFrequencyAccess().getKHzKeyword_1());
		}
		    |
		kw=MHz
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitFrequencyAccess().getMHzKeyword_2());
		}
		    |
		kw=GHz
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScalarUnitFrequencyAccess().getGHzKeyword_3());
		}
	)
;

// Rule ImplementationModeType
ruleImplementationModeType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Debug
			{
				$current = grammarAccess.getImplementationModeTypeAccess().getDebugModeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getImplementationModeTypeAccess().getDebugModeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Release
			{
				$current = grammarAccess.getImplementationModeTypeAccess().getReleaseModeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getImplementationModeTypeAccess().getReleaseModeEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ResourceReqTypes
ruleResourceReqTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Cpus
			{
				$current = grammarAccess.getResourceReqTypesAccess().getCPUEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getResourceReqTypesAccess().getCPUEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Memory
			{
				$current = grammarAccess.getResourceReqTypesAccess().getMemoryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getResourceReqTypesAccess().getMemoryEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Memory_swap
			{
				$current = grammarAccess.getResourceReqTypesAccess().getMemorySawpEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getResourceReqTypesAccess().getMemorySawpEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Oom_kill_disable
			{
				$current = grammarAccess.getResourceReqTypesAccess().getOomKillDisableEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getResourceReqTypesAccess().getOomKillDisableEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule OperatingSystemTypes
ruleOperatingSystemTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Ubuntu18
			{
				$current = grammarAccess.getOperatingSystemTypesAccess().getUbuntu18EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatingSystemTypesAccess().getUbuntu18EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Ubuntu20
			{
				$current = grammarAccess.getOperatingSystemTypesAccess().getUbuntu20EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatingSystemTypesAccess().getUbuntu20EnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule RosDistro
ruleRosDistro returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Melodic
			{
				$current = grammarAccess.getRosDistroAccess().getMelodicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRosDistroAccess().getMelodicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Noetic
			{
				$current = grammarAccess.getRosDistroAccess().getNoeticEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRosDistroAccess().getNoeticEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Foxy
			{
				$current = grammarAccess.getRosDistroAccess().getFoxyEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRosDistroAccess().getFoxyEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Galactic
			{
				$current = grammarAccess.getRosDistroAccess().getGalacticEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRosDistroAccess().getGalacticEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule ProcessorArchitectureTypes
ruleProcessorArchitectureTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Arm64
			{
				$current = grammarAccess.getProcessorArchitectureTypesAccess().getArm64EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getProcessorArchitectureTypesAccess().getArm64EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=X86
			{
				$current = grammarAccess.getProcessorArchitectureTypesAccess().getX86EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getProcessorArchitectureTypesAccess().getX86EnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ImageTypes
ruleImageTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Docker
			{
				$current = grammarAccess.getImageTypesAccess().getDockerImageEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getImageTypesAccess().getDockerImageEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Snap
			{
				$current = grammarAccess.getImageTypesAccess().getSnapImageEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getImageTypesAccess().getSnapImageEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ImageVersionTypes
ruleImageVersionTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Branch
			{
				$current = grammarAccess.getImageVersionTypesAccess().getBranchEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getImageVersionTypesAccess().getBranchEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Commit
			{
				$current = grammarAccess.getImageVersionTypesAccess().getCommitHashEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getImageVersionTypesAccess().getCommitHashEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Latest
			{
				$current = grammarAccess.getImageVersionTypesAccess().getLatestEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getImageVersionTypesAccess().getLatestEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Release
			{
				$current = grammarAccess.getImageVersionTypesAccess().getReleaseEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getImageVersionTypesAccess().getReleaseEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule RepositoryTypes
ruleRepositoryTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Local
			{
				$current = grammarAccess.getRepositoryTypesAccess().getLocalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRepositoryTypesAccess().getLocalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Remote
			{
				$current = grammarAccess.getRepositoryTypesAccess().getRemoteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRepositoryTypesAccess().getRemoteEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Gitlab
			{
				$current = grammarAccess.getRepositoryTypesAccess().getGitlabEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRepositoryTypesAccess().getGitlabEnumLiteralDeclaration_2());
			}
		)
	)
;
