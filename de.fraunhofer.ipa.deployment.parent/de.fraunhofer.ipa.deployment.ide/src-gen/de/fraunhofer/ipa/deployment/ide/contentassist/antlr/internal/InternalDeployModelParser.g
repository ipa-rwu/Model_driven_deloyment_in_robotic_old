/*
 * generated by Xtext 2.27.0
 */
parser grammar InternalDeployModelParser;

options {
	tokenVocab=InternalDeployModelLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package de.fraunhofer.ipa.deployment.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.fraunhofer.ipa.deployment.services.DeployModelGrammarAccess;

}
@members {
	private DeployModelGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("B", "'B'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("B_1", "'b'");
		tokenNameToValue.put("D", "'d'");
		tokenNameToValue.put("H", "'h'");
		tokenNameToValue.put("M", "'m'");
		tokenNameToValue.put("S", "'s'");
		tokenNameToValue.put("GB", "'GB'");
		tokenNameToValue.put("Gb", "'Gb'");
		tokenNameToValue.put("Hz", "'Hz'");
		tokenNameToValue.put("KB", "'KB'");
		tokenNameToValue.put("Kb", "'Kb'");
		tokenNameToValue.put("MB", "'MB'");
		tokenNameToValue.put("Mb", "'Mb'");
		tokenNameToValue.put("TB", "'TB'");
		tokenNameToValue.put("Tb", "'Tb'");
		tokenNameToValue.put("GB_1", "'gB'");
		tokenNameToValue.put("Gb_1", "'gb'");
		tokenNameToValue.put("KB_1", "'kB'");
		tokenNameToValue.put("Kb_1", "'kb'");
		tokenNameToValue.put("MB_1", "'mB'");
		tokenNameToValue.put("Mb_1", "'mb'");
		tokenNameToValue.put("Ms", "'ms'");
		tokenNameToValue.put("Ns", "'ns'");
		tokenNameToValue.put("Os", "'os'");
		tokenNameToValue.put("TB_1", "'tB'");
		tokenNameToValue.put("Tb_1", "'tb'");
		tokenNameToValue.put("Us", "'us'");
		tokenNameToValue.put("GHz", "'GHz'");
		tokenNameToValue.put("MHz", "'MHz'");
		tokenNameToValue.put("Any", "'any'");
		tokenNameToValue.put("KHz", "'kHz'");
		tokenNameToValue.put("X86", "'x86'");
		tokenNameToValue.put("Cpus", "'cpus'");
		tokenNameToValue.put("Foxy", "'foxy'");
		tokenNameToValue.put("Snap", "'snap'");
		tokenNameToValue.put("Use", "'use:'");
		tokenNameToValue.put("Arm64", "'arm64'");
		tokenNameToValue.put("Debug", "'debug'");
		tokenNameToValue.put("From", "'from:'");
		tokenNameToValue.put("Local", "'local'");
		tokenNameToValue.put("Mode", "'mode:'");
		tokenNameToValue.put("Name", "'name:'");
		tokenNameToValue.put("Path", "'path:'");
		tokenNameToValue.put("Type", "'type:'");
		tokenNameToValue.put("Branch", "'branch'");
		tokenNameToValue.put("Commit", "'commit'");
		tokenNameToValue.put("Docker", "'docker'");
		tokenNameToValue.put("Gitlab", "'gitlab'");
		tokenNameToValue.put("Latest", "'latest'");
		tokenNameToValue.put("Memory", "'memory'");
		tokenNameToValue.put("Noetic", "'noetic'");
		tokenNameToValue.put("Remote", "'remote'");
		tokenNameToValue.put("Types", "'types:'");
		tokenNameToValue.put("Value", "'value:'");
		tokenNameToValue.put("Branch_1", "'branch:'");
		tokenNameToValue.put("Import", "'import:'");
		tokenNameToValue.put("Melodic", "'melodic'");
		tokenNameToValue.put("Release", "'release'");
		tokenNameToValue.put("Galactic", "'galactic'");
		tokenNameToValue.put("KeyLink", "'keyLink:'");
		tokenNameToValue.put("Location", "'location'");
		tokenNameToValue.put("Ubuntu18", "'ubuntu18'");
		tokenNameToValue.put("Ubuntu20", "'ubuntu20'");
		tokenNameToValue.put("DependOn", "'dependOn:'");
		tokenNameToValue.put("Ros_distro", "'ros_distro'");
		tokenNameToValue.put("Memory_swap", "'memory_swap'");
		tokenNameToValue.put("Description", "'description:'");
		tokenNameToValue.put("UpdateRosDep", "'updateRosDep:'");
		tokenNameToValue.put("ImageVersions", "'imageVersions:'");
		tokenNameToValue.put("StartCommands", "'startCommands:'");
		tokenNameToValue.put("AptRepositories", "'aptRepositories'");
		tokenNameToValue.put("RepositoryPath", "'repositoryPath:'");
		tokenNameToValue.put("Oom_kill_disable", "'oom_kill_disable'");
		tokenNameToValue.put("BuildRequirements", "'buildRequirements'");
		tokenNameToValue.put("ImageDescription", "'imageDescription:'");
		tokenNameToValue.put("PackageDescription", "'PackageDescription'");
		tokenNameToValue.put("DeployRequirements", "'deployRequirements'");
		tokenNameToValue.put("ImplementsRosModel", "'implementsRosModel:'");
		tokenNameToValue.put("ResourceRequirements", "'resourceRequirements'");
		tokenNameToValue.put("Processor_architecture", "'processor_architecture'");
		tokenNameToValue.put("RepositoryDescription", "'repositoryDescription:'");
		tokenNameToValue.put("StackImplementationDescription", "'StackImplementationDescription'");
		tokenNameToValue.put("ImplementationArtifactDescription", "'ImplementationArtifactDescription'");
		tokenNameToValue.put("MonolithicImplementationDescription", "'MonolithicImplementationDescription:'");
	}

	public void setGrammarAccess(DeployModelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleYaml
entryRuleYaml
:
{ before(grammarAccess.getYamlRule()); }
	 ruleYaml
{ after(grammarAccess.getYamlRule()); } 
	 EOF 
;

// Rule Yaml
ruleYaml 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYamlAccess().getGroup()); }
		(rule__Yaml__Group__0)
		{ after(grammarAccess.getYamlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleYamlContent
entryRuleYamlContent
:
{ before(grammarAccess.getYamlContentRule()); }
	 ruleYamlContent
{ after(grammarAccess.getYamlContentRule()); } 
	 EOF 
;

// Rule YamlContent
ruleYamlContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYamlContentAccess().getRootContentAssignment()); }
		(rule__YamlContent__RootContentAssignment)
		{ after(grammarAccess.getYamlContentAccess().getRootContentAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonolithicImplementationDescription
entryRuleMonolithicImplementationDescription
:
{ before(grammarAccess.getMonolithicImplementationDescriptionRule()); }
	 ruleMonolithicImplementationDescription
{ after(grammarAccess.getMonolithicImplementationDescriptionRule()); } 
	 EOF 
;

// Rule MonolithicImplementationDescription
ruleMonolithicImplementationDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getGroup()); }
		(rule__MonolithicImplementationDescription__Group__0)
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBranchType
entryRuleBranchType
:
{ before(grammarAccess.getBranchTypeRule()); }
	 ruleBranchType
{ after(grammarAccess.getBranchTypeRule()); } 
	 EOF 
;

// Rule BranchType
ruleBranchType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBranchTypeAccess().getAlternatives()); }
		(rule__BranchType__Alternatives)
		{ after(grammarAccess.getBranchTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNewImplementationArtifact
entryRuleNewImplementationArtifact
:
{ before(grammarAccess.getNewImplementationArtifactRule()); }
	 ruleNewImplementationArtifact
{ after(grammarAccess.getNewImplementationArtifactRule()); } 
	 EOF 
;

// Rule NewImplementationArtifact
ruleNewImplementationArtifact 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getGroup()); }
		(rule__NewImplementationArtifact__Group__0)
		{ after(grammarAccess.getNewImplementationArtifactAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplementationArtifactDescription
entryRuleImplementationArtifactDescription
:
{ before(grammarAccess.getImplementationArtifactDescriptionRule()); }
	 ruleImplementationArtifactDescription
{ after(grammarAccess.getImplementationArtifactDescriptionRule()); } 
	 EOF 
;

// Rule ImplementationArtifactDescription
ruleImplementationArtifactDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getGroup()); }
		(rule__ImplementationArtifactDescription__Group__0)
		{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReuseImplementationArtifact
entryRuleReuseImplementationArtifact
:
{ before(grammarAccess.getReuseImplementationArtifactRule()); }
	 ruleReuseImplementationArtifact
{ after(grammarAccess.getReuseImplementationArtifactRule()); } 
	 EOF 
;

// Rule ReuseImplementationArtifact
ruleReuseImplementationArtifact 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReuseImplementationArtifactAccess().getGroup()); }
		(rule__ReuseImplementationArtifact__Group__0)
		{ after(grammarAccess.getReuseImplementationArtifactAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplementationArtifactAbstract
entryRuleImplementationArtifactAbstract
:
{ before(grammarAccess.getImplementationArtifactAbstractRule()); }
	 ruleImplementationArtifactAbstract
{ after(grammarAccess.getImplementationArtifactAbstractRule()); } 
	 EOF 
;

// Rule ImplementationArtifactAbstract
ruleImplementationArtifactAbstract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplementationArtifactAbstractAccess().getGroup()); }
		(rule__ImplementationArtifactAbstract__Group__0)
		{ after(grammarAccess.getImplementationArtifactAbstractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeploymentRequirements
entryRuleDeploymentRequirements
:
{ before(grammarAccess.getDeploymentRequirementsRule()); }
	 ruleDeploymentRequirements
{ after(grammarAccess.getDeploymentRequirementsRule()); } 
	 EOF 
;

// Rule DeploymentRequirements
ruleDeploymentRequirements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeploymentRequirementsAccess().getGroup()); }
		(rule__DeploymentRequirements__Group__0)
		{ after(grammarAccess.getDeploymentRequirementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResourceRequirements
entryRuleResourceRequirements
:
{ before(grammarAccess.getResourceRequirementsRule()); }
	 ruleResourceRequirements
{ after(grammarAccess.getResourceRequirementsRule()); } 
	 EOF 
;

// Rule ResourceRequirements
ruleResourceRequirements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceRequirementsAccess().getGroup()); }
		(rule__ResourceRequirements__Group__0)
		{ after(grammarAccess.getResourceRequirementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResourceRequirement
entryRuleResourceRequirement
:
{ before(grammarAccess.getResourceRequirementRule()); }
	 ruleResourceRequirement
{ after(grammarAccess.getResourceRequirementRule()); } 
	 EOF 
;

// Rule ResourceRequirement
ruleResourceRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceRequirementAccess().getGroup()); }
		(rule__ResourceRequirement__Group__0)
		{ after(grammarAccess.getResourceRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReqOperatingSystem
entryRuleReqOperatingSystem
:
{ before(grammarAccess.getReqOperatingSystemRule()); }
	 ruleReqOperatingSystem
{ after(grammarAccess.getReqOperatingSystemRule()); } 
	 EOF 
;

// Rule ReqOperatingSystem
ruleReqOperatingSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReqOperatingSystemAccess().getGroup()); }
		(rule__ReqOperatingSystem__Group__0)
		{ after(grammarAccess.getReqOperatingSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperatingSystemTypeList
entryRuleOperatingSystemTypeList
:
{ before(grammarAccess.getOperatingSystemTypeListRule()); }
	 ruleOperatingSystemTypeList
{ after(grammarAccess.getOperatingSystemTypeListRule()); } 
	 EOF 
;

// Rule OperatingSystemTypeList
ruleOperatingSystemTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatingSystemTypeListAccess().getGroup()); }
		(rule__OperatingSystemTypeList__Group__0)
		{ after(grammarAccess.getOperatingSystemTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReqProcessorArchitecture
entryRuleReqProcessorArchitecture
:
{ before(grammarAccess.getReqProcessorArchitectureRule()); }
	 ruleReqProcessorArchitecture
{ after(grammarAccess.getReqProcessorArchitectureRule()); } 
	 EOF 
;

// Rule ReqProcessorArchitecture
ruleReqProcessorArchitecture 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReqProcessorArchitectureAccess().getGroup()); }
		(rule__ReqProcessorArchitecture__Group__0)
		{ after(grammarAccess.getReqProcessorArchitectureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessorArchitectureTypeList
entryRuleProcessorArchitectureTypeList
:
{ before(grammarAccess.getProcessorArchitectureTypeListRule()); }
	 ruleProcessorArchitectureTypeList
{ after(grammarAccess.getProcessorArchitectureTypeListRule()); } 
	 EOF 
;

// Rule ProcessorArchitectureTypeList
ruleProcessorArchitectureTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup()); }
		(rule__ProcessorArchitectureTypeList__Group__0)
		{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReqRosDistro
entryRuleReqRosDistro
:
{ before(grammarAccess.getReqRosDistroRule()); }
	 ruleReqRosDistro
{ after(grammarAccess.getReqRosDistroRule()); } 
	 EOF 
;

// Rule ReqRosDistro
ruleReqRosDistro 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReqRosDistroAccess().getGroup()); }
		(rule__ReqRosDistro__Group__0)
		{ after(grammarAccess.getReqRosDistroAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRosDistroList
entryRuleRosDistroList
:
{ before(grammarAccess.getRosDistroListRule()); }
	 ruleRosDistroList
{ after(grammarAccess.getRosDistroListRule()); } 
	 EOF 
;

// Rule RosDistroList
ruleRosDistroList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRosDistroListAccess().getGroup()); }
		(rule__RosDistroList__Group__0)
		{ after(grammarAccess.getRosDistroListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuildRequirements
entryRuleBuildRequirements
:
{ before(grammarAccess.getBuildRequirementsRule()); }
	 ruleBuildRequirements
{ after(grammarAccess.getBuildRequirementsRule()); } 
	 EOF 
;

// Rule BuildRequirements
ruleBuildRequirements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuildRequirementsAccess().getGroup()); }
		(rule__BuildRequirements__Group__0)
		{ after(grammarAccess.getBuildRequirementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReqBuildDependencies
entryRuleReqBuildDependencies
:
{ before(grammarAccess.getReqBuildDependenciesRule()); }
	 ruleReqBuildDependencies
{ after(grammarAccess.getReqBuildDependenciesRule()); } 
	 EOF 
;

// Rule ReqBuildDependencies
ruleReqBuildDependencies 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReqBuildDependenciesAccess().getGroup()); }
		(rule__ReqBuildDependencies__Group__0)
		{ after(grammarAccess.getReqBuildDependenciesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getAlternatives()); }
		(rule__Dependency__Alternatives)
		{ after(grammarAccess.getDependencyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalPackage
entryRuleLocalPackage
:
{ before(grammarAccess.getLocalPackageRule()); }
	 ruleLocalPackage
{ after(grammarAccess.getLocalPackageRule()); } 
	 EOF 
;

// Rule LocalPackage
ruleLocalPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalPackageAccess().getGroup()); }
		(rule__LocalPackage__Group__0)
		{ after(grammarAccess.getLocalPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGitPackage
entryRuleGitPackage
:
{ before(grammarAccess.getGitPackageRule()); }
	 ruleGitPackage
{ after(grammarAccess.getGitPackageRule()); } 
	 EOF 
;

// Rule GitPackage
ruleGitPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGitPackageAccess().getGroup()); }
		(rule__GitPackage__Group__0)
		{ after(grammarAccess.getGitPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReqDependencyRepositories
entryRuleReqDependencyRepositories
:
{ before(grammarAccess.getReqDependencyRepositoriesRule()); }
	 ruleReqDependencyRepositories
{ after(grammarAccess.getReqDependencyRepositoriesRule()); } 
	 EOF 
;

// Rule ReqDependencyRepositories
ruleReqDependencyRepositories 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReqDependencyRepositoriesAccess().getGroup()); }
		(rule__ReqDependencyRepositories__Group__0)
		{ after(grammarAccess.getReqDependencyRepositoriesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAptRepositoryInstance
entryRuleAptRepositoryInstance
:
{ before(grammarAccess.getAptRepositoryInstanceRule()); }
	 ruleAptRepositoryInstance
{ after(grammarAccess.getAptRepositoryInstanceRule()); } 
	 EOF 
;

// Rule AptRepositoryInstance
ruleAptRepositoryInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAptRepositoryInstanceAccess().getGroup()); }
		(rule__AptRepositoryInstance__Group__0)
		{ after(grammarAccess.getAptRepositoryInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartCommands
entryRuleStartCommands
:
{ before(grammarAccess.getStartCommandsRule()); }
	 ruleStartCommands
{ after(grammarAccess.getStartCommandsRule()); } 
	 EOF 
;

// Rule StartCommands
ruleStartCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartCommandsAccess().getGroup()); }
		(rule__StartCommands__Group__0)
		{ after(grammarAccess.getStartCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListStartCommands
entryRuleListStartCommands
:
{ before(grammarAccess.getListStartCommandsRule()); }
	 ruleListStartCommands
{ after(grammarAccess.getListStartCommandsRule()); } 
	 EOF 
;

// Rule ListStartCommands
ruleListStartCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListStartCommandsAccess().getGroup()); }
		(rule__ListStartCommands__Group__0)
		{ after(grammarAccess.getListStartCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStackImplementationDescription
entryRuleStackImplementationDescription
:
{ before(grammarAccess.getStackImplementationDescriptionRule()); }
	 ruleStackImplementationDescription
{ after(grammarAccess.getStackImplementationDescriptionRule()); } 
	 EOF 
;

// Rule StackImplementationDescription
ruleStackImplementationDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStackImplementationDescriptionAccess().getGroup()); }
		(rule__StackImplementationDescription__Group__0)
		{ after(grammarAccess.getStackImplementationDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDescription
entryRulePackageDescription
:
{ before(grammarAccess.getPackageDescriptionRule()); }
	 rulePackageDescription
{ after(grammarAccess.getPackageDescriptionRule()); } 
	 EOF 
;

// Rule PackageDescription
rulePackageDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDescriptionAccess().getGroup()); }
		(rule__PackageDescription__Group__0)
		{ after(grammarAccess.getPackageDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImageDescription
entryRuleImageDescription
:
{ before(grammarAccess.getImageDescriptionRule()); }
	 ruleImageDescription
{ after(grammarAccess.getImageDescriptionRule()); } 
	 EOF 
;

// Rule ImageDescription
ruleImageDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageDescriptionAccess().getGroup()); }
		(rule__ImageDescription__Group__0)
		{ after(grammarAccess.getImageDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImageTypeList
entryRuleImageTypeList
:
{ before(grammarAccess.getImageTypeListRule()); }
	 ruleImageTypeList
{ after(grammarAccess.getImageTypeListRule()); } 
	 EOF 
;

// Rule ImageTypeList
ruleImageTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageTypeListAccess().getGroup()); }
		(rule__ImageTypeList__Group__0)
		{ after(grammarAccess.getImageTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImageVersionList
entryRuleImageVersionList
:
{ before(grammarAccess.getImageVersionListRule()); }
	 ruleImageVersionList
{ after(grammarAccess.getImageVersionListRule()); } 
	 EOF 
;

// Rule ImageVersionList
ruleImageVersionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageVersionListAccess().getGroup()); }
		(rule__ImageVersionList__Group__0)
		{ after(grammarAccess.getImageVersionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepositoryDescription
entryRuleRepositoryDescription
:
{ before(grammarAccess.getRepositoryDescriptionRule()); }
	 ruleRepositoryDescription
{ after(grammarAccess.getRepositoryDescriptionRule()); } 
	 EOF 
;

// Rule RepositoryDescription
ruleRepositoryDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getRepositoryDescriptionAccess().getSpecAssignment()); }
			(rule__RepositoryDescription__SpecAssignment)
			{ after(grammarAccess.getRepositoryDescriptionAccess().getSpecAssignment()); }
		)
		(
			{ before(grammarAccess.getRepositoryDescriptionAccess().getSpecAssignment()); }
			(rule__RepositoryDescription__SpecAssignment)*
			{ after(grammarAccess.getRepositoryDescriptionAccess().getSpecAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepositorySpec
entryRuleRepositorySpec
:
{ before(grammarAccess.getRepositorySpecRule()); }
	 ruleRepositorySpec
{ after(grammarAccess.getRepositorySpecRule()); } 
	 EOF 
;

// Rule RepositorySpec
ruleRepositorySpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepositorySpecAccess().getGroup()); }
		(rule__RepositorySpec__Group__0)
		{ after(grammarAccess.getRepositorySpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepository
entryRuleRepository
:
{ before(grammarAccess.getRepositoryRule()); }
	 ruleRepository
{ after(grammarAccess.getRepositoryRule()); } 
	 EOF 
;

// Rule Repository
ruleRepository 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepositoryAccess().getGroup()); }
		(rule__Repository__Group__0)
		{ after(grammarAccess.getRepositoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreListElement
entryRulePreListElement
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getPreListElementRule()); }
	 rulePreListElement
{ after(grammarAccess.getPreListElementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PreListElement
rulePreListElement 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreListElementAccess().getHyphenMinusKeyword()); }
		HyphenMinus
		{ after(grammarAccess.getPreListElementAccess().getHyphenMinusKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleScalarNumber
entryRuleScalarNumber
:
{ before(grammarAccess.getScalarNumberRule()); }
	 ruleScalarNumber
{ after(grammarAccess.getScalarNumberRule()); } 
	 EOF 
;

// Rule ScalarNumber
ruleScalarNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarNumberAccess().getGroup()); }
		(rule__ScalarNumber__Group__0)
		{ after(grammarAccess.getScalarNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getAlternatives()); }
		(rule__Number__Alternatives)
		{ after(grammarAccess.getNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnit
entryRuleUnit
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAccess().getAlternatives()); }
		(rule__Unit__Alternatives)
		{ after(grammarAccess.getUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalarUnitSize
entryRuleScalarUnitSize
:
{ before(grammarAccess.getScalarUnitSizeRule()); }
	 ruleScalarUnitSize
{ after(grammarAccess.getScalarUnitSizeRule()); } 
	 EOF 
;

// Rule ScalarUnitSize
ruleScalarUnitSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getAlternatives()); }
		(rule__ScalarUnitSize__Alternatives)
		{ after(grammarAccess.getScalarUnitSizeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalarUnitTime
entryRuleScalarUnitTime
:
{ before(grammarAccess.getScalarUnitTimeRule()); }
	 ruleScalarUnitTime
{ after(grammarAccess.getScalarUnitTimeRule()); } 
	 EOF 
;

// Rule ScalarUnitTime
ruleScalarUnitTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getAlternatives()); }
		(rule__ScalarUnitTime__Alternatives)
		{ after(grammarAccess.getScalarUnitTimeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalarUnitFrequency
entryRuleScalarUnitFrequency
:
{ before(grammarAccess.getScalarUnitFrequencyRule()); }
	 ruleScalarUnitFrequency
{ after(grammarAccess.getScalarUnitFrequencyRule()); } 
	 EOF 
;

// Rule ScalarUnitFrequency
ruleScalarUnitFrequency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarUnitFrequencyAccess().getAlternatives()); }
		(rule__ScalarUnitFrequency__Alternatives)
		{ after(grammarAccess.getScalarUnitFrequencyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ImplementationModeType
ruleImplementationModeType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationModeTypeAccess().getAlternatives()); }
		(rule__ImplementationModeType__Alternatives)
		{ after(grammarAccess.getImplementationModeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ResourceReqTypes
ruleResourceReqTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceReqTypesAccess().getAlternatives()); }
		(rule__ResourceReqTypes__Alternatives)
		{ after(grammarAccess.getResourceReqTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OperatingSystemTypes
ruleOperatingSystemTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatingSystemTypesAccess().getAlternatives()); }
		(rule__OperatingSystemTypes__Alternatives)
		{ after(grammarAccess.getOperatingSystemTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RosDistro
ruleRosDistro
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosDistroAccess().getAlternatives()); }
		(rule__RosDistro__Alternatives)
		{ after(grammarAccess.getRosDistroAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ProcessorArchitectureTypes
ruleProcessorArchitectureTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessorArchitectureTypesAccess().getAlternatives()); }
		(rule__ProcessorArchitectureTypes__Alternatives)
		{ after(grammarAccess.getProcessorArchitectureTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ImageTypes
ruleImageTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageTypesAccess().getAlternatives()); }
		(rule__ImageTypes__Alternatives)
		{ after(grammarAccess.getImageTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ImageVersionTypes
ruleImageVersionTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageVersionTypesAccess().getAlternatives()); }
		(rule__ImageVersionTypes__Alternatives)
		{ after(grammarAccess.getImageVersionTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RepositoryTypes
ruleRepositoryTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryTypesAccess().getAlternatives()); }
		(rule__RepositoryTypes__Alternatives)
		{ after(grammarAccess.getRepositoryTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__YamlContent__RootContentAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYamlContentAccess().getRootContentMonolithicImplementationDescriptionParserRuleCall_0_0()); }
		ruleMonolithicImplementationDescription
		{ after(grammarAccess.getYamlContentAccess().getRootContentMonolithicImplementationDescriptionParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getYamlContentAccess().getRootContentStackImplementationDescriptionParserRuleCall_0_1()); }
		ruleStackImplementationDescription
		{ after(grammarAccess.getYamlContentAccess().getRootContentStackImplementationDescriptionParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getYamlContentAccess().getRootContentPackageDescriptionParserRuleCall_0_2()); }
		rulePackageDescription
		{ after(grammarAccess.getYamlContentAccess().getRootContentPackageDescriptionParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBranchTypeAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getBranchTypeAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBranchTypeAccess().getAnyKeyword_1()); }
		Any
		{ after(grammarAccess.getBranchTypeAccess().getAnyKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__NameAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getNameLOCALPATHTerminalRuleCall_2_0_0()); }
		RULE_LOCALPATH
		{ after(grammarAccess.getNewImplementationArtifactAccess().getNameLOCALPATHTerminalRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getNameURLTerminalRuleCall_2_0_1()); }
		RULE_URL
		{ after(grammarAccess.getNewImplementationArtifactAccess().getNameURLTerminalRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__ImplAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getImplNewImplementationArtifactParserRuleCall_3_0_0()); }
		ruleNewImplementationArtifact
		{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getImplNewImplementationArtifactParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getImplReuseImplementationArtifactParserRuleCall_3_0_1()); }
		ruleReuseImplementationArtifact
		{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getImplReuseImplementationArtifactParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getLocalPackageParserRuleCall_0()); }
		ruleLocalPackage
		{ after(grammarAccess.getDependencyAccess().getLocalPackageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDependencyAccess().getGitPackageParserRuleCall_1()); }
		ruleGitPackage
		{ after(grammarAccess.getDependencyAccess().getGitPackageParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getFLOATTerminalRuleCall_1()); }
		RULE_FLOAT
		{ after(grammarAccess.getNumberAccess().getFLOATTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getScalarUnitSizeParserRuleCall_0()); }
		ruleScalarUnitSize
		{ after(grammarAccess.getUnitAccess().getScalarUnitSizeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getScalarUnitTimeParserRuleCall_1()); }
		ruleScalarUnitTime
		{ after(grammarAccess.getUnitAccess().getScalarUnitTimeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getScalarUnitFrequencyParserRuleCall_2()); }
		ruleScalarUnitFrequency
		{ after(grammarAccess.getUnitAccess().getScalarUnitFrequencyParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarUnitSize__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getBKeyword_0()); }
		B
		{ after(grammarAccess.getScalarUnitSizeAccess().getBKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getGroup_1()); }
		(rule__ScalarUnitSize__Group_1__0)
		{ after(grammarAccess.getScalarUnitSizeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getKbKeyword_2()); }
		Kb_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getKbKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getKBKeyword_3()); }
		KB_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getKBKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getKbKeyword_4()); }
		Kb
		{ after(grammarAccess.getScalarUnitSizeAccess().getKbKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getMBKeyword_5()); }
		MB
		{ after(grammarAccess.getScalarUnitSizeAccess().getMBKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getMbKeyword_6()); }
		Mb_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getMbKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getMBKeyword_7()); }
		MB_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getMBKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getMbKeyword_8()); }
		Mb
		{ after(grammarAccess.getScalarUnitSizeAccess().getMbKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getGBKeyword_9()); }
		GB
		{ after(grammarAccess.getScalarUnitSizeAccess().getGBKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getGbKeyword_10()); }
		Gb_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getGbKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getGbKeyword_11()); }
		Gb
		{ after(grammarAccess.getScalarUnitSizeAccess().getGbKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getGBKeyword_12()); }
		GB_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getGBKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getTBKeyword_13()); }
		TB
		{ after(grammarAccess.getScalarUnitSizeAccess().getTBKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getTbKeyword_14()); }
		Tb_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getTbKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getTbKeyword_15()); }
		Tb
		{ after(grammarAccess.getScalarUnitSizeAccess().getTbKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitSizeAccess().getTBKeyword_16()); }
		TB_1
		{ after(grammarAccess.getScalarUnitSizeAccess().getTBKeyword_16()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarUnitTime__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getDKeyword_0()); }
		D
		{ after(grammarAccess.getScalarUnitTimeAccess().getDKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getHKeyword_1()); }
		H
		{ after(grammarAccess.getScalarUnitTimeAccess().getHKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getMKeyword_2()); }
		M
		{ after(grammarAccess.getScalarUnitTimeAccess().getMKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getSKeyword_3()); }
		S
		{ after(grammarAccess.getScalarUnitTimeAccess().getSKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getMsKeyword_4()); }
		Ms
		{ after(grammarAccess.getScalarUnitTimeAccess().getMsKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getUsKeyword_5()); }
		Us
		{ after(grammarAccess.getScalarUnitTimeAccess().getUsKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitTimeAccess().getNsKeyword_6()); }
		Ns
		{ after(grammarAccess.getScalarUnitTimeAccess().getNsKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarUnitFrequency__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarUnitFrequencyAccess().getHzKeyword_0()); }
		Hz
		{ after(grammarAccess.getScalarUnitFrequencyAccess().getHzKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitFrequencyAccess().getKHzKeyword_1()); }
		KHz
		{ after(grammarAccess.getScalarUnitFrequencyAccess().getKHzKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitFrequencyAccess().getMHzKeyword_2()); }
		MHz
		{ after(grammarAccess.getScalarUnitFrequencyAccess().getMHzKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getScalarUnitFrequencyAccess().getGHzKeyword_3()); }
		GHz
		{ after(grammarAccess.getScalarUnitFrequencyAccess().getGHzKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationModeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationModeTypeAccess().getDebugModeEnumLiteralDeclaration_0()); }
		(Debug)
		{ after(grammarAccess.getImplementationModeTypeAccess().getDebugModeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationModeTypeAccess().getReleaseModeEnumLiteralDeclaration_1()); }
		(Release)
		{ after(grammarAccess.getImplementationModeTypeAccess().getReleaseModeEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceReqTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceReqTypesAccess().getCPUEnumLiteralDeclaration_0()); }
		(Cpus)
		{ after(grammarAccess.getResourceReqTypesAccess().getCPUEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getResourceReqTypesAccess().getMemoryEnumLiteralDeclaration_1()); }
		(Memory)
		{ after(grammarAccess.getResourceReqTypesAccess().getMemoryEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getResourceReqTypesAccess().getMemorySawpEnumLiteralDeclaration_2()); }
		(Memory_swap)
		{ after(grammarAccess.getResourceReqTypesAccess().getMemorySawpEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getResourceReqTypesAccess().getOomKillDisableEnumLiteralDeclaration_3()); }
		(Oom_kill_disable)
		{ after(grammarAccess.getResourceReqTypesAccess().getOomKillDisableEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatingSystemTypesAccess().getUbuntu18EnumLiteralDeclaration_0()); }
		(Ubuntu18)
		{ after(grammarAccess.getOperatingSystemTypesAccess().getUbuntu18EnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatingSystemTypesAccess().getUbuntu20EnumLiteralDeclaration_1()); }
		(Ubuntu20)
		{ after(grammarAccess.getOperatingSystemTypesAccess().getUbuntu20EnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistro__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosDistroAccess().getMelodicEnumLiteralDeclaration_0()); }
		(Melodic)
		{ after(grammarAccess.getRosDistroAccess().getMelodicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRosDistroAccess().getNoeticEnumLiteralDeclaration_1()); }
		(Noetic)
		{ after(grammarAccess.getRosDistroAccess().getNoeticEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRosDistroAccess().getFoxyEnumLiteralDeclaration_2()); }
		(Foxy)
		{ after(grammarAccess.getRosDistroAccess().getFoxyEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRosDistroAccess().getGalacticEnumLiteralDeclaration_3()); }
		(Galactic)
		{ after(grammarAccess.getRosDistroAccess().getGalacticEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessorArchitectureTypesAccess().getArm64EnumLiteralDeclaration_0()); }
		(Arm64)
		{ after(grammarAccess.getProcessorArchitectureTypesAccess().getArm64EnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessorArchitectureTypesAccess().getX86EnumLiteralDeclaration_1()); }
		(X86)
		{ after(grammarAccess.getProcessorArchitectureTypesAccess().getX86EnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageTypesAccess().getDockerImageEnumLiteralDeclaration_0()); }
		(Docker)
		{ after(grammarAccess.getImageTypesAccess().getDockerImageEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getImageTypesAccess().getSnapImageEnumLiteralDeclaration_1()); }
		(Snap)
		{ after(grammarAccess.getImageTypesAccess().getSnapImageEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageVersionTypesAccess().getBranchEnumLiteralDeclaration_0()); }
		(Branch)
		{ after(grammarAccess.getImageVersionTypesAccess().getBranchEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getImageVersionTypesAccess().getCommitHashEnumLiteralDeclaration_1()); }
		(Commit)
		{ after(grammarAccess.getImageVersionTypesAccess().getCommitHashEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getImageVersionTypesAccess().getLatestEnumLiteralDeclaration_2()); }
		(Latest)
		{ after(grammarAccess.getImageVersionTypesAccess().getLatestEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getImageVersionTypesAccess().getReleaseEnumLiteralDeclaration_3()); }
		(Release)
		{ after(grammarAccess.getImageVersionTypesAccess().getReleaseEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryTypesAccess().getLocalEnumLiteralDeclaration_0()); }
		(Local)
		{ after(grammarAccess.getRepositoryTypesAccess().getLocalEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRepositoryTypesAccess().getRemoteEnumLiteralDeclaration_1()); }
		(Remote)
		{ after(grammarAccess.getRepositoryTypesAccess().getRemoteEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRepositoryTypesAccess().getGitlabEnumLiteralDeclaration_2()); }
		(Gitlab)
		{ after(grammarAccess.getRepositoryTypesAccess().getGitlabEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Yaml__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Yaml__Group__0__Impl
	rule__Yaml__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Yaml__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYamlAccess().getYamlAction_0()); }
	()
	{ after(grammarAccess.getYamlAccess().getYamlAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Yaml__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Yaml__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Yaml__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYamlAccess().getContentAssignment_1()); }
	(rule__Yaml__ContentAssignment_1)*
	{ after(grammarAccess.getYamlAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonolithicImplementationDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__0__Impl
	rule__MonolithicImplementationDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeAssignment_0()); }
	(rule__MonolithicImplementationDescription__TypeAssignment_0)
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__1__Impl
	rule__MonolithicImplementationDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getINDENTTerminalRuleCall_1()); }
	RULE_INDENT
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getINDENTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__2__Impl
	rule__MonolithicImplementationDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameKeyword_2()); }
	Name
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__3__Impl
	rule__MonolithicImplementationDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameAssignment_3()); }
	(rule__MonolithicImplementationDescription__NameAssignment_3)
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__4__Impl
	rule__MonolithicImplementationDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getGroup_4()); }
	(rule__MonolithicImplementationDescription__Group_4__0)?
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__5__Impl
	rule__MonolithicImplementationDescription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionKeyword_5()); }
	Description
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__6__Impl
	rule__MonolithicImplementationDescription__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionAssignment_6()); }
	(rule__MonolithicImplementationDescription__DescriptionAssignment_6)
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__7__Impl
	rule__MonolithicImplementationDescription__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeKeyword_7()); }
	Mode
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__8__Impl
	rule__MonolithicImplementationDescription__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeAssignment_8()); }
	(rule__MonolithicImplementationDescription__ModeAssignment_8)
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__9__Impl
	rule__MonolithicImplementationDescription__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchKeyword_9()); }
	Branch_1
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__10__Impl
	rule__MonolithicImplementationDescription__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchAssignment_10()); }
	(rule__MonolithicImplementationDescription__BranchAssignment_10)
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__11__Impl
	rule__MonolithicImplementationDescription__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplAssignment_11()); }
	(rule__MonolithicImplementationDescription__ImplAssignment_11)?
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getDEDENTTerminalRuleCall_12()); }
	RULE_DEDENT
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getDEDENTTerminalRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonolithicImplementationDescription__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group_4__0__Impl
	rule__MonolithicImplementationDescription__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplementsRosModelKeyword_4_0()); }
	ImplementsRosModel
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplementsRosModelKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonolithicImplementationDescription__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getImpRosmodelAssignment_4_1()); }
	(rule__MonolithicImplementationDescription__ImpRosmodelAssignment_4_1)
	{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getImpRosmodelAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	FullStop
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewImplementationArtifact__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewImplementationArtifact__Group__0__Impl
	rule__NewImplementationArtifact__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewImplementationArtifactAccess().getLocationKeyword_0()); }
	Location
	{ after(grammarAccess.getNewImplementationArtifactAccess().getLocationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewImplementationArtifact__Group__1__Impl
	rule__NewImplementationArtifact__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewImplementationArtifactAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getNewImplementationArtifactAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewImplementationArtifact__Group__2__Impl
	rule__NewImplementationArtifact__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewImplementationArtifactAccess().getNameAssignment_2()); }
	(rule__NewImplementationArtifact__NameAssignment_2)
	{ after(grammarAccess.getNewImplementationArtifactAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewImplementationArtifact__Group__3__Impl
	rule__NewImplementationArtifact__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewImplementationArtifactAccess().getDeployRequirementsAssignment_3()); }
	(rule__NewImplementationArtifact__DeployRequirementsAssignment_3)
	{ after(grammarAccess.getNewImplementationArtifactAccess().getDeployRequirementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewImplementationArtifact__Group__4__Impl
	rule__NewImplementationArtifact__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewImplementationArtifactAccess().getResourceRequirementsAssignment_4()); }
	(rule__NewImplementationArtifact__ResourceRequirementsAssignment_4)?
	{ after(grammarAccess.getNewImplementationArtifactAccess().getResourceRequirementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewImplementationArtifact__Group__5__Impl
	rule__NewImplementationArtifact__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewImplementationArtifactAccess().getBuildRequirementsAssignment_5()); }
	(rule__NewImplementationArtifact__BuildRequirementsAssignment_5)?
	{ after(grammarAccess.getNewImplementationArtifactAccess().getBuildRequirementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewImplementationArtifact__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewImplementationArtifactAccess().getStartCommandsAssignment_6()); }
	(rule__NewImplementationArtifact__StartCommandsAssignment_6)
	{ after(grammarAccess.getNewImplementationArtifactAccess().getStartCommandsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplementationArtifactDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactDescription__Group__0__Impl
	rule__ImplementationArtifactDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getTypeAssignment_0()); }
	(rule__ImplementationArtifactDescription__TypeAssignment_0)
	{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactDescription__Group__1__Impl
	rule__ImplementationArtifactDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactDescription__Group__2__Impl
	rule__ImplementationArtifactDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getINDENTTerminalRuleCall_2()); }
	RULE_INDENT
	{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getINDENTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactDescription__Group__3__Impl
	rule__ImplementationArtifactDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getImplAssignment_3()); }
	(rule__ImplementationArtifactDescription__ImplAssignment_3)
	{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getImplAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactDescription__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getDEDENTTerminalRuleCall_4()); }
	RULE_DEDENT
	{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getDEDENTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReuseImplementationArtifact__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReuseImplementationArtifact__Group__0__Impl
	rule__ReuseImplementationArtifact__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReuseImplementationArtifact__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReuseImplementationArtifactAccess().getUseKeyword_0()); }
	Use
	{ after(grammarAccess.getReuseImplementationArtifactAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReuseImplementationArtifact__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReuseImplementationArtifact__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReuseImplementationArtifact__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getReuseImplementationArtifactAccess().getListsAssignment_1()); }
		(rule__ReuseImplementationArtifact__ListsAssignment_1)
		{ after(grammarAccess.getReuseImplementationArtifactAccess().getListsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getReuseImplementationArtifactAccess().getListsAssignment_1()); }
		(rule__ReuseImplementationArtifact__ListsAssignment_1)*
		{ after(grammarAccess.getReuseImplementationArtifactAccess().getListsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplementationArtifactAbstract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__0__Impl
	rule__ImplementationArtifactAbstract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__1__Impl
	rule__ImplementationArtifactAbstract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getImportKeyword_1()); }
	Import
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getImportKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__2__Impl
	rule__ImplementationArtifactAbstract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getImportedNamespaceAssignment_2()); }
	(rule__ImplementationArtifactAbstract__ImportedNamespaceAssignment_2)
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getImportedNamespaceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__3__Impl
	rule__ImplementationArtifactAbstract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__4__Impl
	rule__ImplementationArtifactAbstract__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getNameKeyword_4()); }
	Name
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getNameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__5__Impl
	rule__ImplementationArtifactAbstract__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getNameAssignment_5()); }
	(rule__ImplementationArtifactAbstract__NameAssignment_5)
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__6__Impl
	rule__ImplementationArtifactAbstract__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getStartCommandsAssignment_6()); }
	(rule__ImplementationArtifactAbstract__StartCommandsAssignment_6)
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getStartCommandsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationArtifactAbstract__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationArtifactAbstractAccess().getDEDENTTerminalRuleCall_7()); }
	RULE_DEDENT
	{ after(grammarAccess.getImplementationArtifactAbstractAccess().getDEDENTTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeploymentRequirements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeploymentRequirements__Group__0__Impl
	rule__DeploymentRequirements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeploymentRequirementsAccess().getNameAssignment_0()); }
	(rule__DeploymentRequirements__NameAssignment_0)
	{ after(grammarAccess.getDeploymentRequirementsAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeploymentRequirements__Group__1__Impl
	rule__DeploymentRequirements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeploymentRequirementsAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getDeploymentRequirementsAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeploymentRequirements__Group__2__Impl
	rule__DeploymentRequirements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeploymentRequirementsAccess().getOperatingSystemAssignment_2()); }
	(rule__DeploymentRequirements__OperatingSystemAssignment_2)
	{ after(grammarAccess.getDeploymentRequirementsAccess().getOperatingSystemAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeploymentRequirements__Group__3__Impl
	rule__DeploymentRequirements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeploymentRequirementsAccess().getProcessorArchitectureAssignment_3()); }
	(rule__DeploymentRequirements__ProcessorArchitectureAssignment_3)
	{ after(grammarAccess.getDeploymentRequirementsAccess().getProcessorArchitectureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeploymentRequirements__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeploymentRequirementsAccess().getRosDistroAssignment_4()); }
	(rule__DeploymentRequirements__RosDistroAssignment_4)?
	{ after(grammarAccess.getDeploymentRequirementsAccess().getRosDistroAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceRequirements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirements__Group__0__Impl
	rule__ResourceRequirements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementsAccess().getNameAssignment_0()); }
	(rule__ResourceRequirements__NameAssignment_0)
	{ after(grammarAccess.getResourceRequirementsAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirements__Group__1__Impl
	rule__ResourceRequirements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementsAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getResourceRequirementsAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirements__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getResourceRequirementsAccess().getRequirementsAssignment_2()); }
		(rule__ResourceRequirements__RequirementsAssignment_2)
		{ after(grammarAccess.getResourceRequirementsAccess().getRequirementsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getResourceRequirementsAccess().getRequirementsAssignment_2()); }
		(rule__ResourceRequirements__RequirementsAssignment_2)*
		{ after(grammarAccess.getResourceRequirementsAccess().getRequirementsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirement__Group__0__Impl
	rule__ResourceRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getResourceRequirementAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirement__Group__1__Impl
	rule__ResourceRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getResourceRequirementAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirement__Group__2__Impl
	rule__ResourceRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementAccess().getNameAssignment_2()); }
	(rule__ResourceRequirement__NameAssignment_2)
	{ after(grammarAccess.getResourceRequirementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirement__Group__3__Impl
	rule__ResourceRequirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getResourceRequirementAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirement__Group__4__Impl
	rule__ResourceRequirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementAccess().getValueKeyword_4()); }
	Value
	{ after(grammarAccess.getResourceRequirementAccess().getValueKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirement__Group__5__Impl
	rule__ResourceRequirement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementAccess().getValueAssignment_5()); }
	(rule__ResourceRequirement__ValueAssignment_5)
	{ after(grammarAccess.getResourceRequirementAccess().getValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceRequirement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceRequirementAccess().getDEDENTTerminalRuleCall_6()); }
	RULE_DEDENT
	{ after(grammarAccess.getResourceRequirementAccess().getDEDENTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqOperatingSystem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqOperatingSystem__Group__0__Impl
	rule__ReqOperatingSystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqOperatingSystemAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getReqOperatingSystemAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqOperatingSystem__Group__1__Impl
	rule__ReqOperatingSystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqOperatingSystemAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getReqOperatingSystemAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqOperatingSystem__Group__2__Impl
	rule__ReqOperatingSystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqOperatingSystemAccess().getNameAssignment_2()); }
	(rule__ReqOperatingSystem__NameAssignment_2)
	{ after(grammarAccess.getReqOperatingSystemAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqOperatingSystem__Group__3__Impl
	rule__ReqOperatingSystem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqOperatingSystemAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getReqOperatingSystemAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqOperatingSystem__Group__4__Impl
	rule__ReqOperatingSystem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqOperatingSystemAccess().getValueKeyword_4()); }
	Value
	{ after(grammarAccess.getReqOperatingSystemAccess().getValueKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqOperatingSystem__Group__5__Impl
	rule__ReqOperatingSystem__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqOperatingSystemAccess().getValueAssignment_5()); }
	(rule__ReqOperatingSystem__ValueAssignment_5)
	{ after(grammarAccess.getReqOperatingSystemAccess().getValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqOperatingSystem__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqOperatingSystemAccess().getDEDENTTerminalRuleCall_6()); }
	RULE_DEDENT
	{ after(grammarAccess.getReqOperatingSystemAccess().getDEDENTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperatingSystemTypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatingSystemTypeList__Group__0__Impl
	rule__OperatingSystemTypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatingSystemTypeListAccess().getGroup_0()); }
	(rule__OperatingSystemTypeList__Group_0__0)
	{ after(grammarAccess.getOperatingSystemTypeListAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatingSystemTypeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatingSystemTypeListAccess().getGroup_1()); }
	(rule__OperatingSystemTypeList__Group_1__0)?
	{ after(grammarAccess.getOperatingSystemTypeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperatingSystemTypeList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatingSystemTypeList__Group_0__0__Impl
	rule__OperatingSystemTypeList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatingSystemTypeListAccess().getPreListElementParserRuleCall_0_0()); }
	rulePreListElement
	{ after(grammarAccess.getOperatingSystemTypeListAccess().getPreListElementParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatingSystemTypeList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatingSystemTypeListAccess().getChildrenAssignment_0_1()); }
	(rule__OperatingSystemTypeList__ChildrenAssignment_0_1)
	{ after(grammarAccess.getOperatingSystemTypeListAccess().getChildrenAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperatingSystemTypeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatingSystemTypeList__Group_1__0__Impl
	rule__OperatingSystemTypeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatingSystemTypeListAccess().getPreListElementParserRuleCall_1_0()); }
	rulePreListElement
	{ after(grammarAccess.getOperatingSystemTypeListAccess().getPreListElementParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatingSystemTypeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatingSystemTypeListAccess().getChildrenAssignment_1_1()); }
	(rule__OperatingSystemTypeList__ChildrenAssignment_1_1)*
	{ after(grammarAccess.getOperatingSystemTypeListAccess().getChildrenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqProcessorArchitecture__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqProcessorArchitecture__Group__0__Impl
	rule__ReqProcessorArchitecture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqProcessorArchitectureAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getReqProcessorArchitectureAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqProcessorArchitecture__Group__1__Impl
	rule__ReqProcessorArchitecture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqProcessorArchitectureAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getReqProcessorArchitectureAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqProcessorArchitecture__Group__2__Impl
	rule__ReqProcessorArchitecture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqProcessorArchitectureAccess().getNameAssignment_2()); }
	(rule__ReqProcessorArchitecture__NameAssignment_2)
	{ after(grammarAccess.getReqProcessorArchitectureAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqProcessorArchitecture__Group__3__Impl
	rule__ReqProcessorArchitecture__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqProcessorArchitectureAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getReqProcessorArchitectureAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqProcessorArchitecture__Group__4__Impl
	rule__ReqProcessorArchitecture__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqProcessorArchitectureAccess().getValueKeyword_4()); }
	Value
	{ after(grammarAccess.getReqProcessorArchitectureAccess().getValueKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqProcessorArchitecture__Group__5__Impl
	rule__ReqProcessorArchitecture__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqProcessorArchitectureAccess().getValueAssignment_5()); }
	(rule__ReqProcessorArchitecture__ValueAssignment_5)
	{ after(grammarAccess.getReqProcessorArchitectureAccess().getValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqProcessorArchitecture__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqProcessorArchitectureAccess().getDEDENTTerminalRuleCall_6()); }
	RULE_DEDENT
	{ after(grammarAccess.getReqProcessorArchitectureAccess().getDEDENTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessorArchitectureTypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessorArchitectureTypeList__Group__0__Impl
	rule__ProcessorArchitectureTypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup_0()); }
	(rule__ProcessorArchitectureTypeList__Group_0__0)
	{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessorArchitectureTypeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup_1()); }
	(rule__ProcessorArchitectureTypeList__Group_1__0)?
	{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessorArchitectureTypeList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessorArchitectureTypeList__Group_0__0__Impl
	rule__ProcessorArchitectureTypeList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getPreListElementParserRuleCall_0_0()); }
	rulePreListElement
	{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getPreListElementParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessorArchitectureTypeList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenAssignment_0_1()); }
	(rule__ProcessorArchitectureTypeList__ChildrenAssignment_0_1)
	{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessorArchitectureTypeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessorArchitectureTypeList__Group_1__0__Impl
	rule__ProcessorArchitectureTypeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getPreListElementParserRuleCall_1_0()); }
	rulePreListElement
	{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getPreListElementParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessorArchitectureTypeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenAssignment_1_1()); }
	(rule__ProcessorArchitectureTypeList__ChildrenAssignment_1_1)*
	{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqRosDistro__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqRosDistro__Group__0__Impl
	rule__ReqRosDistro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqRosDistroAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getReqRosDistroAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqRosDistro__Group__1__Impl
	rule__ReqRosDistro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqRosDistroAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getReqRosDistroAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqRosDistro__Group__2__Impl
	rule__ReqRosDistro__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqRosDistroAccess().getNameAssignment_2()); }
	(rule__ReqRosDistro__NameAssignment_2)
	{ after(grammarAccess.getReqRosDistroAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqRosDistro__Group__3__Impl
	rule__ReqRosDistro__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqRosDistroAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getReqRosDistroAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqRosDistro__Group__4__Impl
	rule__ReqRosDistro__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqRosDistroAccess().getValueKeyword_4()); }
	Value
	{ after(grammarAccess.getReqRosDistroAccess().getValueKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqRosDistro__Group__5__Impl
	rule__ReqRosDistro__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqRosDistroAccess().getValueAssignment_5()); }
	(rule__ReqRosDistro__ValueAssignment_5)
	{ after(grammarAccess.getReqRosDistroAccess().getValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqRosDistro__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqRosDistroAccess().getDEDENTTerminalRuleCall_6()); }
	RULE_DEDENT
	{ after(grammarAccess.getReqRosDistroAccess().getDEDENTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RosDistroList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosDistroList__Group__0__Impl
	rule__RosDistroList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosDistroListAccess().getGroup_0()); }
	(rule__RosDistroList__Group_0__0)
	{ after(grammarAccess.getRosDistroListAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosDistroList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosDistroListAccess().getGroup_1()); }
	(rule__RosDistroList__Group_1__0)?
	{ after(grammarAccess.getRosDistroListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RosDistroList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosDistroList__Group_0__0__Impl
	rule__RosDistroList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosDistroListAccess().getPreListElementParserRuleCall_0_0()); }
	rulePreListElement
	{ after(grammarAccess.getRosDistroListAccess().getPreListElementParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosDistroList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosDistroListAccess().getChildrenAssignment_0_1()); }
	(rule__RosDistroList__ChildrenAssignment_0_1)
	{ after(grammarAccess.getRosDistroListAccess().getChildrenAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RosDistroList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosDistroList__Group_1__0__Impl
	rule__RosDistroList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosDistroListAccess().getPreListElementParserRuleCall_1_0()); }
	rulePreListElement
	{ after(grammarAccess.getRosDistroListAccess().getPreListElementParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosDistroList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosDistroListAccess().getChildrenAssignment_1_1()); }
	(rule__RosDistroList__ChildrenAssignment_1_1)*
	{ after(grammarAccess.getRosDistroListAccess().getChildrenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuildRequirements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildRequirements__Group__0__Impl
	rule__BuildRequirements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildRequirementsAccess().getNameAssignment_0()); }
	(rule__BuildRequirements__NameAssignment_0)
	{ after(grammarAccess.getBuildRequirementsAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildRequirements__Group__1__Impl
	rule__BuildRequirements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildRequirementsAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getBuildRequirementsAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildRequirements__Group__2__Impl
	rule__BuildRequirements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildRequirementsAccess().getINDENTTerminalRuleCall_2()); }
	RULE_INDENT
	{ after(grammarAccess.getBuildRequirementsAccess().getINDENTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildRequirements__Group__3__Impl
	rule__BuildRequirements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildRequirementsAccess().getBuildDependenciesAssignment_3()); }
	(rule__BuildRequirements__BuildDependenciesAssignment_3)?
	{ after(grammarAccess.getBuildRequirementsAccess().getBuildDependenciesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildRequirements__Group__4__Impl
	rule__BuildRequirements__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildRequirementsAccess().getDependencyRepositoriesAssignment_4()); }
	(rule__BuildRequirements__DependencyRepositoriesAssignment_4)?
	{ after(grammarAccess.getBuildRequirementsAccess().getDependencyRepositoriesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildRequirements__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildRequirementsAccess().getDEDENTTerminalRuleCall_5()); }
	RULE_DEDENT
	{ after(grammarAccess.getBuildRequirementsAccess().getDEDENTTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqBuildDependencies__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqBuildDependencies__Group__0__Impl
	rule__ReqBuildDependencies__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqBuildDependencies__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqBuildDependenciesAccess().getNameAssignment_0()); }
	(rule__ReqBuildDependencies__NameAssignment_0)
	{ after(grammarAccess.getReqBuildDependenciesAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqBuildDependencies__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqBuildDependencies__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqBuildDependencies__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getReqBuildDependenciesAccess().getDependenciesAssignment_1()); }
		(rule__ReqBuildDependencies__DependenciesAssignment_1)
		{ after(grammarAccess.getReqBuildDependenciesAccess().getDependenciesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getReqBuildDependenciesAccess().getDependenciesAssignment_1()); }
		(rule__ReqBuildDependencies__DependenciesAssignment_1)*
		{ after(grammarAccess.getReqBuildDependenciesAccess().getDependenciesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalPackage__Group__0__Impl
	rule__LocalPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalPackageAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getLocalPackageAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalPackage__Group__1__Impl
	rule__LocalPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalPackageAccess().getFromKeyword_1()); }
	From
	{ after(grammarAccess.getLocalPackageAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalPackage__Group__2__Impl
	rule__LocalPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalPackageAccess().getImportedNamespaceAssignment_2()); }
	(rule__LocalPackage__ImportedNamespaceAssignment_2)
	{ after(grammarAccess.getLocalPackageAccess().getImportedNamespaceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalPackage__Group__3__Impl
	rule__LocalPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalPackageAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getLocalPackageAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalPackage__Group__4__Impl
	rule__LocalPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalPackageAccess().getNameKeyword_4()); }
	Name
	{ after(grammarAccess.getLocalPackageAccess().getNameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalPackage__Group__5__Impl
	rule__LocalPackage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalPackageAccess().getNameAssignment_5()); }
	(rule__LocalPackage__NameAssignment_5)
	{ after(grammarAccess.getLocalPackageAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalPackage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalPackageAccess().getDEDENTTerminalRuleCall_6()); }
	RULE_DEDENT
	{ after(grammarAccess.getLocalPackageAccess().getDEDENTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GitPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__0__Impl
	rule__GitPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getGitPackageAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__1__Impl
	rule__GitPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getFromKeyword_1()); }
	From
	{ after(grammarAccess.getGitPackageAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__2__Impl
	rule__GitPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getPathAssignment_2()); }
	(rule__GitPackage__PathAssignment_2)
	{ after(grammarAccess.getGitPackageAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__3__Impl
	rule__GitPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getGitPackageAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__4__Impl
	rule__GitPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getNameKeyword_4()); }
	Name
	{ after(grammarAccess.getGitPackageAccess().getNameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__5__Impl
	rule__GitPackage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getNameAssignment_5()); }
	(rule__GitPackage__NameAssignment_5)
	{ after(grammarAccess.getGitPackageAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__6__Impl
	rule__GitPackage__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getGroup_6()); }
	(rule__GitPackage__Group_6__0)?
	{ after(grammarAccess.getGitPackageAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getDEDENTTerminalRuleCall_7()); }
	RULE_DEDENT
	{ after(grammarAccess.getGitPackageAccess().getDEDENTTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GitPackage__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group_6__0__Impl
	rule__GitPackage__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getBranchKeyword_6_0()); }
	Branch_1
	{ after(grammarAccess.getGitPackageAccess().getBranchKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GitPackage__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGitPackageAccess().getBranchAssignment_6_1()); }
	(rule__GitPackage__BranchAssignment_6_1)
	{ after(grammarAccess.getGitPackageAccess().getBranchAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqDependencyRepositories__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqDependencyRepositories__Group__0__Impl
	rule__ReqDependencyRepositories__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDependencyRepositories__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqDependencyRepositoriesAccess().getNameAssignment_0()); }
	(rule__ReqDependencyRepositories__NameAssignment_0)
	{ after(grammarAccess.getReqDependencyRepositoriesAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDependencyRepositories__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqDependencyRepositories__Group__1__Impl
	rule__ReqDependencyRepositories__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDependencyRepositories__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqDependencyRepositoriesAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getReqDependencyRepositoriesAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDependencyRepositories__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqDependencyRepositories__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDependencyRepositories__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAssignment_2()); }
		(rule__ReqDependencyRepositories__ChildrenAssignment_2)
		{ after(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAssignment_2()); }
	)
	(
		{ before(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAssignment_2()); }
		(rule__ReqDependencyRepositories__ChildrenAssignment_2)*
		{ after(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AptRepositoryInstance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__0__Impl
	rule__AptRepositoryInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__1__Impl
	rule__AptRepositoryInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__2__Impl
	rule__AptRepositoryInstance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getNameAssignment_2()); }
	(rule__AptRepositoryInstance__NameAssignment_2)
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__3__Impl
	rule__AptRepositoryInstance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__4__Impl
	rule__AptRepositoryInstance__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkKeyword_4()); }
	KeyLink
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__5__Impl
	rule__AptRepositoryInstance__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkAssignment_5()); }
	(rule__AptRepositoryInstance__KeyLinkAssignment_5)
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__6__Impl
	rule__AptRepositoryInstance__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathKeyword_6()); }
	RepositoryPath
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__7__Impl
	rule__AptRepositoryInstance__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathAssignment_7()); }
	(rule__AptRepositoryInstance__RepositoryPathAssignment_7)
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__8__Impl
	rule__AptRepositoryInstance__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getGroup_8()); }
	(rule__AptRepositoryInstance__Group_8__0)?
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getDEDENTTerminalRuleCall_9()); }
	RULE_DEDENT
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getDEDENTTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AptRepositoryInstance__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group_8__0__Impl
	rule__AptRepositoryInstance__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepKeyword_8_0()); }
	UpdateRosDep
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AptRepositoryInstance__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepAssignment_8_1()); }
	(rule__AptRepositoryInstance__UpdateRosDepAssignment_8_1)
	{ after(grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartCommands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartCommands__Group__0__Impl
	rule__StartCommands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartCommands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartCommandsAccess().getNameAssignment_0()); }
	(rule__StartCommands__NameAssignment_0)
	{ after(grammarAccess.getStartCommandsAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartCommands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartCommands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartCommands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartCommandsAccess().getStartCommandsAssignment_1()); }
	(rule__StartCommands__StartCommandsAssignment_1)
	{ after(grammarAccess.getStartCommandsAccess().getStartCommandsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListStartCommands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListStartCommands__Group__0__Impl
	rule__ListStartCommands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStartCommandsAccess().getGroup_0()); }
	(rule__ListStartCommands__Group_0__0)
	{ after(grammarAccess.getListStartCommandsAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListStartCommands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStartCommandsAccess().getGroup_1()); }
	(rule__ListStartCommands__Group_1__0)?
	{ after(grammarAccess.getListStartCommandsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListStartCommands__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListStartCommands__Group_0__0__Impl
	rule__ListStartCommands__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStartCommandsAccess().getPreListElementParserRuleCall_0_0()); }
	rulePreListElement
	{ after(grammarAccess.getListStartCommandsAccess().getPreListElementParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListStartCommands__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStartCommandsAccess().getChildrenAssignment_0_1()); }
	(rule__ListStartCommands__ChildrenAssignment_0_1)
	{ after(grammarAccess.getListStartCommandsAccess().getChildrenAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListStartCommands__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListStartCommands__Group_1__0__Impl
	rule__ListStartCommands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStartCommandsAccess().getPreListElementParserRuleCall_1_0()); }
	rulePreListElement
	{ after(grammarAccess.getListStartCommandsAccess().getPreListElementParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListStartCommands__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListStartCommandsAccess().getChildrenAssignment_1_1()); }
	(rule__ListStartCommands__ChildrenAssignment_1_1)*
	{ after(grammarAccess.getListStartCommandsAccess().getChildrenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StackImplementationDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__0__Impl
	rule__StackImplementationDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getTypeAssignment_0()); }
	(rule__StackImplementationDescription__TypeAssignment_0)
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__1__Impl
	rule__StackImplementationDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__2__Impl
	rule__StackImplementationDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getINDENTTerminalRuleCall_2()); }
	RULE_INDENT
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getINDENTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__3__Impl
	rule__StackImplementationDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getNameKeyword_3()); }
	Name
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getNameKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__4__Impl
	rule__StackImplementationDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getNameAssignment_4()); }
	(rule__StackImplementationDescription__NameAssignment_4)
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__5__Impl
	rule__StackImplementationDescription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getGroup_5()); }
	(rule__StackImplementationDescription__Group_5__0)?
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__6__Impl
	rule__StackImplementationDescription__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getDescriptionKeyword_6()); }
	Description
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getDescriptionKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__7__Impl
	rule__StackImplementationDescription__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getDescriptionAssignment_7()); }
	(rule__StackImplementationDescription__DescriptionAssignment_7)
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getDescriptionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__8__Impl
	rule__StackImplementationDescription__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getModeKeyword_8()); }
	Mode
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getModeKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__9__Impl
	rule__StackImplementationDescription__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getModeAssignment_9()); }
	(rule__StackImplementationDescription__ModeAssignment_9)
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getModeAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__10__Impl
	rule__StackImplementationDescription__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getImplAssignment_10()); }
	(rule__StackImplementationDescription__ImplAssignment_10)
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getImplAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getDEDENTTerminalRuleCall_11()); }
	RULE_DEDENT
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getDEDENTTerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StackImplementationDescription__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group_5__0__Impl
	rule__StackImplementationDescription__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getImplementsRosModelKeyword_5_0()); }
	ImplementsRosModel
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getImplementsRosModelKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StackImplementationDescription__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStackImplementationDescriptionAccess().getImpRosmodelAssignment_5_1()); }
	(rule__StackImplementationDescription__ImpRosmodelAssignment_5_1)
	{ after(grammarAccess.getStackImplementationDescriptionAccess().getImpRosmodelAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__0__Impl
	rule__PackageDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getTypeAssignment_0()); }
	(rule__PackageDescription__TypeAssignment_0)
	{ after(grammarAccess.getPackageDescriptionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__1__Impl
	rule__PackageDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getPackageDescriptionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__2__Impl
	rule__PackageDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getINDENTTerminalRuleCall_2()); }
	RULE_INDENT
	{ after(grammarAccess.getPackageDescriptionAccess().getINDENTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__3__Impl
	rule__PackageDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getImageDescriptionKeyword_3()); }
	ImageDescription
	{ after(grammarAccess.getPackageDescriptionAccess().getImageDescriptionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__4__Impl
	rule__PackageDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getINDENTTerminalRuleCall_4()); }
	RULE_INDENT
	{ after(grammarAccess.getPackageDescriptionAccess().getINDENTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__5__Impl
	rule__PackageDescription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getImageDescriptionAssignment_5()); }
	(rule__PackageDescription__ImageDescriptionAssignment_5)
	{ after(grammarAccess.getPackageDescriptionAccess().getImageDescriptionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__6__Impl
	rule__PackageDescription__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getDEDENTTerminalRuleCall_6()); }
	RULE_DEDENT
	{ after(grammarAccess.getPackageDescriptionAccess().getDEDENTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__7__Impl
	rule__PackageDescription__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionKeyword_7()); }
	RepositoryDescription
	{ after(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__8__Impl
	rule__PackageDescription__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionAssignment_8()); }
	(rule__PackageDescription__RepositoryDescriptionAssignment_8)
	{ after(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDescription__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDescriptionAccess().getDEDENTTerminalRuleCall_9()); }
	RULE_DEDENT
	{ after(grammarAccess.getPackageDescriptionAccess().getDEDENTTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImageDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageDescription__Group__0__Impl
	rule__ImageDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageDescriptionAccess().getTypesKeyword_0()); }
	Types
	{ after(grammarAccess.getImageDescriptionAccess().getTypesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageDescription__Group__1__Impl
	rule__ImageDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageDescriptionAccess().getTypesAssignment_1()); }
	(rule__ImageDescription__TypesAssignment_1)
	{ after(grammarAccess.getImageDescriptionAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageDescription__Group__2__Impl
	rule__ImageDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageDescriptionAccess().getNameKeyword_2()); }
	Name
	{ after(grammarAccess.getImageDescriptionAccess().getNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageDescription__Group__3__Impl
	rule__ImageDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageDescriptionAccess().getNameAssignment_3()); }
	(rule__ImageDescription__NameAssignment_3)
	{ after(grammarAccess.getImageDescriptionAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageDescription__Group__4__Impl
	rule__ImageDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageDescriptionAccess().getImageVersionsKeyword_4()); }
	ImageVersions
	{ after(grammarAccess.getImageDescriptionAccess().getImageVersionsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageDescription__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageDescriptionAccess().getImageVersionsAssignment_5()); }
	(rule__ImageDescription__ImageVersionsAssignment_5)
	{ after(grammarAccess.getImageDescriptionAccess().getImageVersionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImageTypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageTypeList__Group__0__Impl
	rule__ImageTypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageTypeListAccess().getLeftSquareBracketKeyword_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getImageTypeListAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageTypeList__Group__1__Impl
	rule__ImageTypeList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageTypeListAccess().getChildrenAssignment_1()); }
	(rule__ImageTypeList__ChildrenAssignment_1)
	{ after(grammarAccess.getImageTypeListAccess().getChildrenAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageTypeList__Group__2__Impl
	rule__ImageTypeList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageTypeListAccess().getGroup_2()); }
	(rule__ImageTypeList__Group_2__0)?
	{ after(grammarAccess.getImageTypeListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageTypeList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageTypeListAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getImageTypeListAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImageTypeList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageTypeList__Group_2__0__Impl
	rule__ImageTypeList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageTypeListAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getImageTypeListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageTypeList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageTypeListAccess().getChildrenAssignment_2_1()); }
	(rule__ImageTypeList__ChildrenAssignment_2_1)*
	{ after(grammarAccess.getImageTypeListAccess().getChildrenAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImageVersionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageVersionList__Group__0__Impl
	rule__ImageVersionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageVersionListAccess().getGroup_0()); }
	(rule__ImageVersionList__Group_0__0)
	{ after(grammarAccess.getImageVersionListAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageVersionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageVersionListAccess().getGroup_1()); }
	(rule__ImageVersionList__Group_1__0)?
	{ after(grammarAccess.getImageVersionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImageVersionList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageVersionList__Group_0__0__Impl
	rule__ImageVersionList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageVersionListAccess().getPreListElementParserRuleCall_0_0()); }
	rulePreListElement
	{ after(grammarAccess.getImageVersionListAccess().getPreListElementParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageVersionList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageVersionListAccess().getChildrenAssignment_0_1()); }
	(rule__ImageVersionList__ChildrenAssignment_0_1)
	{ after(grammarAccess.getImageVersionListAccess().getChildrenAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImageVersionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageVersionList__Group_1__0__Impl
	rule__ImageVersionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageVersionListAccess().getPreListElementParserRuleCall_1_0()); }
	rulePreListElement
	{ after(grammarAccess.getImageVersionListAccess().getPreListElementParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageVersionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageVersionListAccess().getChildrenAssignment_1_1()); }
	(rule__ImageVersionList__ChildrenAssignment_1_1)*
	{ after(grammarAccess.getImageVersionListAccess().getChildrenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositorySpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositorySpec__Group__0__Impl
	rule__RepositorySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositorySpecAccess().getPreListElementParserRuleCall_0()); }
	rulePreListElement
	{ after(grammarAccess.getRepositorySpecAccess().getPreListElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositorySpec__Group__1__Impl
	rule__RepositorySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositorySpecAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getRepositorySpecAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositorySpec__Group__2__Impl
	rule__RepositorySpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositorySpecAccess().getNameAssignment_2()); }
	(rule__RepositorySpec__NameAssignment_2)
	{ after(grammarAccess.getRepositorySpecAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositorySpec__Group__3__Impl
	rule__RepositorySpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositorySpecAccess().getINDENTTerminalRuleCall_3()); }
	RULE_INDENT
	{ after(grammarAccess.getRepositorySpecAccess().getINDENTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositorySpec__Group__4__Impl
	rule__RepositorySpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositorySpecAccess().getRepositoryAssignment_4()); }
	(rule__RepositorySpec__RepositoryAssignment_4)
	{ after(grammarAccess.getRepositorySpecAccess().getRepositoryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositorySpec__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositorySpecAccess().getDEDENTTerminalRuleCall_5()); }
	RULE_DEDENT
	{ after(grammarAccess.getRepositorySpecAccess().getDEDENTTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repository__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__0__Impl
	rule__Repository__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getTypeKeyword_0()); }
	Type
	{ after(grammarAccess.getRepositoryAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__1__Impl
	rule__Repository__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getTypeAssignment_1()); }
	(rule__Repository__TypeAssignment_1)
	{ after(grammarAccess.getRepositoryAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getGroup_2()); }
	(rule__Repository__Group_2__0)?
	{ after(grammarAccess.getRepositoryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repository__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group_2__0__Impl
	rule__Repository__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getPathKeyword_2_0()); }
	Path
	{ after(grammarAccess.getRepositoryAccess().getPathKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getPathAssignment_2_1()); }
	(rule__Repository__PathAssignment_2_1)
	{ after(grammarAccess.getRepositoryAccess().getPathAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarNumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarNumber__Group__0__Impl
	rule__ScalarNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarNumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarNumberAccess().getNumberParserRuleCall_0()); }
	ruleNumber
	{ after(grammarAccess.getScalarNumberAccess().getNumberParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarNumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarNumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarNumberAccess().getUnitParserRuleCall_1()); }
	(ruleUnit)?
	{ after(grammarAccess.getScalarNumberAccess().getUnitParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarUnitSize__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarUnitSize__Group_1__0__Impl
	rule__ScalarUnitSize__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarUnitSize__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarUnitSizeAccess().getBKeyword_1_0()); }
	B_1
	{ after(grammarAccess.getScalarUnitSizeAccess().getBKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarUnitSize__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarUnitSize__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarUnitSize__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarUnitSizeAccess().getKBKeyword_1_1()); }
	KB
	{ after(grammarAccess.getScalarUnitSizeAccess().getKBKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Yaml__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYamlAccess().getContentYamlContentParserRuleCall_1_0()); }
		ruleYamlContent
		{ after(grammarAccess.getYamlAccess().getContentYamlContentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__YamlContent__RootContentAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYamlContentAccess().getRootContentAlternatives_0()); }
		(rule__YamlContent__RootContentAlternatives_0)
		{ after(grammarAccess.getYamlContentAccess().getRootContentAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeMonolithicImplementationDescriptionKeyword_0_0()); }
		(
			{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeMonolithicImplementationDescriptionKeyword_0_0()); }
			MonolithicImplementationDescription
			{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeMonolithicImplementationDescriptionKeyword_0_0()); }
		)
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeMonolithicImplementationDescriptionKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__ImpRosmodelAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getImpRosmodelSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getImpRosmodelSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__DescriptionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__ModeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeImplementationModeTypeEnumRuleCall_8_0()); }
		ruleImplementationModeType
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeImplementationModeTypeEnumRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__BranchAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchBranchTypeParserRuleCall_10_0()); }
		ruleBranchType
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchBranchTypeParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonolithicImplementationDescription__ImplAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplImplementationArtifactDescriptionParserRuleCall_11_0()); }
		ruleImplementationArtifactDescription
		{ after(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplImplementationArtifactDescriptionParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getNameAlternatives_2_0()); }
		(rule__NewImplementationArtifact__NameAlternatives_2_0)
		{ after(grammarAccess.getNewImplementationArtifactAccess().getNameAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__DeployRequirementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getDeployRequirementsDeploymentRequirementsParserRuleCall_3_0()); }
		ruleDeploymentRequirements
		{ after(grammarAccess.getNewImplementationArtifactAccess().getDeployRequirementsDeploymentRequirementsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__ResourceRequirementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getResourceRequirementsResourceRequirementsParserRuleCall_4_0()); }
		ruleResourceRequirements
		{ after(grammarAccess.getNewImplementationArtifactAccess().getResourceRequirementsResourceRequirementsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__BuildRequirementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getBuildRequirementsBuildRequirementsParserRuleCall_5_0()); }
		ruleBuildRequirements
		{ after(grammarAccess.getNewImplementationArtifactAccess().getBuildRequirementsBuildRequirementsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewImplementationArtifact__StartCommandsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewImplementationArtifactAccess().getStartCommandsStartCommandsParserRuleCall_6_0()); }
		ruleStartCommands
		{ after(grammarAccess.getNewImplementationArtifactAccess().getStartCommandsStartCommandsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getTypeImplementationArtifactDescriptionKeyword_0_0()); }
		(
			{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getTypeImplementationArtifactDescriptionKeyword_0_0()); }
			ImplementationArtifactDescription
			{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getTypeImplementationArtifactDescriptionKeyword_0_0()); }
		)
		{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getTypeImplementationArtifactDescriptionKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactDescription__ImplAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationArtifactDescriptionAccess().getImplAlternatives_3_0()); }
		(rule__ImplementationArtifactDescription__ImplAlternatives_3_0)
		{ after(grammarAccess.getImplementationArtifactDescriptionAccess().getImplAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReuseImplementationArtifact__ListsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReuseImplementationArtifactAccess().getListsImplementationArtifactAbstractParserRuleCall_1_0()); }
		ruleImplementationArtifactAbstract
		{ after(grammarAccess.getReuseImplementationArtifactAccess().getListsImplementationArtifactAbstractParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__ImportedNamespaceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationArtifactAbstractAccess().getImportedNamespaceQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getImplementationArtifactAbstractAccess().getImportedNamespaceQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationArtifactAbstractAccess().getNameMonolithicImplementationDescriptionCrossReference_5_0()); }
		(
			{ before(grammarAccess.getImplementationArtifactAbstractAccess().getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getImplementationArtifactAbstractAccess().getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getImplementationArtifactAbstractAccess().getNameMonolithicImplementationDescriptionCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationArtifactAbstract__StartCommandsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationArtifactAbstractAccess().getStartCommandsStartCommandsParserRuleCall_6_0()); }
		ruleStartCommands
		{ after(grammarAccess.getImplementationArtifactAbstractAccess().getStartCommandsStartCommandsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeploymentRequirementsAccess().getNameDeployRequirementsKeyword_0_0()); }
		(
			{ before(grammarAccess.getDeploymentRequirementsAccess().getNameDeployRequirementsKeyword_0_0()); }
			DeployRequirements
			{ after(grammarAccess.getDeploymentRequirementsAccess().getNameDeployRequirementsKeyword_0_0()); }
		)
		{ after(grammarAccess.getDeploymentRequirementsAccess().getNameDeployRequirementsKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__OperatingSystemAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeploymentRequirementsAccess().getOperatingSystemReqOperatingSystemParserRuleCall_2_0()); }
		ruleReqOperatingSystem
		{ after(grammarAccess.getDeploymentRequirementsAccess().getOperatingSystemReqOperatingSystemParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__ProcessorArchitectureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeploymentRequirementsAccess().getProcessorArchitectureReqProcessorArchitectureParserRuleCall_3_0()); }
		ruleReqProcessorArchitecture
		{ after(grammarAccess.getDeploymentRequirementsAccess().getProcessorArchitectureReqProcessorArchitectureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeploymentRequirements__RosDistroAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeploymentRequirementsAccess().getRosDistroReqRosDistroParserRuleCall_4_0()); }
		ruleReqRosDistro
		{ after(grammarAccess.getDeploymentRequirementsAccess().getRosDistroReqRosDistroParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirements__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceRequirementsAccess().getNameResourceRequirementsKeyword_0_0()); }
		(
			{ before(grammarAccess.getResourceRequirementsAccess().getNameResourceRequirementsKeyword_0_0()); }
			ResourceRequirements
			{ after(grammarAccess.getResourceRequirementsAccess().getNameResourceRequirementsKeyword_0_0()); }
		)
		{ after(grammarAccess.getResourceRequirementsAccess().getNameResourceRequirementsKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirements__RequirementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceRequirementsAccess().getRequirementsResourceRequirementParserRuleCall_2_0()); }
		ruleResourceRequirement
		{ after(grammarAccess.getResourceRequirementsAccess().getRequirementsResourceRequirementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceRequirementAccess().getNameResourceReqTypesEnumRuleCall_2_0()); }
		ruleResourceReqTypes
		{ after(grammarAccess.getResourceRequirementAccess().getNameResourceReqTypesEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceRequirement__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceRequirementAccess().getValueScalarNumberParserRuleCall_5_0()); }
		ruleScalarNumber
		{ after(grammarAccess.getResourceRequirementAccess().getValueScalarNumberParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqOperatingSystemAccess().getNameOsKeyword_2_0()); }
		(
			{ before(grammarAccess.getReqOperatingSystemAccess().getNameOsKeyword_2_0()); }
			Os
			{ after(grammarAccess.getReqOperatingSystemAccess().getNameOsKeyword_2_0()); }
		)
		{ after(grammarAccess.getReqOperatingSystemAccess().getNameOsKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqOperatingSystem__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqOperatingSystemAccess().getValueOperatingSystemTypeListParserRuleCall_5_0()); }
		ruleOperatingSystemTypeList
		{ after(grammarAccess.getReqOperatingSystemAccess().getValueOperatingSystemTypeListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__ChildrenAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatingSystemTypeListAccess().getChildrenOperatingSystemTypesEnumRuleCall_0_1_0()); }
		ruleOperatingSystemTypes
		{ after(grammarAccess.getOperatingSystemTypeListAccess().getChildrenOperatingSystemTypesEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatingSystemTypeList__ChildrenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatingSystemTypeListAccess().getChildrenOperatingSystemTypesEnumRuleCall_1_1_0()); }
		ruleOperatingSystemTypes
		{ after(grammarAccess.getOperatingSystemTypeListAccess().getChildrenOperatingSystemTypesEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqProcessorArchitectureAccess().getNameProcessor_architectureKeyword_2_0()); }
		(
			{ before(grammarAccess.getReqProcessorArchitectureAccess().getNameProcessor_architectureKeyword_2_0()); }
			Processor_architecture
			{ after(grammarAccess.getReqProcessorArchitectureAccess().getNameProcessor_architectureKeyword_2_0()); }
		)
		{ after(grammarAccess.getReqProcessorArchitectureAccess().getNameProcessor_architectureKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqProcessorArchitecture__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqProcessorArchitectureAccess().getValueProcessorArchitectureTypeListParserRuleCall_5_0()); }
		ruleProcessorArchitectureTypeList
		{ after(grammarAccess.getReqProcessorArchitectureAccess().getValueProcessorArchitectureTypeListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__ChildrenAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenProcessorArchitectureTypesEnumRuleCall_0_1_0()); }
		ruleProcessorArchitectureTypes
		{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenProcessorArchitectureTypesEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessorArchitectureTypeList__ChildrenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenProcessorArchitectureTypesEnumRuleCall_1_1_0()); }
		ruleProcessorArchitectureTypes
		{ after(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenProcessorArchitectureTypesEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqRosDistroAccess().getNameRos_distroKeyword_2_0()); }
		(
			{ before(grammarAccess.getReqRosDistroAccess().getNameRos_distroKeyword_2_0()); }
			Ros_distro
			{ after(grammarAccess.getReqRosDistroAccess().getNameRos_distroKeyword_2_0()); }
		)
		{ after(grammarAccess.getReqRosDistroAccess().getNameRos_distroKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqRosDistro__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqRosDistroAccess().getValueRosDistroListParserRuleCall_5_0()); }
		ruleRosDistroList
		{ after(grammarAccess.getReqRosDistroAccess().getValueRosDistroListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__ChildrenAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosDistroListAccess().getChildrenRosDistroEnumRuleCall_0_1_0()); }
		ruleRosDistro
		{ after(grammarAccess.getRosDistroListAccess().getChildrenRosDistroEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosDistroList__ChildrenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosDistroListAccess().getChildrenRosDistroEnumRuleCall_1_1_0()); }
		ruleRosDistro
		{ after(grammarAccess.getRosDistroListAccess().getChildrenRosDistroEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildRequirementsAccess().getNameBuildRequirementsKeyword_0_0()); }
		(
			{ before(grammarAccess.getBuildRequirementsAccess().getNameBuildRequirementsKeyword_0_0()); }
			BuildRequirements
			{ after(grammarAccess.getBuildRequirementsAccess().getNameBuildRequirementsKeyword_0_0()); }
		)
		{ after(grammarAccess.getBuildRequirementsAccess().getNameBuildRequirementsKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__BuildDependenciesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildRequirementsAccess().getBuildDependenciesReqBuildDependenciesParserRuleCall_3_0()); }
		ruleReqBuildDependencies
		{ after(grammarAccess.getBuildRequirementsAccess().getBuildDependenciesReqBuildDependenciesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildRequirements__DependencyRepositoriesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildRequirementsAccess().getDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_4_0()); }
		ruleReqDependencyRepositories
		{ after(grammarAccess.getBuildRequirementsAccess().getDependencyRepositoriesReqDependencyRepositoriesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqBuildDependencies__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqBuildDependenciesAccess().getNameDependOnKeyword_0_0()); }
		(
			{ before(grammarAccess.getReqBuildDependenciesAccess().getNameDependOnKeyword_0_0()); }
			DependOn
			{ after(grammarAccess.getReqBuildDependenciesAccess().getNameDependOnKeyword_0_0()); }
		)
		{ after(grammarAccess.getReqBuildDependenciesAccess().getNameDependOnKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqBuildDependencies__DependenciesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqBuildDependenciesAccess().getDependenciesDependencyParserRuleCall_1_0()); }
		ruleDependency
		{ after(grammarAccess.getReqBuildDependenciesAccess().getDependenciesDependencyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__ImportedNamespaceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalPackageAccess().getImportedNamespaceQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getLocalPackageAccess().getImportedNamespaceQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalPackage__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalPackageAccess().getNameMonolithicImplementationDescriptionCrossReference_5_0()); }
		(
			{ before(grammarAccess.getLocalPackageAccess().getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getLocalPackageAccess().getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getLocalPackageAccess().getNameMonolithicImplementationDescriptionCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitPackageAccess().getPathURLTerminalRuleCall_2_0()); }
		RULE_URL
		{ after(grammarAccess.getGitPackageAccess().getPathURLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitPackageAccess().getNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getGitPackageAccess().getNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GitPackage__BranchAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGitPackageAccess().getBranchSTRINGTerminalRuleCall_6_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGitPackageAccess().getBranchSTRINGTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDependencyRepositories__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqDependencyRepositoriesAccess().getNameAptRepositoriesKeyword_0_0()); }
		(
			{ before(grammarAccess.getReqDependencyRepositoriesAccess().getNameAptRepositoriesKeyword_0_0()); }
			AptRepositories
			{ after(grammarAccess.getReqDependencyRepositoriesAccess().getNameAptRepositoriesKeyword_0_0()); }
		)
		{ after(grammarAccess.getReqDependencyRepositoriesAccess().getNameAptRepositoriesKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDependencyRepositories__ChildrenAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAptRepositoryInstanceParserRuleCall_2_0()); }
		ruleAptRepositoryInstance
		{ after(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAptRepositoryInstanceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAptRepositoryInstanceAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAptRepositoryInstanceAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__KeyLinkAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkURLTerminalRuleCall_5_0()); }
		RULE_URL
		{ after(grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkURLTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__RepositoryPathAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathURLTerminalRuleCall_7_0()); }
		RULE_URL
		{ after(grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathURLTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AptRepositoryInstance__UpdateRosDepAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepURLTerminalRuleCall_8_1_0()); }
		RULE_URL
		{ after(grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepURLTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartCommands__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartCommandsAccess().getNameStartCommandsKeyword_0_0()); }
		(
			{ before(grammarAccess.getStartCommandsAccess().getNameStartCommandsKeyword_0_0()); }
			StartCommands
			{ after(grammarAccess.getStartCommandsAccess().getNameStartCommandsKeyword_0_0()); }
		)
		{ after(grammarAccess.getStartCommandsAccess().getNameStartCommandsKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartCommands__StartCommandsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartCommandsAccess().getStartCommandsListStartCommandsParserRuleCall_1_0()); }
		ruleListStartCommands
		{ after(grammarAccess.getStartCommandsAccess().getStartCommandsListStartCommandsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__ChildrenAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListStartCommandsAccess().getChildrenSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getListStartCommandsAccess().getChildrenSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStartCommands__ChildrenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListStartCommandsAccess().getChildrenSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getListStartCommandsAccess().getChildrenSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStackImplementationDescriptionAccess().getTypeStackImplementationDescriptionKeyword_0_0()); }
		(
			{ before(grammarAccess.getStackImplementationDescriptionAccess().getTypeStackImplementationDescriptionKeyword_0_0()); }
			StackImplementationDescription
			{ after(grammarAccess.getStackImplementationDescriptionAccess().getTypeStackImplementationDescriptionKeyword_0_0()); }
		)
		{ after(grammarAccess.getStackImplementationDescriptionAccess().getTypeStackImplementationDescriptionKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStackImplementationDescriptionAccess().getNameQualifiedNameParserRuleCall_4_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getStackImplementationDescriptionAccess().getNameQualifiedNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__ImpRosmodelAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStackImplementationDescriptionAccess().getImpRosmodelQualifiedNameParserRuleCall_5_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getStackImplementationDescriptionAccess().getImpRosmodelQualifiedNameParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__DescriptionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStackImplementationDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getStackImplementationDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__ModeAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStackImplementationDescriptionAccess().getModeImplementationModeTypeEnumRuleCall_9_0()); }
		ruleImplementationModeType
		{ after(grammarAccess.getStackImplementationDescriptionAccess().getModeImplementationModeTypeEnumRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StackImplementationDescription__ImplAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStackImplementationDescriptionAccess().getImplImplementationArtifactDescriptionParserRuleCall_10_0()); }
		ruleImplementationArtifactDescription
		{ after(grammarAccess.getStackImplementationDescriptionAccess().getImplImplementationArtifactDescriptionParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDescriptionAccess().getTypePackageDescriptionKeyword_0_0()); }
		(
			{ before(grammarAccess.getPackageDescriptionAccess().getTypePackageDescriptionKeyword_0_0()); }
			PackageDescription
			{ after(grammarAccess.getPackageDescriptionAccess().getTypePackageDescriptionKeyword_0_0()); }
		)
		{ after(grammarAccess.getPackageDescriptionAccess().getTypePackageDescriptionKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__ImageDescriptionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDescriptionAccess().getImageDescriptionImageDescriptionParserRuleCall_5_0()); }
		ruleImageDescription
		{ after(grammarAccess.getPackageDescriptionAccess().getImageDescriptionImageDescriptionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDescription__RepositoryDescriptionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0()); }
		ruleRepositoryDescription
		{ after(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionRepositoryDescriptionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageDescriptionAccess().getTypesImageTypeListParserRuleCall_1_0()); }
		ruleImageTypeList
		{ after(grammarAccess.getImageDescriptionAccess().getTypesImageTypeListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageDescriptionAccess().getNameMonolithicImplementationDescriptionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getImageDescriptionAccess().getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getImageDescriptionAccess().getNameMonolithicImplementationDescriptionQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getImageDescriptionAccess().getNameMonolithicImplementationDescriptionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageDescription__ImageVersionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageDescriptionAccess().getImageVersionsImageVersionListParserRuleCall_5_0()); }
		ruleImageVersionList
		{ after(grammarAccess.getImageDescriptionAccess().getImageVersionsImageVersionListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__ChildrenAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageTypeListAccess().getChildrenImageTypesEnumRuleCall_1_0()); }
		ruleImageTypes
		{ after(grammarAccess.getImageTypeListAccess().getChildrenImageTypesEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageTypeList__ChildrenAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageTypeListAccess().getChildrenImageTypesEnumRuleCall_2_1_0()); }
		ruleImageTypes
		{ after(grammarAccess.getImageTypeListAccess().getChildrenImageTypesEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__ChildrenAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageVersionListAccess().getChildrenImageVersionTypesEnumRuleCall_0_1_0()); }
		ruleImageVersionTypes
		{ after(grammarAccess.getImageVersionListAccess().getChildrenImageVersionTypesEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageVersionList__ChildrenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageVersionListAccess().getChildrenImageVersionTypesEnumRuleCall_1_1_0()); }
		ruleImageVersionTypes
		{ after(grammarAccess.getImageVersionListAccess().getChildrenImageVersionTypesEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryDescription__SpecAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryDescriptionAccess().getSpecRepositorySpecParserRuleCall_0()); }
		ruleRepositorySpec
		{ after(grammarAccess.getRepositoryDescriptionAccess().getSpecRepositorySpecParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositorySpecAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRepositorySpecAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositorySpec__RepositoryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositorySpecAccess().getRepositoryRepositoryParserRuleCall_4_0()); }
		ruleRepository
		{ after(grammarAccess.getRepositorySpecAccess().getRepositoryRepositoryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryAccess().getTypeRepositoryTypesEnumRuleCall_1_0()); }
		ruleRepositoryTypes
		{ after(grammarAccess.getRepositoryAccess().getTypeRepositoryTypesEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__PathAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryAccess().getPathSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRepositoryAccess().getPathSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
