/*
 * generated by Xtext 2.27.0
 */
package de.fraunhofer.ipa.deployment.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.ipa.deployment.ide.contentassist.antlr.internal.InternalDeployModelParser;
import de.fraunhofer.ipa.deployment.services.DeployModelGrammarAccess;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DeployModelParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DeployModelGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DeployModelGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getYamlContentAccess().getRootContentAlternatives_0(), "rule__YamlContent__RootContentAlternatives_0");
			builder.put(grammarAccess.getBranchTypeAccess().getAlternatives(), "rule__BranchType__Alternatives");
			builder.put(grammarAccess.getNewImplementationArtifactAccess().getNameAlternatives_2_0(), "rule__NewImplementationArtifact__NameAlternatives_2_0");
			builder.put(grammarAccess.getImplementationArtifactDescriptionAccess().getImplAlternatives_3_0(), "rule__ImplementationArtifactDescription__ImplAlternatives_3_0");
			builder.put(grammarAccess.getDependencyAccess().getAlternatives(), "rule__Dependency__Alternatives");
			builder.put(grammarAccess.getNumberAccess().getAlternatives(), "rule__Number__Alternatives");
			builder.put(grammarAccess.getUnitAccess().getAlternatives(), "rule__Unit__Alternatives");
			builder.put(grammarAccess.getScalarUnitSizeAccess().getAlternatives(), "rule__ScalarUnitSize__Alternatives");
			builder.put(grammarAccess.getScalarUnitTimeAccess().getAlternatives(), "rule__ScalarUnitTime__Alternatives");
			builder.put(grammarAccess.getScalarUnitFrequencyAccess().getAlternatives(), "rule__ScalarUnitFrequency__Alternatives");
			builder.put(grammarAccess.getImplementationModeTypeAccess().getAlternatives(), "rule__ImplementationModeType__Alternatives");
			builder.put(grammarAccess.getResourceReqTypesAccess().getAlternatives(), "rule__ResourceReqTypes__Alternatives");
			builder.put(grammarAccess.getOperatingSystemTypesAccess().getAlternatives(), "rule__OperatingSystemTypes__Alternatives");
			builder.put(grammarAccess.getRosDistroAccess().getAlternatives(), "rule__RosDistro__Alternatives");
			builder.put(grammarAccess.getProcessorArchitectureTypesAccess().getAlternatives(), "rule__ProcessorArchitectureTypes__Alternatives");
			builder.put(grammarAccess.getImageTypesAccess().getAlternatives(), "rule__ImageTypes__Alternatives");
			builder.put(grammarAccess.getImageVersionTypesAccess().getAlternatives(), "rule__ImageVersionTypes__Alternatives");
			builder.put(grammarAccess.getRepositoryTypesAccess().getAlternatives(), "rule__RepositoryTypes__Alternatives");
			builder.put(grammarAccess.getYamlAccess().getGroup(), "rule__Yaml__Group__0");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getGroup(), "rule__MonolithicImplementationDescription__Group__0");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getGroup_4(), "rule__MonolithicImplementationDescription__Group_4__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getNewImplementationArtifactAccess().getGroup(), "rule__NewImplementationArtifact__Group__0");
			builder.put(grammarAccess.getImplementationArtifactDescriptionAccess().getGroup(), "rule__ImplementationArtifactDescription__Group__0");
			builder.put(grammarAccess.getReuseImplementationArtifactAccess().getGroup(), "rule__ReuseImplementationArtifact__Group__0");
			builder.put(grammarAccess.getImplementationArtifactAbstractAccess().getGroup(), "rule__ImplementationArtifactAbstract__Group__0");
			builder.put(grammarAccess.getDeploymentRequirementsAccess().getGroup(), "rule__DeploymentRequirements__Group__0");
			builder.put(grammarAccess.getResourceRequirementsAccess().getGroup(), "rule__ResourceRequirements__Group__0");
			builder.put(grammarAccess.getResourceRequirementAccess().getGroup(), "rule__ResourceRequirement__Group__0");
			builder.put(grammarAccess.getReqOperatingSystemAccess().getGroup(), "rule__ReqOperatingSystem__Group__0");
			builder.put(grammarAccess.getOperatingSystemTypeListAccess().getGroup(), "rule__OperatingSystemTypeList__Group__0");
			builder.put(grammarAccess.getOperatingSystemTypeListAccess().getGroup_0(), "rule__OperatingSystemTypeList__Group_0__0");
			builder.put(grammarAccess.getOperatingSystemTypeListAccess().getGroup_1(), "rule__OperatingSystemTypeList__Group_1__0");
			builder.put(grammarAccess.getReqProcessorArchitectureAccess().getGroup(), "rule__ReqProcessorArchitecture__Group__0");
			builder.put(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup(), "rule__ProcessorArchitectureTypeList__Group__0");
			builder.put(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup_0(), "rule__ProcessorArchitectureTypeList__Group_0__0");
			builder.put(grammarAccess.getProcessorArchitectureTypeListAccess().getGroup_1(), "rule__ProcessorArchitectureTypeList__Group_1__0");
			builder.put(grammarAccess.getReqRosDistroAccess().getGroup(), "rule__ReqRosDistro__Group__0");
			builder.put(grammarAccess.getRosDistroListAccess().getGroup(), "rule__RosDistroList__Group__0");
			builder.put(grammarAccess.getRosDistroListAccess().getGroup_0(), "rule__RosDistroList__Group_0__0");
			builder.put(grammarAccess.getRosDistroListAccess().getGroup_1(), "rule__RosDistroList__Group_1__0");
			builder.put(grammarAccess.getBuildRequirementsAccess().getGroup(), "rule__BuildRequirements__Group__0");
			builder.put(grammarAccess.getReqBuildDependenciesAccess().getGroup(), "rule__ReqBuildDependencies__Group__0");
			builder.put(grammarAccess.getLocalPackageAccess().getGroup(), "rule__LocalPackage__Group__0");
			builder.put(grammarAccess.getGitPackageAccess().getGroup(), "rule__GitPackage__Group__0");
			builder.put(grammarAccess.getGitPackageAccess().getGroup_6(), "rule__GitPackage__Group_6__0");
			builder.put(grammarAccess.getReqDependencyRepositoriesAccess().getGroup(), "rule__ReqDependencyRepositories__Group__0");
			builder.put(grammarAccess.getAptRepositoryInstanceAccess().getGroup(), "rule__AptRepositoryInstance__Group__0");
			builder.put(grammarAccess.getAptRepositoryInstanceAccess().getGroup_8(), "rule__AptRepositoryInstance__Group_8__0");
			builder.put(grammarAccess.getStartCommandsAccess().getGroup(), "rule__StartCommands__Group__0");
			builder.put(grammarAccess.getListStartCommandsAccess().getGroup(), "rule__ListStartCommands__Group__0");
			builder.put(grammarAccess.getListStartCommandsAccess().getGroup_0(), "rule__ListStartCommands__Group_0__0");
			builder.put(grammarAccess.getListStartCommandsAccess().getGroup_1(), "rule__ListStartCommands__Group_1__0");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getGroup(), "rule__StackImplementationDescription__Group__0");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getGroup_5(), "rule__StackImplementationDescription__Group_5__0");
			builder.put(grammarAccess.getPackageDescriptionAccess().getGroup(), "rule__PackageDescription__Group__0");
			builder.put(grammarAccess.getImageDescriptionAccess().getGroup(), "rule__ImageDescription__Group__0");
			builder.put(grammarAccess.getImageTypeListAccess().getGroup(), "rule__ImageTypeList__Group__0");
			builder.put(grammarAccess.getImageTypeListAccess().getGroup_2(), "rule__ImageTypeList__Group_2__0");
			builder.put(grammarAccess.getImageVersionListAccess().getGroup(), "rule__ImageVersionList__Group__0");
			builder.put(grammarAccess.getImageVersionListAccess().getGroup_0(), "rule__ImageVersionList__Group_0__0");
			builder.put(grammarAccess.getImageVersionListAccess().getGroup_1(), "rule__ImageVersionList__Group_1__0");
			builder.put(grammarAccess.getRepositorySpecAccess().getGroup(), "rule__RepositorySpec__Group__0");
			builder.put(grammarAccess.getRepositoryAccess().getGroup(), "rule__Repository__Group__0");
			builder.put(grammarAccess.getRepositoryAccess().getGroup_2(), "rule__Repository__Group_2__0");
			builder.put(grammarAccess.getScalarNumberAccess().getGroup(), "rule__ScalarNumber__Group__0");
			builder.put(grammarAccess.getScalarUnitSizeAccess().getGroup_1(), "rule__ScalarUnitSize__Group_1__0");
			builder.put(grammarAccess.getYamlAccess().getContentAssignment_1(), "rule__Yaml__ContentAssignment_1");
			builder.put(grammarAccess.getYamlContentAccess().getRootContentAssignment(), "rule__YamlContent__RootContentAssignment");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getTypeAssignment_0(), "rule__MonolithicImplementationDescription__TypeAssignment_0");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getNameAssignment_3(), "rule__MonolithicImplementationDescription__NameAssignment_3");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getImpRosmodelAssignment_4_1(), "rule__MonolithicImplementationDescription__ImpRosmodelAssignment_4_1");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getDescriptionAssignment_6(), "rule__MonolithicImplementationDescription__DescriptionAssignment_6");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getModeAssignment_8(), "rule__MonolithicImplementationDescription__ModeAssignment_8");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getBranchAssignment_10(), "rule__MonolithicImplementationDescription__BranchAssignment_10");
			builder.put(grammarAccess.getMonolithicImplementationDescriptionAccess().getImplAssignment_11(), "rule__MonolithicImplementationDescription__ImplAssignment_11");
			builder.put(grammarAccess.getNewImplementationArtifactAccess().getNameAssignment_2(), "rule__NewImplementationArtifact__NameAssignment_2");
			builder.put(grammarAccess.getNewImplementationArtifactAccess().getDeployRequirementsAssignment_3(), "rule__NewImplementationArtifact__DeployRequirementsAssignment_3");
			builder.put(grammarAccess.getNewImplementationArtifactAccess().getResourceRequirementsAssignment_4(), "rule__NewImplementationArtifact__ResourceRequirementsAssignment_4");
			builder.put(grammarAccess.getNewImplementationArtifactAccess().getBuildRequirementsAssignment_5(), "rule__NewImplementationArtifact__BuildRequirementsAssignment_5");
			builder.put(grammarAccess.getNewImplementationArtifactAccess().getStartCommandsAssignment_6(), "rule__NewImplementationArtifact__StartCommandsAssignment_6");
			builder.put(grammarAccess.getImplementationArtifactDescriptionAccess().getTypeAssignment_0(), "rule__ImplementationArtifactDescription__TypeAssignment_0");
			builder.put(grammarAccess.getImplementationArtifactDescriptionAccess().getImplAssignment_3(), "rule__ImplementationArtifactDescription__ImplAssignment_3");
			builder.put(grammarAccess.getReuseImplementationArtifactAccess().getListsAssignment_1(), "rule__ReuseImplementationArtifact__ListsAssignment_1");
			builder.put(grammarAccess.getImplementationArtifactAbstractAccess().getImportedNamespaceAssignment_2(), "rule__ImplementationArtifactAbstract__ImportedNamespaceAssignment_2");
			builder.put(grammarAccess.getImplementationArtifactAbstractAccess().getNameAssignment_5(), "rule__ImplementationArtifactAbstract__NameAssignment_5");
			builder.put(grammarAccess.getImplementationArtifactAbstractAccess().getStartCommandsAssignment_6(), "rule__ImplementationArtifactAbstract__StartCommandsAssignment_6");
			builder.put(grammarAccess.getDeploymentRequirementsAccess().getNameAssignment_0(), "rule__DeploymentRequirements__NameAssignment_0");
			builder.put(grammarAccess.getDeploymentRequirementsAccess().getOperatingSystemAssignment_2(), "rule__DeploymentRequirements__OperatingSystemAssignment_2");
			builder.put(grammarAccess.getDeploymentRequirementsAccess().getProcessorArchitectureAssignment_3(), "rule__DeploymentRequirements__ProcessorArchitectureAssignment_3");
			builder.put(grammarAccess.getDeploymentRequirementsAccess().getRosDistroAssignment_4(), "rule__DeploymentRequirements__RosDistroAssignment_4");
			builder.put(grammarAccess.getResourceRequirementsAccess().getNameAssignment_0(), "rule__ResourceRequirements__NameAssignment_0");
			builder.put(grammarAccess.getResourceRequirementsAccess().getRequirementsAssignment_2(), "rule__ResourceRequirements__RequirementsAssignment_2");
			builder.put(grammarAccess.getResourceRequirementAccess().getNameAssignment_2(), "rule__ResourceRequirement__NameAssignment_2");
			builder.put(grammarAccess.getResourceRequirementAccess().getValueAssignment_5(), "rule__ResourceRequirement__ValueAssignment_5");
			builder.put(grammarAccess.getReqOperatingSystemAccess().getNameAssignment_2(), "rule__ReqOperatingSystem__NameAssignment_2");
			builder.put(grammarAccess.getReqOperatingSystemAccess().getValueAssignment_5(), "rule__ReqOperatingSystem__ValueAssignment_5");
			builder.put(grammarAccess.getOperatingSystemTypeListAccess().getChildrenAssignment_0_1(), "rule__OperatingSystemTypeList__ChildrenAssignment_0_1");
			builder.put(grammarAccess.getOperatingSystemTypeListAccess().getChildrenAssignment_1_1(), "rule__OperatingSystemTypeList__ChildrenAssignment_1_1");
			builder.put(grammarAccess.getReqProcessorArchitectureAccess().getNameAssignment_2(), "rule__ReqProcessorArchitecture__NameAssignment_2");
			builder.put(grammarAccess.getReqProcessorArchitectureAccess().getValueAssignment_5(), "rule__ReqProcessorArchitecture__ValueAssignment_5");
			builder.put(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenAssignment_0_1(), "rule__ProcessorArchitectureTypeList__ChildrenAssignment_0_1");
			builder.put(grammarAccess.getProcessorArchitectureTypeListAccess().getChildrenAssignment_1_1(), "rule__ProcessorArchitectureTypeList__ChildrenAssignment_1_1");
			builder.put(grammarAccess.getReqRosDistroAccess().getNameAssignment_2(), "rule__ReqRosDistro__NameAssignment_2");
			builder.put(grammarAccess.getReqRosDistroAccess().getValueAssignment_5(), "rule__ReqRosDistro__ValueAssignment_5");
			builder.put(grammarAccess.getRosDistroListAccess().getChildrenAssignment_0_1(), "rule__RosDistroList__ChildrenAssignment_0_1");
			builder.put(grammarAccess.getRosDistroListAccess().getChildrenAssignment_1_1(), "rule__RosDistroList__ChildrenAssignment_1_1");
			builder.put(grammarAccess.getBuildRequirementsAccess().getNameAssignment_0(), "rule__BuildRequirements__NameAssignment_0");
			builder.put(grammarAccess.getBuildRequirementsAccess().getBuildDependenciesAssignment_3(), "rule__BuildRequirements__BuildDependenciesAssignment_3");
			builder.put(grammarAccess.getBuildRequirementsAccess().getDependencyRepositoriesAssignment_4(), "rule__BuildRequirements__DependencyRepositoriesAssignment_4");
			builder.put(grammarAccess.getReqBuildDependenciesAccess().getNameAssignment_0(), "rule__ReqBuildDependencies__NameAssignment_0");
			builder.put(grammarAccess.getReqBuildDependenciesAccess().getDependenciesAssignment_1(), "rule__ReqBuildDependencies__DependenciesAssignment_1");
			builder.put(grammarAccess.getLocalPackageAccess().getImportedNamespaceAssignment_2(), "rule__LocalPackage__ImportedNamespaceAssignment_2");
			builder.put(grammarAccess.getLocalPackageAccess().getNameAssignment_5(), "rule__LocalPackage__NameAssignment_5");
			builder.put(grammarAccess.getGitPackageAccess().getPathAssignment_2(), "rule__GitPackage__PathAssignment_2");
			builder.put(grammarAccess.getGitPackageAccess().getNameAssignment_5(), "rule__GitPackage__NameAssignment_5");
			builder.put(grammarAccess.getGitPackageAccess().getBranchAssignment_6_1(), "rule__GitPackage__BranchAssignment_6_1");
			builder.put(grammarAccess.getReqDependencyRepositoriesAccess().getNameAssignment_0(), "rule__ReqDependencyRepositories__NameAssignment_0");
			builder.put(grammarAccess.getReqDependencyRepositoriesAccess().getChildrenAssignment_2(), "rule__ReqDependencyRepositories__ChildrenAssignment_2");
			builder.put(grammarAccess.getAptRepositoryInstanceAccess().getNameAssignment_2(), "rule__AptRepositoryInstance__NameAssignment_2");
			builder.put(grammarAccess.getAptRepositoryInstanceAccess().getKeyLinkAssignment_5(), "rule__AptRepositoryInstance__KeyLinkAssignment_5");
			builder.put(grammarAccess.getAptRepositoryInstanceAccess().getRepositoryPathAssignment_7(), "rule__AptRepositoryInstance__RepositoryPathAssignment_7");
			builder.put(grammarAccess.getAptRepositoryInstanceAccess().getUpdateRosDepAssignment_8_1(), "rule__AptRepositoryInstance__UpdateRosDepAssignment_8_1");
			builder.put(grammarAccess.getStartCommandsAccess().getNameAssignment_0(), "rule__StartCommands__NameAssignment_0");
			builder.put(grammarAccess.getStartCommandsAccess().getStartCommandsAssignment_1(), "rule__StartCommands__StartCommandsAssignment_1");
			builder.put(grammarAccess.getListStartCommandsAccess().getChildrenAssignment_0_1(), "rule__ListStartCommands__ChildrenAssignment_0_1");
			builder.put(grammarAccess.getListStartCommandsAccess().getChildrenAssignment_1_1(), "rule__ListStartCommands__ChildrenAssignment_1_1");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getTypeAssignment_0(), "rule__StackImplementationDescription__TypeAssignment_0");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getNameAssignment_4(), "rule__StackImplementationDescription__NameAssignment_4");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getImpRosmodelAssignment_5_1(), "rule__StackImplementationDescription__ImpRosmodelAssignment_5_1");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getDescriptionAssignment_7(), "rule__StackImplementationDescription__DescriptionAssignment_7");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getModeAssignment_9(), "rule__StackImplementationDescription__ModeAssignment_9");
			builder.put(grammarAccess.getStackImplementationDescriptionAccess().getImplAssignment_10(), "rule__StackImplementationDescription__ImplAssignment_10");
			builder.put(grammarAccess.getPackageDescriptionAccess().getTypeAssignment_0(), "rule__PackageDescription__TypeAssignment_0");
			builder.put(grammarAccess.getPackageDescriptionAccess().getImageDescriptionAssignment_5(), "rule__PackageDescription__ImageDescriptionAssignment_5");
			builder.put(grammarAccess.getPackageDescriptionAccess().getRepositoryDescriptionAssignment_8(), "rule__PackageDescription__RepositoryDescriptionAssignment_8");
			builder.put(grammarAccess.getImageDescriptionAccess().getTypesAssignment_1(), "rule__ImageDescription__TypesAssignment_1");
			builder.put(grammarAccess.getImageDescriptionAccess().getNameAssignment_3(), "rule__ImageDescription__NameAssignment_3");
			builder.put(grammarAccess.getImageDescriptionAccess().getImageVersionsAssignment_5(), "rule__ImageDescription__ImageVersionsAssignment_5");
			builder.put(grammarAccess.getImageTypeListAccess().getChildrenAssignment_1(), "rule__ImageTypeList__ChildrenAssignment_1");
			builder.put(grammarAccess.getImageTypeListAccess().getChildrenAssignment_2_1(), "rule__ImageTypeList__ChildrenAssignment_2_1");
			builder.put(grammarAccess.getImageVersionListAccess().getChildrenAssignment_0_1(), "rule__ImageVersionList__ChildrenAssignment_0_1");
			builder.put(grammarAccess.getImageVersionListAccess().getChildrenAssignment_1_1(), "rule__ImageVersionList__ChildrenAssignment_1_1");
			builder.put(grammarAccess.getRepositoryDescriptionAccess().getSpecAssignment(), "rule__RepositoryDescription__SpecAssignment");
			builder.put(grammarAccess.getRepositorySpecAccess().getNameAssignment_2(), "rule__RepositorySpec__NameAssignment_2");
			builder.put(grammarAccess.getRepositorySpecAccess().getRepositoryAssignment_4(), "rule__RepositorySpec__RepositoryAssignment_4");
			builder.put(grammarAccess.getRepositoryAccess().getTypeAssignment_1(), "rule__Repository__TypeAssignment_1");
			builder.put(grammarAccess.getRepositoryAccess().getPathAssignment_2_1(), "rule__Repository__PathAssignment_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DeployModelGrammarAccess grammarAccess;

	@Override
	protected InternalDeployModelParser createParser() {
		InternalDeployModelParser result = new InternalDeployModelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new DeployModelTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DeployModelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DeployModelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
